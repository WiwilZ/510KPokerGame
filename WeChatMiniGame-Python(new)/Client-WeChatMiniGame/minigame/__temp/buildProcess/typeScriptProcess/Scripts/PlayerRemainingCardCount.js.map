{"version":3,"sources":["__temp/buildProcess/inlineFunctionProcess/Scripts/PlayerRemainingCardCount.ts"],"names":[],"mappings":";;;AAAA,iCAA4B;AAC5B,qCAAoC;AAIpC;IAAsD,oDAAa;IAAnE;;IAuDA,CAAC;IA5CU,0CAAO,GAAd;QACI,IAAI,CAAC,IAAI,EAAE,CAAC;QAEZ,gBAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACzE,gBAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAEzE,IAAI,CAAC,KAAK,EAAE,CAAC;IACjB,CAAC;IAEM,4CAAS,GAAhB;QACI,gBAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,aAAa,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACrF,gBAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,aAAa,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;IACzF,CAAC;IAEO,uCAAI,GAAZ;QACI,IAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;QACxD,IAAI,CAAC,IAAI,GAAG,CAAC,iBAAO,CAAC,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QAE1E,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,gBAAM,CAAC,QAAQ,CAAC,CAAC;QACxD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,gBAAM,CAAC,OAAO,CAAC,CAAC;QAErF,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACtD,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1D,CAAC;IAEO,wCAAK,GAAb;QACI,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IACpB,CAAC;IAEO,+CAAY,GAApB;QACI,IAAI,CAAC,KAAK,EAAE,CAAC;IACjB,CAAC;IAEO,+CAAY,GAApB,UAAqB,EAAqB;YAAnB,MAAM,YAAA,EAAE,SAAS,eAAA;QACpC,IAAI,SAAS,KAAK,IAAI,CAAC,IAAI,EAAE;YACzB,IAAI,CAAC,KAAK,IAAI,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC;YAClC,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,EAAE;gBACjB,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC;gBAC3B,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;aAC3C;SACJ;IACL,CAAC;IAtDgB,wBAAwB;QAD5C,gBAAM,CAAC,UAAU,CAAC,SAAS,CAAC,0BAA0B,CAAC;OACnC,wBAAwB,CAuD5C;IAAD,+BAAC;CAvDD,AAuDC,CAvDqD,gBAAM,CAAC,MAAM,GAuDlE;kBAvDoB,wBAAwB","file":"PlayerRemainingCardCount.js","sourcesContent":["import engine from \"engine\";\nimport { databus } from \"./Databus\";\n\n\n@engine.decorators.serialize(\"PlayerRemainingCardCount\")\nexport default class PlayerRemainingCardCount extends engine.Script {\n    private sprite: engine.UISprite;\n    private label: engine.UILabel;\n\n    private seat: number;\n    private count: number;\n\n    private playerExitHandler;\n    private playerPlayHandler;\n\n\n    public onAwake() {\n        this.init();\n\n        engine.game.customEventEmitter.on('player_exit', this.playerExitHandler);\n        engine.game.customEventEmitter.on('player_play', this.playerPlayHandler);\n\n        this.reset();\n    }\n\n    public onDestroy() {\n        engine.game.customEventEmitter.removeListener('player_exit', this.playerExitHandler);\n        engine.game.customEventEmitter.removeListener('player_play', this.playerPlayHandler);\n    }\n\n    private init() {\n        const name = this.entity.transform2D.parent.entity.name;\n        this.seat = (databus.mySeat + parseInt(name.charAt(name.length - 1))) % 4;\n\n        this.sprite = this.entity.getComponent(engine.UISprite);\n        this.label = this.entity.transform2D.children[0].entity.getComponent(engine.UILabel);\n\n        this.playerExitHandler = this.onPlayerExit.bind(this);\n        this.playerPlayHandler = this.onPlayerPlay.bind(this);\n    }\n\n    private reset() {\n        this.sprite.visible = false;\n        this.label.text = '';\n        this.count = 26;\n    }\n\n    private onPlayerExit() {\n        this.reset();\n    }\n\n    private onPlayerPlay({ action, from_seat }) {\n        if (from_seat === this.seat) {\n            this.count -= action.cards.length;\n            if (this.count <= 5) {\n                this.sprite.visible = true;\n                this.label.text = this.count.toString();\n            }\n        }\n    }\n}\n"]}