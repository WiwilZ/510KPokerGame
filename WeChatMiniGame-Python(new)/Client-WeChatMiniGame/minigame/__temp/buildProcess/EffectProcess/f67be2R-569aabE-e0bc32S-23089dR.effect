{"version":2.0,"name":"System::Effect::Terrain3","properties":[{"key":0,"type":2,"default":[1,1,1]},{"key":1,"type":3,"default":[0.5,0.5,0.5,1.0]},{"key":2,"type":0,"default":[0.1]},{"key":3,"type":3,"default":[1,1,0,0]},{"key":4,"type":3,"default":[1,1,0,0]},{"key":5,"type":3,"default":[1,1,0,0]},{"key":6,"type":3,"default":[1,1,0,0]}],"images":[{"key":7,"type":0,"default":"white"},{"key":8,"type":0,"default":"white"},{"key":9,"type":0,"default":"white"},{"key":10,"type":0,"default":"white"}],"defaultRenderQueue":2000,"passes":[{"renderStates":{"cullOn":true,"blendOn":false,"cullFace":2},"macros":{"__USE_RECEIVE_SHADOW_CSM":2,"__USE_RECEIVE_SHADOW_PCSS":3,"__USE_RECEIVE_SHADOW":1,"__USE_MESH_COLOR":0},"lightMode":"ForwardBase","useMaterialRenderStates":true,"variants":{"0":0,"8":1,"4":2,"2":3,"1":4,"9":5,"5":6,"3":7}}],"variants":[{"shaders":[0,1],"uniformBlock":[0]},{"shaders":[2,3],"uniformBlock":[0]},{"shaders":[2,4],"uniformBlock":[0]},{"shaders":[2,5],"uniformBlock":[0]},{"shaders":[6,1],"uniformBlock":[0]},{"shaders":[7,3],"uniformBlock":[0]},{"shaders":[7,4],"uniformBlock":[0]},{"shaders":[7,5],"uniformBlock":[0]}],"shaders":["#version 100\n\nuniform mat4 u_world;\nuniform vec4 u_lightMapScaleOffset;\nuniform float u_lightCountFA;\nuniform vec4 u_lightPosFA[4];\nuniform vec4 u_lightColorFA[4];\nuniform vec4 u_lightAttenFA[4];\nuniform vec4 u_spotDirFA[4];\n\n\nuniform mat4 u_view;\nuniform mat4 u_viewInverse;\nuniform mat4 u_vp;\nuniform mat4 u_projection;\nuniform mat4 u_lightSpaceMatrix;\nuniform vec4 u_fogInfos;\nuniform vec3 u_fogColor;\nuniform float u_gameTime;\nuniform float u_aspect;\nuniform vec3 u_ambientLight;\nuniform vec3 u_lightDir;\nuniform vec3 u_lightColor;\nuniform vec3 u_shadowColor;\nuniform float u_shadowStrength;\nuniform float u_shadowBias;\nuniform float u_lightWidthPCSS;\nuniform float u_blockSizePCSS;\nuniform vec4 u_csmFarBounds;\nuniform vec4 u_shadowTilingOffsets[4];\nuniform mat4 u_csmLightSpaceMatrices[4];\nuniform vec3 u_SH[9];\n\n\nuniform vec4 _SpecColor;\nuniform vec4 _Control_ST;\nuniform vec4 _Splat0_ST;\nuniform vec4 _Splat1_ST;\nuniform vec4 _Splat2_ST;\nuniform vec3 _Color;\nuniform float _Shininess;\n\n\nattribute vec4 a_position;\nattribute vec2 a_texCoord;\nattribute vec3 a_normal;\nvarying vec2 varying_UVControl;\nvarying vec2 varying_UVSplat0;\nvarying vec2 varying_UVSplat1;\nvarying vec2 varying_UVSplat2;\nvarying vec3 varying_LightDir;\nvarying vec3 varying_ViewDir;\nvarying vec3 varying_WorldNormal;\n\nvoid main()\n{\n    vec4 _573 = u_world * a_position;\n    vec2 _435 = vec2(a_texCoord.x, a_texCoord.y - 1.0);\n    gl_Position = u_projection * (u_view * _573);\n    varying_UVControl = (_435 * _Control_ST.xy) + vec2(_Control_ST.z, 1.0 - _Control_ST.w);\n    varying_UVSplat0 = (_435 * _Splat0_ST.xy) + vec2(_Splat0_ST.z, 1.0 - _Splat0_ST.w);\n    varying_UVSplat1 = (_435 * _Splat1_ST.xy) + vec2(_Splat1_ST.z, 1.0 - _Splat1_ST.w);\n    varying_UVSplat2 = (_435 * _Splat2_ST.xy) + vec2(_Splat2_ST.z, 1.0 - _Splat2_ST.w);\n    varying_LightDir = u_lightDir;\n    varying_ViewDir = normalize(vec3(u_viewInverse[3].x, u_viewInverse[3].y, u_viewInverse[3].z) - _573.xyz);\n    varying_WorldNormal = normalize(mat3(u_world[0].xyz, u_world[1].xyz, u_world[2].xyz) * a_normal);\n}\n\n","#version 100\nprecision mediump float;\nprecision highp int;\n\nuniform highp vec4 _SpecColor;\nuniform highp vec4 _Control_ST;\nuniform highp vec4 _Splat0_ST;\nuniform highp vec4 _Splat1_ST;\nuniform highp vec4 _Splat2_ST;\nuniform highp vec3 _Color;\nuniform highp float _Shininess;\n\n\nuniform highp mat4 u_view;\nuniform highp mat4 u_viewInverse;\nuniform highp mat4 u_vp;\nuniform highp mat4 u_projection;\nuniform highp mat4 u_lightSpaceMatrix;\nuniform highp vec4 u_fogInfos;\nuniform highp vec3 u_fogColor;\nuniform highp float u_gameTime;\nuniform highp float u_aspect;\nuniform highp vec3 u_ambientLight;\nuniform highp vec3 u_lightDir;\nuniform highp vec3 u_lightColor;\nuniform highp vec3 u_shadowColor;\nuniform highp float u_shadowStrength;\nuniform highp float u_shadowBias;\nuniform highp float u_lightWidthPCSS;\nuniform highp float u_blockSizePCSS;\nuniform highp vec4 u_csmFarBounds;\nuniform highp vec4 u_shadowTilingOffsets[4];\nuniform highp mat4 u_csmLightSpaceMatrices[4];\nuniform highp vec3 u_SH[9];\n\n\nuniform highp sampler2D _Control;\nuniform highp sampler2D _Splat0;\nuniform highp sampler2D _Splat1;\nuniform highp sampler2D _Splat2;\n\nvarying highp vec2 varying_UVControl;\nvarying highp vec2 varying_UVSplat0;\nvarying highp vec2 varying_UVSplat1;\nvarying highp vec2 varying_UVSplat2;\nvarying highp vec3 varying_LightDir;\nvarying highp vec3 varying_ViewDir;\nvarying highp vec3 varying_WorldNormal;\n\nvoid main()\n{\n    highp vec4 _357 = texture2D(_Control, varying_UVControl);\n    highp vec3 _399 = normalize(varying_LightDir);\n    highp vec3 _405 = normalize(varying_WorldNormal);\n    gl_FragData[0] = vec4(((((texture2D(_Splat0, varying_UVSplat0).xyz * _357.x) + (texture2D(_Splat1, varying_UVSplat1).xyz * _357.y)) + (texture2D(_Splat2, varying_UVSplat2).xyz * _357.z)) * _Color) * ((u_ambientLight + ((u_lightColor * max(0.0, dot(_399, _405))) * 1.0)) + ((u_lightColor * pow(max(0.0, dot(normalize(normalize(varying_ViewDir) + _399), _405)), _Shininess * 128.0)) * _SpecColor.xyz)), 1.0);\n}\n\n","#version 100\n\nuniform mat4 u_world;\nuniform vec4 u_lightMapScaleOffset;\nuniform float u_lightCountFA;\nuniform vec4 u_lightPosFA[4];\nuniform vec4 u_lightColorFA[4];\nuniform vec4 u_lightAttenFA[4];\nuniform vec4 u_spotDirFA[4];\n\n\nuniform mat4 u_view;\nuniform mat4 u_viewInverse;\nuniform mat4 u_vp;\nuniform mat4 u_projection;\nuniform mat4 u_lightSpaceMatrix;\nuniform vec4 u_fogInfos;\nuniform vec3 u_fogColor;\nuniform float u_gameTime;\nuniform float u_aspect;\nuniform vec3 u_ambientLight;\nuniform vec3 u_lightDir;\nuniform vec3 u_lightColor;\nuniform vec3 u_shadowColor;\nuniform float u_shadowStrength;\nuniform float u_shadowBias;\nuniform float u_lightWidthPCSS;\nuniform float u_blockSizePCSS;\nuniform vec4 u_csmFarBounds;\nuniform vec4 u_shadowTilingOffsets[4];\nuniform mat4 u_csmLightSpaceMatrices[4];\nuniform vec3 u_SH[9];\n\n\nuniform vec4 _SpecColor;\nuniform vec4 _Control_ST;\nuniform vec4 _Splat0_ST;\nuniform vec4 _Splat1_ST;\nuniform vec4 _Splat2_ST;\nuniform vec3 _Color;\nuniform float _Shininess;\n\n\nattribute vec4 a_position;\nattribute vec2 a_texCoord;\nattribute vec3 a_normal;\nvarying vec2 varying_UVControl;\nvarying vec2 varying_UVSplat0;\nvarying vec2 varying_UVSplat1;\nvarying vec2 varying_UVSplat2;\nvarying vec3 varying_LightDir;\nvarying vec3 varying_ViewDir;\nvarying vec3 varying_WorldNormal;\nvarying vec3 varying_ShadowPosition;\n\nvoid main()\n{\n    vec4 _583 = u_world * a_position;\n    vec2 _442 = vec2(a_texCoord.x, a_texCoord.y - 1.0);\n    vec3 _522 = _583.xyz;\n    gl_Position = u_projection * (u_view * _583);\n    varying_UVControl = (_442 * _Control_ST.xy) + vec2(_Control_ST.z, 1.0 - _Control_ST.w);\n    varying_UVSplat0 = (_442 * _Splat0_ST.xy) + vec2(_Splat0_ST.z, 1.0 - _Splat0_ST.w);\n    varying_UVSplat1 = (_442 * _Splat1_ST.xy) + vec2(_Splat1_ST.z, 1.0 - _Splat1_ST.w);\n    varying_UVSplat2 = (_442 * _Splat2_ST.xy) + vec2(_Splat2_ST.z, 1.0 - _Splat2_ST.w);\n    varying_LightDir = u_lightDir;\n    varying_ViewDir = normalize(vec3(u_viewInverse[3].x, u_viewInverse[3].y, u_viewInverse[3].z) - _522);\n    varying_WorldNormal = normalize(mat3(u_world[0].xyz, u_world[1].xyz, u_world[2].xyz) * a_normal);\n    varying_ShadowPosition = _522;\n}\n\n","#version 100\nprecision mediump float;\nprecision highp int;\n\nuniform highp mat4 u_view;\nuniform highp mat4 u_viewInverse;\nuniform highp mat4 u_vp;\nuniform highp mat4 u_projection;\nuniform highp mat4 u_lightSpaceMatrix;\nuniform highp vec4 u_fogInfos;\nuniform highp vec3 u_fogColor;\nuniform highp float u_gameTime;\nuniform highp float u_aspect;\nuniform highp vec3 u_ambientLight;\nuniform highp vec3 u_lightDir;\nuniform highp vec3 u_lightColor;\nuniform highp vec3 u_shadowColor;\nuniform highp float u_shadowStrength;\nuniform highp float u_shadowBias;\nuniform highp float u_lightWidthPCSS;\nuniform highp float u_blockSizePCSS;\nuniform highp vec4 u_csmFarBounds;\nuniform highp vec4 u_shadowTilingOffsets[4];\nuniform highp mat4 u_csmLightSpaceMatrices[4];\nuniform highp vec3 u_SH[9];\n\n\nuniform highp vec4 _SpecColor;\nuniform highp vec4 _Control_ST;\nuniform highp vec4 _Splat0_ST;\nuniform highp vec4 _Splat1_ST;\nuniform highp vec4 _Splat2_ST;\nuniform highp vec3 _Color;\nuniform highp float _Shininess;\n\n\nuniform highp sampler2D _Control;\nuniform highp sampler2D _Splat0;\nuniform highp sampler2D _Splat1;\nuniform highp sampler2D _Splat2;\nuniform highp sampler2D u_shadowMapTex;\n\nvarying highp vec2 varying_UVControl;\nvarying highp vec2 varying_UVSplat0;\nvarying highp vec2 varying_UVSplat1;\nvarying highp vec2 varying_UVSplat2;\nvarying highp vec3 varying_LightDir;\nvarying highp vec3 varying_ViewDir;\nvarying highp vec3 varying_WorldNormal;\nvarying highp vec3 varying_ShadowPosition;\n\nvoid main()\n{\n    highp vec4 _629 = texture2D(_Control, varying_UVControl);\n    highp vec4 _635 = texture2D(_Splat0, varying_UVSplat0);\n    highp vec4 _642 = texture2D(_Splat1, varying_UVSplat1);\n    highp vec4 _649 = texture2D(_Splat2, varying_UVSplat2);\n    highp vec3 _671 = normalize(varying_LightDir);\n    highp vec3 _677 = normalize(varying_WorldNormal);\n    highp float _1070 = 0.0;\n    for (int SPIRV_Cross_Dummy278 = 0; SPIRV_Cross_Dummy278 < 1; SPIRV_Cross_Dummy278++)\n    {\n        highp vec3 _771 = ((u_csmLightSpaceMatrices[0] * vec4(varying_ShadowPosition, 1.0)).xyz * 0.5) + vec3(0.5);\n        highp float _774 = _771.z;\n        highp vec2 _815 = vec2(u_blockSizePCSS);\n        highp vec2 _823 = _771.xy;\n        highp vec2 _824 = (_815 * vec2(-0.0004599688691087067127227783203125, -0.0001948545686900615692138671875)) + _823;\n        highp float _1076 = 0.0;\n        for (int SPIRV_Cross_Dummy304 = 0; SPIRV_Cross_Dummy304 < 1; SPIRV_Cross_Dummy304++)\n        {\n            highp float _861 = _824.x;\n            highp float _865 = _824.y;\n            bool _879 = ((((_774 + step(_861, 0.001000000047497451305389404296875)) + step(_865, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _861)) + step(0.999000012874603271484375, _865)) > 1.0;\n            if (_879)\n            {\n                _1076 = 1.0;\n                break;\n            }\n            _1076 = _879 ? 1.0 : dot(texture2D(u_shadowMapTex, _824.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp float _832 = _774 - u_shadowBias;\n        bool _834 = _832 > _1076;\n        highp float _3477 = _834 ? _1076 : 0.0;\n        highp float _3478 = float(_834);\n        highp vec2 _1947 = (_815 * vec2(0.0004617119557224214076995849609375, -0.00037544299266301095485687255859375)) + _824.xy;\n        highp float _1978 = 0.0;\n        for (int SPIRV_Cross_Dummy355 = 0; SPIRV_Cross_Dummy355 < 1; SPIRV_Cross_Dummy355++)\n        {\n            highp float _1951 = _1947.x;\n            highp float _1954 = _1947.y;\n            bool _1965 = ((((_774 + step(_1951, 0.001000000047497451305389404296875)) + step(_1954, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _1951)) + step(0.999000012874603271484375, _1954)) > 1.0;\n            if (_1965)\n            {\n                _1978 = 1.0;\n                break;\n            }\n            _1978 = _1965 ? 1.0 : dot(texture2D(u_shadowMapTex, _1947.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp float _1987 = 0.0;\n        highp float _1988 = 0.0;\n        if (_832 > _1978)\n        {\n            _1987 = _3477 + _1978;\n            _1988 = _3478 + 1.0;\n        }\n        else\n        {\n            _1987 = _3477;\n            _1988 = _3478;\n        }\n        highp vec2 _2009 = (_815 * vec2(-4.598833038471639156341552734375e-05, -0.00045380307710729539394378662109375)) + _1947.xy;\n        highp float _2040 = 0.0;\n        for (int SPIRV_Cross_Dummy424 = 0; SPIRV_Cross_Dummy424 < 1; SPIRV_Cross_Dummy424++)\n        {\n            highp float _2013 = _2009.x;\n            highp float _2016 = _2009.y;\n            bool _2027 = ((((_774 + step(_2013, 0.001000000047497451305389404296875)) + step(_2016, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _2013)) + step(0.999000012874603271484375, _2016)) > 1.0;\n            if (_2027)\n            {\n                _2040 = 1.0;\n                break;\n            }\n            _2040 = _2027 ? 1.0 : dot(texture2D(u_shadowMapTex, _2009.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp float _2049 = 0.0;\n        highp float _2050 = 0.0;\n        if (_832 > _2040)\n        {\n            _2049 = _1987 + _2040;\n            _2050 = _1988 + 1.0;\n        }\n        else\n        {\n            _2049 = _1987;\n            _2050 = _1988;\n        }\n        highp vec2 _2071 = (_815 * vec2(0.0001684371964074671268463134765625, 0.0001434949226677417755126953125)) + _2009.xy;\n        highp float _2102 = 0.0;\n        for (int SPIRV_Cross_Dummy493 = 0; SPIRV_Cross_Dummy493 < 1; SPIRV_Cross_Dummy493++)\n        {\n            highp float _2075 = _2071.x;\n            highp float _2078 = _2071.y;\n            bool _2089 = ((((_774 + step(_2075, 0.001000000047497451305389404296875)) + step(_2078, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _2075)) + step(0.999000012874603271484375, _2078)) > 1.0;\n            if (_2089)\n            {\n                _2102 = 1.0;\n                break;\n            }\n            _2102 = _2089 ? 1.0 : dot(texture2D(u_shadowMapTex, _2071.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp float _2111 = 0.0;\n        highp float _2112 = 0.0;\n        if (_832 > _2102)\n        {\n            _2111 = _2049 + _2102;\n            _2112 = _2050 + 1.0;\n        }\n        else\n        {\n            _2111 = _2049;\n            _2112 = _2050;\n        }\n        highp vec2 _2133 = (_815 * vec2(-0.0004472098662517964839935302734375, 0.000223493319936096668243408203125)) + _2071.xy;\n        highp float _2164 = 0.0;\n        for (int SPIRV_Cross_Dummy562 = 0; SPIRV_Cross_Dummy562 < 1; SPIRV_Cross_Dummy562++)\n        {\n            highp float _2137 = _2133.x;\n            highp float _2140 = _2133.y;\n            bool _2151 = ((((_774 + step(_2137, 0.001000000047497451305389404296875)) + step(_2140, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _2137)) + step(0.999000012874603271484375, _2140)) > 1.0;\n            if (_2151)\n            {\n                _2164 = 1.0;\n                break;\n            }\n            _2164 = _2151 ? 1.0 : dot(texture2D(u_shadowMapTex, _2133.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp float _2173 = 0.0;\n        highp float _2174 = 0.0;\n        if (_832 > _2164)\n        {\n            _2173 = _2111 + _2164;\n            _2174 = _2112 + 1.0;\n        }\n        else\n        {\n            _2173 = _2111;\n            _2174 = _2112;\n        }\n        highp vec2 _2195 = (_815 * vec2(-0.000398165197111666202545166015625, -0.0004292600788176059722900390625)) + _2133.xy;\n        highp float _2226 = 0.0;\n        for (int SPIRV_Cross_Dummy631 = 0; SPIRV_Cross_Dummy631 < 1; SPIRV_Cross_Dummy631++)\n        {\n            highp float _2199 = _2195.x;\n            highp float _2202 = _2195.y;\n            bool _2213 = ((((_774 + step(_2199, 0.001000000047497451305389404296875)) + step(_2202, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _2199)) + step(0.999000012874603271484375, _2202)) > 1.0;\n            if (_2213)\n            {\n                _2226 = 1.0;\n                break;\n            }\n            _2226 = _2213 ? 1.0 : dot(texture2D(u_shadowMapTex, _2195.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp float _2235 = 0.0;\n        highp float _2236 = 0.0;\n        if (_832 > _2226)\n        {\n            _2235 = _2173 + _2226;\n            _2236 = _2174 + 1.0;\n        }\n        else\n        {\n            _2235 = _2173;\n            _2236 = _2174;\n        }\n        highp vec2 _2257 = (_815 * vec2(-0.0001869020634330809116363525390625, 0.000135140842758119106292724609375)) + _2195.xy;\n        highp float _2288 = 0.0;\n        for (int SPIRV_Cross_Dummy700 = 0; SPIRV_Cross_Dummy700 < 1; SPIRV_Cross_Dummy700++)\n        {\n            highp float _2261 = _2257.x;\n            highp float _2264 = _2257.y;\n            bool _2275 = ((((_774 + step(_2261, 0.001000000047497451305389404296875)) + step(_2264, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _2261)) + step(0.999000012874603271484375, _2264)) > 1.0;\n            if (_2275)\n            {\n                _2288 = 1.0;\n                break;\n            }\n            _2288 = _2275 ? 1.0 : dot(texture2D(u_shadowMapTex, _2257.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp float _2297 = 0.0;\n        highp float _2298 = 0.0;\n        if (_832 > _2288)\n        {\n            _2297 = _2235 + _2288;\n            _2298 = _2236 + 1.0;\n        }\n        else\n        {\n            _2297 = _2235;\n            _2298 = _2236;\n        }\n        highp vec2 _2319 = (_815 * vec2(0.000475998036563396453857421875, 0.000369376852177083492279052734375)) + _2257.xy;\n        highp float _2350 = 0.0;\n        for (int SPIRV_Cross_Dummy769 = 0; SPIRV_Cross_Dummy769 < 1; SPIRV_Cross_Dummy769++)\n        {\n            highp float _2323 = _2319.x;\n            highp float _2326 = _2319.y;\n            bool _2337 = ((((_774 + step(_2323, 0.001000000047497451305389404296875)) + step(_2326, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _2323)) + step(0.999000012874603271484375, _2326)) > 1.0;\n            if (_2337)\n            {\n                _2350 = 1.0;\n                break;\n            }\n            _2350 = _2337 ? 1.0 : dot(texture2D(u_shadowMapTex, _2319.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp float _2359 = 0.0;\n        highp float _2360 = 0.0;\n        if (_832 > _2350)\n        {\n            _2359 = _2297 + _2350;\n            _2360 = _2298 + 1.0;\n        }\n        else\n        {\n            _2359 = _2297;\n            _2360 = _2298;\n        }\n        highp vec2 _2381 = (_815 * vec2(0.000216422486118972301483154296875, -0.000476130633614957332611083984375)) + _2319.xy;\n        highp float _2412 = 0.0;\n        for (int SPIRV_Cross_Dummy838 = 0; SPIRV_Cross_Dummy838 < 1; SPIRV_Cross_Dummy838++)\n        {\n            highp float _2385 = _2381.x;\n            highp float _2388 = _2381.y;\n            bool _2399 = ((((_774 + step(_2385, 0.001000000047497451305389404296875)) + step(_2388, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _2385)) + step(0.999000012874603271484375, _2388)) > 1.0;\n            if (_2399)\n            {\n                _2412 = 1.0;\n                break;\n            }\n            _2412 = _2399 ? 1.0 : dot(texture2D(u_shadowMapTex, _2381.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp float _2421 = 0.0;\n        highp float _2422 = 0.0;\n        if (_832 > _2412)\n        {\n            _2421 = _2359 + _2412;\n            _2422 = _2360 + 1.0;\n        }\n        else\n        {\n            _2421 = _2359;\n            _2422 = _2360;\n        }\n        highp vec2 _2443 = (_815 * vec2(0.000262416899204254150390625, -0.00023131552734412252902984619140625)) + _2381.xy;\n        highp float _2474 = 0.0;\n        for (int SPIRV_Cross_Dummy907 = 0; SPIRV_Cross_Dummy907 < 1; SPIRV_Cross_Dummy907++)\n        {\n            highp float _2447 = _2443.x;\n            highp float _2450 = _2443.y;\n            bool _2461 = ((((_774 + step(_2447, 0.001000000047497451305389404296875)) + step(_2450, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _2447)) + step(0.999000012874603271484375, _2450)) > 1.0;\n            if (_2461)\n            {\n                _2474 = 1.0;\n                break;\n            }\n            _2474 = _2461 ? 1.0 : dot(texture2D(u_shadowMapTex, _2443.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp float _2483 = 0.0;\n        highp float _2484 = 0.0;\n        if (_832 > _2474)\n        {\n            _2483 = _2421 + _2474;\n            _2484 = _2422 + 1.0;\n        }\n        else\n        {\n            _2483 = _2421;\n            _2484 = _2422;\n        }\n        highp vec2 _2505 = (_815 * vec2(-0.000129379448480904102325439453125, -0.00020455577760003507137298583984375)) + _2443.xy;\n        highp float _2536 = 0.0;\n        for (int SPIRV_Cross_Dummy976 = 0; SPIRV_Cross_Dummy976 < 1; SPIRV_Cross_Dummy976++)\n        {\n            highp float _2509 = _2505.x;\n            highp float _2512 = _2505.y;\n            bool _2523 = ((((_774 + step(_2509, 0.001000000047497451305389404296875)) + step(_2512, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _2509)) + step(0.999000012874603271484375, _2512)) > 1.0;\n            if (_2523)\n            {\n                _2536 = 1.0;\n                break;\n            }\n            _2536 = _2523 ? 1.0 : dot(texture2D(u_shadowMapTex, _2505.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp float _2545 = 0.0;\n        highp float _2546 = 0.0;\n        if (_832 > _2536)\n        {\n            _2545 = _2483 + _2536;\n            _2546 = _2484 + 1.0;\n        }\n        else\n        {\n            _2545 = _2483;\n            _2546 = _2484;\n        }\n        highp vec2 _2567 = (_815 * vec2(0.0003867066116072237491607666015625, 9.32138063944876194000244140625e-05)) + _2505.xy;\n        highp float _2598 = 0.0;\n        for (int SPIRV_Cross_Dummy1045 = 0; SPIRV_Cross_Dummy1045 < 1; SPIRV_Cross_Dummy1045++)\n        {\n            highp float _2571 = _2567.x;\n            highp float _2574 = _2567.y;\n            bool _2585 = ((((_774 + step(_2571, 0.001000000047497451305389404296875)) + step(_2574, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _2571)) + step(0.999000012874603271484375, _2574)) > 1.0;\n            if (_2585)\n            {\n                _2598 = 1.0;\n                break;\n            }\n            _2598 = _2585 ? 1.0 : dot(texture2D(u_shadowMapTex, _2567.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp float _2607 = 0.0;\n        highp float _2608 = 0.0;\n        if (_832 > _2598)\n        {\n            _2607 = _2545 + _2598;\n            _2608 = _2546 + 1.0;\n        }\n        else\n        {\n            _2607 = _2545;\n            _2608 = _2546;\n        }\n        highp vec2 _2629 = (_815 * vec2(-0.0001181095722131431102752685546875, 0.00048684817738831043243408203125)) + _2567.xy;\n        highp float _2660 = 0.0;\n        for (int SPIRV_Cross_Dummy1114 = 0; SPIRV_Cross_Dummy1114 < 1; SPIRV_Cross_Dummy1114++)\n        {\n            highp float _2633 = _2629.x;\n            highp float _2636 = _2629.y;\n            bool _2647 = ((((_774 + step(_2633, 0.001000000047497451305389404296875)) + step(_2636, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _2633)) + step(0.999000012874603271484375, _2636)) > 1.0;\n            if (_2647)\n            {\n                _2660 = 1.0;\n                break;\n            }\n            _2660 = _2647 ? 1.0 : dot(texture2D(u_shadowMapTex, _2629.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp float _2669 = 0.0;\n        highp float _2670 = 0.0;\n        if (_832 > _2660)\n        {\n            _2669 = _2607 + _2660;\n            _2670 = _2608 + 1.0;\n        }\n        else\n        {\n            _2669 = _2607;\n            _2670 = _2608;\n        }\n        highp vec2 _2691 = (_815 * vec2(-0.000397509546019136905670166015625, 0.0004464726080186665058135986328125)) + _2629.xy;\n        highp float _2722 = 0.0;\n        for (int SPIRV_Cross_Dummy1183 = 0; SPIRV_Cross_Dummy1183 < 1; SPIRV_Cross_Dummy1183++)\n        {\n            highp float _2695 = _2691.x;\n            highp float _2698 = _2691.y;\n            bool _2709 = ((((_774 + step(_2695, 0.001000000047497451305389404296875)) + step(_2698, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _2695)) + step(0.999000012874603271484375, _2698)) > 1.0;\n            if (_2709)\n            {\n                _2722 = 1.0;\n                break;\n            }\n            _2722 = _2709 ? 1.0 : dot(texture2D(u_shadowMapTex, _2691.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp float _2731 = 0.0;\n        highp float _2732 = 0.0;\n        if (_832 > _2722)\n        {\n            _2731 = _2669 + _2722;\n            _2732 = _2670 + 1.0;\n        }\n        else\n        {\n            _2731 = _2669;\n            _2732 = _2670;\n        }\n        highp vec2 _2753 = (_815 * vec2(9.7578740678727626800537109375e-05, 0.00038399104960262775421142578125)) + _2691.xy;\n        highp float _2784 = 0.0;\n        for (int SPIRV_Cross_Dummy1252 = 0; SPIRV_Cross_Dummy1252 < 1; SPIRV_Cross_Dummy1252++)\n        {\n            highp float _2757 = _2753.x;\n            highp float _2760 = _2753.y;\n            bool _2771 = ((((_774 + step(_2757, 0.001000000047497451305389404296875)) + step(_2760, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _2757)) + step(0.999000012874603271484375, _2760)) > 1.0;\n            if (_2771)\n            {\n                _2784 = 1.0;\n                break;\n            }\n            _2784 = _2771 ? 1.0 : dot(texture2D(u_shadowMapTex, _2753.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp float _2793 = 0.0;\n        highp float _2794 = 0.0;\n        if (_832 > _2784)\n        {\n            _2793 = _2731 + _2784;\n            _2794 = _2732 + 1.0;\n        }\n        else\n        {\n            _2793 = _2731;\n            _2794 = _2732;\n        }\n        highp vec2 _2815 = (_815 * vec2(7.02302786521613597869873046875e-05, -6.885151378810405731201171875e-05)) + _2753.xy;\n        highp float _2846 = 0.0;\n        for (int SPIRV_Cross_Dummy1321 = 0; SPIRV_Cross_Dummy1321 < 1; SPIRV_Cross_Dummy1321++)\n        {\n            highp float _2819 = _2815.x;\n            highp float _2822 = _2815.y;\n            bool _2833 = ((((_774 + step(_2819, 0.001000000047497451305389404296875)) + step(_2822, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _2819)) + step(0.999000012874603271484375, _2822)) > 1.0;\n            if (_2833)\n            {\n                _2846 = 1.0;\n                break;\n            }\n            _2846 = _2833 ? 1.0 : dot(texture2D(u_shadowMapTex, _2815.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp float _2855 = 0.0;\n        highp float _2856 = 0.0;\n        if (_832 > _2846)\n        {\n            _2855 = _2793 + _2846;\n            _2856 = _2794 + 1.0;\n        }\n        else\n        {\n            _2855 = _2793;\n            _2856 = _2794;\n        }\n        highp float _851 = (_2856 > 0.0) ? (_2855 / _2856) : 1.0;\n        if (_851 > 0.999000012874603271484375)\n        {\n            _1070 = 1.0;\n            break;\n        }\n        highp vec2 _916 = vec2((max(_774 - _851, 0.0) / _851) * u_lightWidthPCSS);\n        highp vec2 _925 = (_916 * vec2(-0.0004599688691087067127227783203125, -0.0001948545686900615692138671875)) + _823;\n        highp float _1065 = 0.0;\n        for (int SPIRV_Cross_Dummy1406 = 0; SPIRV_Cross_Dummy1406 < 1; SPIRV_Cross_Dummy1406++)\n        {\n            highp float _958 = _925.x;\n            highp float _962 = _925.y;\n            bool _976 = ((((_774 + step(_958, 0.001000000047497451305389404296875)) + step(_962, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _958)) + step(0.999000012874603271484375, _962)) > 1.0;\n            if (_976)\n            {\n                _1065 = 1.0;\n                break;\n            }\n            _1065 = _976 ? 1.0 : dot(texture2D(u_shadowMapTex, _925.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp vec2 _1103 = (_916 * vec2(0.0004617119557224214076995849609375, -0.00037544299266301095485687255859375)) + _925.xy;\n        highp float _1134 = 0.0;\n        for (int SPIRV_Cross_Dummy1445 = 0; SPIRV_Cross_Dummy1445 < 1; SPIRV_Cross_Dummy1445++)\n        {\n            highp float _1107 = _1103.x;\n            highp float _1110 = _1103.y;\n            bool _1121 = ((((_774 + step(_1107, 0.001000000047497451305389404296875)) + step(_1110, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _1107)) + step(0.999000012874603271484375, _1110)) > 1.0;\n            if (_1121)\n            {\n                _1134 = 1.0;\n                break;\n            }\n            _1134 = _1121 ? 1.0 : dot(texture2D(u_shadowMapTex, _1103.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp vec2 _1159 = (_916 * vec2(-4.598833038471639156341552734375e-05, -0.00045380307710729539394378662109375)) + _1103.xy;\n        highp float _1190 = 0.0;\n        for (int SPIRV_Cross_Dummy1484 = 0; SPIRV_Cross_Dummy1484 < 1; SPIRV_Cross_Dummy1484++)\n        {\n            highp float _1163 = _1159.x;\n            highp float _1166 = _1159.y;\n            bool _1177 = ((((_774 + step(_1163, 0.001000000047497451305389404296875)) + step(_1166, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _1163)) + step(0.999000012874603271484375, _1166)) > 1.0;\n            if (_1177)\n            {\n                _1190 = 1.0;\n                break;\n            }\n            _1190 = _1177 ? 1.0 : dot(texture2D(u_shadowMapTex, _1159.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp vec2 _1215 = (_916 * vec2(0.0001684371964074671268463134765625, 0.0001434949226677417755126953125)) + _1159.xy;\n        highp float _1246 = 0.0;\n        for (int SPIRV_Cross_Dummy1523 = 0; SPIRV_Cross_Dummy1523 < 1; SPIRV_Cross_Dummy1523++)\n        {\n            highp float _1219 = _1215.x;\n            highp float _1222 = _1215.y;\n            bool _1233 = ((((_774 + step(_1219, 0.001000000047497451305389404296875)) + step(_1222, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _1219)) + step(0.999000012874603271484375, _1222)) > 1.0;\n            if (_1233)\n            {\n                _1246 = 1.0;\n                break;\n            }\n            _1246 = _1233 ? 1.0 : dot(texture2D(u_shadowMapTex, _1215.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp vec2 _1271 = (_916 * vec2(-0.0004472098662517964839935302734375, 0.000223493319936096668243408203125)) + _1215.xy;\n        highp float _1302 = 0.0;\n        for (int SPIRV_Cross_Dummy1562 = 0; SPIRV_Cross_Dummy1562 < 1; SPIRV_Cross_Dummy1562++)\n        {\n            highp float _1275 = _1271.x;\n            highp float _1278 = _1271.y;\n            bool _1289 = ((((_774 + step(_1275, 0.001000000047497451305389404296875)) + step(_1278, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _1275)) + step(0.999000012874603271484375, _1278)) > 1.0;\n            if (_1289)\n            {\n                _1302 = 1.0;\n                break;\n            }\n            _1302 = _1289 ? 1.0 : dot(texture2D(u_shadowMapTex, _1271.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp vec2 _1327 = (_916 * vec2(-0.000398165197111666202545166015625, -0.0004292600788176059722900390625)) + _1271.xy;\n        highp float _1358 = 0.0;\n        for (int SPIRV_Cross_Dummy1601 = 0; SPIRV_Cross_Dummy1601 < 1; SPIRV_Cross_Dummy1601++)\n        {\n            highp float _1331 = _1327.x;\n            highp float _1334 = _1327.y;\n            bool _1345 = ((((_774 + step(_1331, 0.001000000047497451305389404296875)) + step(_1334, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _1331)) + step(0.999000012874603271484375, _1334)) > 1.0;\n            if (_1345)\n            {\n                _1358 = 1.0;\n                break;\n            }\n            _1358 = _1345 ? 1.0 : dot(texture2D(u_shadowMapTex, _1327.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp vec2 _1383 = (_916 * vec2(-0.0001869020634330809116363525390625, 0.000135140842758119106292724609375)) + _1327.xy;\n        highp float _1414 = 0.0;\n        for (int SPIRV_Cross_Dummy1640 = 0; SPIRV_Cross_Dummy1640 < 1; SPIRV_Cross_Dummy1640++)\n        {\n            highp float _1387 = _1383.x;\n            highp float _1390 = _1383.y;\n            bool _1401 = ((((_774 + step(_1387, 0.001000000047497451305389404296875)) + step(_1390, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _1387)) + step(0.999000012874603271484375, _1390)) > 1.0;\n            if (_1401)\n            {\n                _1414 = 1.0;\n                break;\n            }\n            _1414 = _1401 ? 1.0 : dot(texture2D(u_shadowMapTex, _1383.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp vec2 _1439 = (_916 * vec2(0.000475998036563396453857421875, 0.000369376852177083492279052734375)) + _1383.xy;\n        highp float _1470 = 0.0;\n        for (int SPIRV_Cross_Dummy1679 = 0; SPIRV_Cross_Dummy1679 < 1; SPIRV_Cross_Dummy1679++)\n        {\n            highp float _1443 = _1439.x;\n            highp float _1446 = _1439.y;\n            bool _1457 = ((((_774 + step(_1443, 0.001000000047497451305389404296875)) + step(_1446, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _1443)) + step(0.999000012874603271484375, _1446)) > 1.0;\n            if (_1457)\n            {\n                _1470 = 1.0;\n                break;\n            }\n            _1470 = _1457 ? 1.0 : dot(texture2D(u_shadowMapTex, _1439.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp vec2 _1495 = (_916 * vec2(0.000216422486118972301483154296875, -0.000476130633614957332611083984375)) + _1439.xy;\n        highp float _1526 = 0.0;\n        for (int SPIRV_Cross_Dummy1718 = 0; SPIRV_Cross_Dummy1718 < 1; SPIRV_Cross_Dummy1718++)\n        {\n            highp float _1499 = _1495.x;\n            highp float _1502 = _1495.y;\n            bool _1513 = ((((_774 + step(_1499, 0.001000000047497451305389404296875)) + step(_1502, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _1499)) + step(0.999000012874603271484375, _1502)) > 1.0;\n            if (_1513)\n            {\n                _1526 = 1.0;\n                break;\n            }\n            _1526 = _1513 ? 1.0 : dot(texture2D(u_shadowMapTex, _1495.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp vec2 _1551 = (_916 * vec2(0.000262416899204254150390625, -0.00023131552734412252902984619140625)) + _1495.xy;\n        highp float _1582 = 0.0;\n        for (int SPIRV_Cross_Dummy1757 = 0; SPIRV_Cross_Dummy1757 < 1; SPIRV_Cross_Dummy1757++)\n        {\n            highp float _1555 = _1551.x;\n            highp float _1558 = _1551.y;\n            bool _1569 = ((((_774 + step(_1555, 0.001000000047497451305389404296875)) + step(_1558, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _1555)) + step(0.999000012874603271484375, _1558)) > 1.0;\n            if (_1569)\n            {\n                _1582 = 1.0;\n                break;\n            }\n            _1582 = _1569 ? 1.0 : dot(texture2D(u_shadowMapTex, _1551.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp vec2 _1607 = (_916 * vec2(-0.000129379448480904102325439453125, -0.00020455577760003507137298583984375)) + _1551.xy;\n        highp float _1638 = 0.0;\n        for (int SPIRV_Cross_Dummy1796 = 0; SPIRV_Cross_Dummy1796 < 1; SPIRV_Cross_Dummy1796++)\n        {\n            highp float _1611 = _1607.x;\n            highp float _1614 = _1607.y;\n            bool _1625 = ((((_774 + step(_1611, 0.001000000047497451305389404296875)) + step(_1614, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _1611)) + step(0.999000012874603271484375, _1614)) > 1.0;\n            if (_1625)\n            {\n                _1638 = 1.0;\n                break;\n            }\n            _1638 = _1625 ? 1.0 : dot(texture2D(u_shadowMapTex, _1607.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp vec2 _1663 = (_916 * vec2(0.0003867066116072237491607666015625, 9.32138063944876194000244140625e-05)) + _1607.xy;\n        highp float _1694 = 0.0;\n        for (int SPIRV_Cross_Dummy1835 = 0; SPIRV_Cross_Dummy1835 < 1; SPIRV_Cross_Dummy1835++)\n        {\n            highp float _1667 = _1663.x;\n            highp float _1670 = _1663.y;\n            bool _1681 = ((((_774 + step(_1667, 0.001000000047497451305389404296875)) + step(_1670, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _1667)) + step(0.999000012874603271484375, _1670)) > 1.0;\n            if (_1681)\n            {\n                _1694 = 1.0;\n                break;\n            }\n            _1694 = _1681 ? 1.0 : dot(texture2D(u_shadowMapTex, _1663.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp vec2 _1719 = (_916 * vec2(-0.0001181095722131431102752685546875, 0.00048684817738831043243408203125)) + _1663.xy;\n        highp float _1750 = 0.0;\n        for (int SPIRV_Cross_Dummy1874 = 0; SPIRV_Cross_Dummy1874 < 1; SPIRV_Cross_Dummy1874++)\n        {\n            highp float _1723 = _1719.x;\n            highp float _1726 = _1719.y;\n            bool _1737 = ((((_774 + step(_1723, 0.001000000047497451305389404296875)) + step(_1726, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _1723)) + step(0.999000012874603271484375, _1726)) > 1.0;\n            if (_1737)\n            {\n                _1750 = 1.0;\n                break;\n            }\n            _1750 = _1737 ? 1.0 : dot(texture2D(u_shadowMapTex, _1719.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp vec2 _1775 = (_916 * vec2(-0.000397509546019136905670166015625, 0.0004464726080186665058135986328125)) + _1719.xy;\n        highp float _1806 = 0.0;\n        for (int SPIRV_Cross_Dummy1913 = 0; SPIRV_Cross_Dummy1913 < 1; SPIRV_Cross_Dummy1913++)\n        {\n            highp float _1779 = _1775.x;\n            highp float _1782 = _1775.y;\n            bool _1793 = ((((_774 + step(_1779, 0.001000000047497451305389404296875)) + step(_1782, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _1779)) + step(0.999000012874603271484375, _1782)) > 1.0;\n            if (_1793)\n            {\n                _1806 = 1.0;\n                break;\n            }\n            _1806 = _1793 ? 1.0 : dot(texture2D(u_shadowMapTex, _1775.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp vec2 _1831 = (_916 * vec2(9.7578740678727626800537109375e-05, 0.00038399104960262775421142578125)) + _1775.xy;\n        highp float _1862 = 0.0;\n        for (int SPIRV_Cross_Dummy1952 = 0; SPIRV_Cross_Dummy1952 < 1; SPIRV_Cross_Dummy1952++)\n        {\n            highp float _1835 = _1831.x;\n            highp float _1838 = _1831.y;\n            bool _1849 = ((((_774 + step(_1835, 0.001000000047497451305389404296875)) + step(_1838, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _1835)) + step(0.999000012874603271484375, _1838)) > 1.0;\n            if (_1849)\n            {\n                _1862 = 1.0;\n                break;\n            }\n            _1862 = _1849 ? 1.0 : dot(texture2D(u_shadowMapTex, _1831.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp vec2 _1887 = (_916 * vec2(7.02302786521613597869873046875e-05, -6.885151378810405731201171875e-05)) + _1831.xy;\n        highp float _1918 = 0.0;\n        for (int SPIRV_Cross_Dummy1991 = 0; SPIRV_Cross_Dummy1991 < 1; SPIRV_Cross_Dummy1991++)\n        {\n            highp float _1891 = _1887.x;\n            highp float _1894 = _1887.y;\n            bool _1905 = ((((_774 + step(_1891, 0.001000000047497451305389404296875)) + step(_1894, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _1891)) + step(0.999000012874603271484375, _1894)) > 1.0;\n            if (_1905)\n            {\n                _1918 = 1.0;\n                break;\n            }\n            _1918 = _1905 ? 1.0 : dot(texture2D(u_shadowMapTex, _1887.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        _1070 = (((((((((((((((((_832 > _1065) ? 0.0 : 1.0) + ((_832 > _1134) ? 0.0 : 1.0)) + ((_832 > _1190) ? 0.0 : 1.0)) + ((_832 > _1246) ? 0.0 : 1.0)) + ((_832 > _1302) ? 0.0 : 1.0)) + ((_832 > _1358) ? 0.0 : 1.0)) + ((_832 > _1414) ? 0.0 : 1.0)) + ((_832 > _1470) ? 0.0 : 1.0)) + ((_832 > _1526) ? 0.0 : 1.0)) + ((_832 > _1582) ? 0.0 : 1.0)) + ((_832 > _1638) ? 0.0 : 1.0)) + ((_832 > _1694) ? 0.0 : 1.0)) + ((_832 > _1750) ? 0.0 : 1.0)) + ((_832 > _1806) ? 0.0 : 1.0)) + ((_832 > _1862) ? 0.0 : 1.0)) + ((_832 > _1918) ? 0.0 : 1.0)) * 0.0625;\n        break;\n    }\n    gl_FragData[0] = vec4(((((_635.xyz * _629.x) + (_642.xyz * _629.y)) + (_649.xyz * _629.z)) * _Color) * ((u_ambientLight + ((u_lightColor * max(0.0, dot(_671, _677))) * _1070)) + ((u_lightColor * pow(max(0.0, dot(normalize(normalize(varying_ViewDir) + _671), _677)), _Shininess * 128.0)) * _SpecColor.xyz)), 1.0);\n}\n\n","#version 100\nprecision mediump float;\nprecision highp int;\n\nuniform highp mat4 u_view;\nuniform highp mat4 u_viewInverse;\nuniform highp mat4 u_vp;\nuniform highp mat4 u_projection;\nuniform highp mat4 u_lightSpaceMatrix;\nuniform highp vec4 u_fogInfos;\nuniform highp vec3 u_fogColor;\nuniform highp float u_gameTime;\nuniform highp float u_aspect;\nuniform highp vec3 u_ambientLight;\nuniform highp vec3 u_lightDir;\nuniform highp vec3 u_lightColor;\nuniform highp vec3 u_shadowColor;\nuniform highp float u_shadowStrength;\nuniform highp float u_shadowBias;\nuniform highp float u_lightWidthPCSS;\nuniform highp float u_blockSizePCSS;\nuniform highp vec4 u_csmFarBounds;\nuniform highp vec4 u_shadowTilingOffsets[4];\nuniform highp mat4 u_csmLightSpaceMatrices[4];\nuniform highp vec3 u_SH[9];\n\n\nuniform highp vec4 _SpecColor;\nuniform highp vec4 _Control_ST;\nuniform highp vec4 _Splat0_ST;\nuniform highp vec4 _Splat1_ST;\nuniform highp vec4 _Splat2_ST;\nuniform highp vec3 _Color;\nuniform highp float _Shininess;\n\n\nuniform highp sampler2D _Control;\nuniform highp sampler2D _Splat0;\nuniform highp sampler2D _Splat1;\nuniform highp sampler2D _Splat2;\nuniform highp sampler2D u_shadowMapTex;\n\nvarying highp vec2 varying_UVControl;\nvarying highp vec2 varying_UVSplat0;\nvarying highp vec2 varying_UVSplat1;\nvarying highp vec2 varying_UVSplat2;\nvarying highp vec3 varying_LightDir;\nvarying highp vec3 varying_ViewDir;\nvarying highp vec3 varying_WorldNormal;\nvarying highp vec3 varying_ShadowPosition;\n\nvoid main()\n{\n    highp vec4 _624 = texture2D(_Control, varying_UVControl);\n    highp vec4 _630 = texture2D(_Splat0, varying_UVSplat0);\n    highp vec4 _637 = texture2D(_Splat1, varying_UVSplat1);\n    highp vec4 _644 = texture2D(_Splat2, varying_UVSplat2);\n    highp vec3 _666 = normalize(varying_LightDir);\n    highp vec3 _672 = normalize(varying_WorldNormal);\n    highp vec4 _756 = vec4(varying_ShadowPosition, 1.0);\n    highp float _760 = -(u_view * _756).z;\n    bool _773 = true && (_760 < u_csmFarBounds.x);\n    highp float _1035 = 0.0;\n    if (_773)\n    {\n        highp vec3 _788 = ((u_csmLightSpaceMatrices[0] * _756).xyz * 0.5) + vec3(0.5);\n        highp float _792 = _788.x;\n        highp float _796 = _788.y;\n        highp float _806 = (((_788.z + step(_792, 0.001000000047497451305389404296875)) + step(_796, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _792)) + step(0.999000012874603271484375, _796);\n        highp float _1032 = 0.0;\n        for (int SPIRV_Cross_Dummy306 = 0; SPIRV_Cross_Dummy306 < 1; SPIRV_Cross_Dummy306++)\n        {\n            if (_806 > 1.0)\n            {\n                _1032 = 1.0;\n                break;\n            }\n            highp float _857 = _806 - u_shadowBias;\n            highp vec2 _863 = ((_788.xy * u_shadowTilingOffsets[0].xy) + u_shadowTilingOffsets[0].zw).xy;\n            highp vec2 _874 = fract(_863 * vec2(2048.0));\n            highp float _929 = _874.y;\n            _1032 = mix(mix(float(_857 < dot(texture2D(u_shadowMapTex, _863), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), float(_857 < dot(texture2D(u_shadowMapTex, _863 + vec2(0.0, 0.00048828125)), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), _929), mix(float(_857 < dot(texture2D(u_shadowMapTex, _863 + vec2(0.00048828125, 0.0)), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), float(_857 < dot(texture2D(u_shadowMapTex, _863 + vec2(0.00048828125)), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), _929), _874.x);\n            break;\n        }\n        _1035 = _1032;\n    }\n    else\n    {\n        _1035 = 1.0;\n    }\n    bool _1368 = _773 ? true : false;\n    bool _1053 = (!_1368) && (_760 < u_csmFarBounds.y);\n    highp float _1146 = 0.0;\n    if (_1053)\n    {\n        highp vec3 _1064 = ((u_csmLightSpaceMatrices[1] * _756).xyz * 0.5) + vec3(0.5);\n        highp float _1066 = _1064.x;\n        highp float _1069 = _1064.y;\n        highp float _1077 = (((_1064.z + step(_1066, 0.001000000047497451305389404296875)) + step(_1069, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _1066)) + step(0.999000012874603271484375, _1069);\n        highp float _1143 = 0.0;\n        for (int SPIRV_Cross_Dummy382 = 0; SPIRV_Cross_Dummy382 < 1; SPIRV_Cross_Dummy382++)\n        {\n            if (_1077 > 1.0)\n            {\n                _1143 = 1.0;\n                break;\n            }\n            highp float _1097 = _1077 - u_shadowBias;\n            highp vec2 _1101 = ((_1064.xy * u_shadowTilingOffsets[1].xy) + u_shadowTilingOffsets[1].zw).xy;\n            highp vec2 _1108 = fract(_1101 * vec2(2048.0));\n            highp float _1136 = _1108.y;\n            _1143 = mix(mix(float(_1097 < dot(texture2D(u_shadowMapTex, _1101), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), float(_1097 < dot(texture2D(u_shadowMapTex, _1101 + vec2(0.0, 0.00048828125)), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), _1136), mix(float(_1097 < dot(texture2D(u_shadowMapTex, _1101 + vec2(0.00048828125, 0.0)), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), float(_1097 < dot(texture2D(u_shadowMapTex, _1101 + vec2(0.00048828125)), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), _1136), _1108.x);\n            break;\n        }\n        _1146 = _1143;\n    }\n    else\n    {\n        _1146 = _1035;\n    }\n    bool _1369 = _1053 ? true : _1368;\n    bool _1160 = (!_1369) && (_760 < u_csmFarBounds.z);\n    highp float _1253 = 0.0;\n    if (_1160)\n    {\n        highp vec3 _1171 = ((u_csmLightSpaceMatrices[2] * _756).xyz * 0.5) + vec3(0.5);\n        highp float _1173 = _1171.x;\n        highp float _1176 = _1171.y;\n        highp float _1184 = (((_1171.z + step(_1173, 0.001000000047497451305389404296875)) + step(_1176, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _1173)) + step(0.999000012874603271484375, _1176);\n        highp float _1250 = 0.0;\n        for (int SPIRV_Cross_Dummy458 = 0; SPIRV_Cross_Dummy458 < 1; SPIRV_Cross_Dummy458++)\n        {\n            if (_1184 > 1.0)\n            {\n                _1250 = 1.0;\n                break;\n            }\n            highp float _1204 = _1184 - u_shadowBias;\n            highp vec2 _1208 = ((_1171.xy * u_shadowTilingOffsets[2].xy) + u_shadowTilingOffsets[2].zw).xy;\n            highp vec2 _1215 = fract(_1208 * vec2(2048.0));\n            highp float _1243 = _1215.y;\n            _1250 = mix(mix(float(_1204 < dot(texture2D(u_shadowMapTex, _1208), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), float(_1204 < dot(texture2D(u_shadowMapTex, _1208 + vec2(0.0, 0.00048828125)), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), _1243), mix(float(_1204 < dot(texture2D(u_shadowMapTex, _1208 + vec2(0.00048828125, 0.0)), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), float(_1204 < dot(texture2D(u_shadowMapTex, _1208 + vec2(0.00048828125)), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), _1243), _1215.x);\n            break;\n        }\n        _1253 = _1250;\n    }\n    else\n    {\n        _1253 = _1146;\n    }\n    highp float _1360 = 0.0;\n    if ((!(_1160 ? true : _1369)) && (_760 < u_csmFarBounds.w))\n    {\n        highp vec3 _1278 = ((u_csmLightSpaceMatrices[3] * _756).xyz * 0.5) + vec3(0.5);\n        highp float _1280 = _1278.x;\n        highp float _1283 = _1278.y;\n        highp float _1291 = (((_1278.z + step(_1280, 0.001000000047497451305389404296875)) + step(_1283, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _1280)) + step(0.999000012874603271484375, _1283);\n        highp float _1357 = 0.0;\n        for (int SPIRV_Cross_Dummy528 = 0; SPIRV_Cross_Dummy528 < 1; SPIRV_Cross_Dummy528++)\n        {\n            if (_1291 > 1.0)\n            {\n                _1357 = 1.0;\n                break;\n            }\n            highp float _1311 = _1291 - u_shadowBias;\n            highp vec2 _1315 = ((_1278.xy * u_shadowTilingOffsets[3].xy) + u_shadowTilingOffsets[3].zw).xy;\n            highp vec2 _1322 = fract(_1315 * vec2(2048.0));\n            highp float _1350 = _1322.y;\n            _1357 = mix(mix(float(_1311 < dot(texture2D(u_shadowMapTex, _1315), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), float(_1311 < dot(texture2D(u_shadowMapTex, _1315 + vec2(0.0, 0.00048828125)), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), _1350), mix(float(_1311 < dot(texture2D(u_shadowMapTex, _1315 + vec2(0.00048828125, 0.0)), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), float(_1311 < dot(texture2D(u_shadowMapTex, _1315 + vec2(0.00048828125)), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), _1350), _1322.x);\n            break;\n        }\n        _1360 = _1357;\n    }\n    else\n    {\n        _1360 = _1253;\n    }\n    gl_FragData[0] = vec4(((((_630.xyz * _624.x) + (_637.xyz * _624.y)) + (_644.xyz * _624.z)) * _Color) * ((u_ambientLight + ((u_lightColor * max(0.0, dot(_666, _672))) * _1360)) + ((u_lightColor * pow(max(0.0, dot(normalize(normalize(varying_ViewDir) + _666), _672)), _Shininess * 128.0)) * _SpecColor.xyz)), 1.0);\n}\n\n","#version 100\nprecision mediump float;\nprecision highp int;\n\nuniform highp mat4 u_view;\nuniform highp mat4 u_viewInverse;\nuniform highp mat4 u_vp;\nuniform highp mat4 u_projection;\nuniform highp mat4 u_lightSpaceMatrix;\nuniform highp vec4 u_fogInfos;\nuniform highp vec3 u_fogColor;\nuniform highp float u_gameTime;\nuniform highp float u_aspect;\nuniform highp vec3 u_ambientLight;\nuniform highp vec3 u_lightDir;\nuniform highp vec3 u_lightColor;\nuniform highp vec3 u_shadowColor;\nuniform highp float u_shadowStrength;\nuniform highp float u_shadowBias;\nuniform highp float u_lightWidthPCSS;\nuniform highp float u_blockSizePCSS;\nuniform highp vec4 u_csmFarBounds;\nuniform highp vec4 u_shadowTilingOffsets[4];\nuniform highp mat4 u_csmLightSpaceMatrices[4];\nuniform highp vec3 u_SH[9];\n\n\nuniform highp vec4 _SpecColor;\nuniform highp vec4 _Control_ST;\nuniform highp vec4 _Splat0_ST;\nuniform highp vec4 _Splat1_ST;\nuniform highp vec4 _Splat2_ST;\nuniform highp vec3 _Color;\nuniform highp float _Shininess;\n\n\nuniform highp sampler2D _Control;\nuniform highp sampler2D _Splat0;\nuniform highp sampler2D _Splat1;\nuniform highp sampler2D _Splat2;\nuniform highp sampler2D u_shadowMapTex;\n\nvarying highp vec2 varying_UVControl;\nvarying highp vec2 varying_UVSplat0;\nvarying highp vec2 varying_UVSplat1;\nvarying highp vec2 varying_UVSplat2;\nvarying highp vec3 varying_LightDir;\nvarying highp vec3 varying_ViewDir;\nvarying highp vec3 varying_WorldNormal;\nvarying highp vec3 varying_ShadowPosition;\n\nvoid main()\n{\n    highp vec4 _572 = texture2D(_Control, varying_UVControl);\n    highp vec4 _578 = texture2D(_Splat0, varying_UVSplat0);\n    highp vec4 _585 = texture2D(_Splat1, varying_UVSplat1);\n    highp vec4 _592 = texture2D(_Splat2, varying_UVSplat2);\n    highp vec3 _614 = normalize(varying_LightDir);\n    highp vec3 _620 = normalize(varying_WorldNormal);\n    highp vec3 _706 = ((u_csmLightSpaceMatrices[0] * vec4(varying_ShadowPosition, 1.0)).xyz * 0.5) + vec3(0.5);\n    highp float _710 = _706.x;\n    highp float _714 = _706.y;\n    highp float _724 = (((_706.z + step(_710, 0.001000000047497451305389404296875)) + step(_714, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _710)) + step(0.999000012874603271484375, _714);\n    highp float _926 = 0.0;\n    for (int SPIRV_Cross_Dummy290 = 0; SPIRV_Cross_Dummy290 < 1; SPIRV_Cross_Dummy290++)\n    {\n        if (_724 > 1.0)\n        {\n            _926 = 1.0;\n            break;\n        }\n        highp float _756 = _724 - u_shadowBias;\n        highp vec2 _762 = _706.xy;\n        highp vec2 _773 = fract(_762 * vec2(2048.0));\n        highp float _828 = _773.y;\n        _926 = mix(mix(float(_756 < dot(texture2D(u_shadowMapTex, _762), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), float(_756 < dot(texture2D(u_shadowMapTex, _762 + vec2(0.0, 0.00048828125)), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), _828), mix(float(_756 < dot(texture2D(u_shadowMapTex, _762 + vec2(0.00048828125, 0.0)), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), float(_756 < dot(texture2D(u_shadowMapTex, _762 + vec2(0.00048828125)), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), _828), _773.x);\n        break;\n    }\n    gl_FragData[0] = vec4(((((_578.xyz * _572.x) + (_585.xyz * _572.y)) + (_592.xyz * _572.z)) * _Color) * ((u_ambientLight + ((u_lightColor * max(0.0, dot(_614, _620))) * _926)) + ((u_lightColor * pow(max(0.0, dot(normalize(normalize(varying_ViewDir) + _614), _620)), _Shininess * 128.0)) * _SpecColor.xyz)), 1.0);\n}\n\n","#version 100\n\nuniform mat4 u_world;\nuniform vec4 u_lightMapScaleOffset;\nuniform float u_lightCountFA;\nuniform vec4 u_lightPosFA[4];\nuniform vec4 u_lightColorFA[4];\nuniform vec4 u_lightAttenFA[4];\nuniform vec4 u_spotDirFA[4];\n\n\nuniform mat4 u_view;\nuniform mat4 u_viewInverse;\nuniform mat4 u_vp;\nuniform mat4 u_projection;\nuniform mat4 u_lightSpaceMatrix;\nuniform vec4 u_fogInfos;\nuniform vec3 u_fogColor;\nuniform float u_gameTime;\nuniform float u_aspect;\nuniform vec3 u_ambientLight;\nuniform vec3 u_lightDir;\nuniform vec3 u_lightColor;\nuniform vec3 u_shadowColor;\nuniform float u_shadowStrength;\nuniform float u_shadowBias;\nuniform float u_lightWidthPCSS;\nuniform float u_blockSizePCSS;\nuniform vec4 u_csmFarBounds;\nuniform vec4 u_shadowTilingOffsets[4];\nuniform mat4 u_csmLightSpaceMatrices[4];\nuniform vec3 u_SH[9];\n\n\nuniform vec4 _SpecColor;\nuniform vec4 _Control_ST;\nuniform vec4 _Splat0_ST;\nuniform vec4 _Splat1_ST;\nuniform vec4 _Splat2_ST;\nuniform vec3 _Color;\nuniform float _Shininess;\n\n\nattribute vec4 a_position;\nattribute vec2 a_texCoord;\nattribute vec3 a_normal;\nvarying vec2 varying_UVControl;\nvarying vec2 varying_UVSplat0;\nvarying vec2 varying_UVSplat1;\nvarying vec2 varying_UVSplat2;\nvarying vec3 varying_LightDir;\nvarying vec3 varying_ViewDir;\nvarying vec3 varying_WorldNormal;\n\nvoid main()\n{\n    vec4 _575 = u_world * a_position;\n    vec2 _437 = vec2(a_texCoord.x, a_texCoord.y - 1.0);\n    gl_Position = u_projection * (u_view * _575);\n    varying_UVControl = (_437 * _Control_ST.xy) + vec2(_Control_ST.z, 1.0 - _Control_ST.w);\n    varying_UVSplat0 = (_437 * _Splat0_ST.xy) + vec2(_Splat0_ST.z, 1.0 - _Splat0_ST.w);\n    varying_UVSplat1 = (_437 * _Splat1_ST.xy) + vec2(_Splat1_ST.z, 1.0 - _Splat1_ST.w);\n    varying_UVSplat2 = (_437 * _Splat2_ST.xy) + vec2(_Splat2_ST.z, 1.0 - _Splat2_ST.w);\n    varying_LightDir = u_lightDir;\n    varying_ViewDir = normalize(vec3(u_viewInverse[3].x, u_viewInverse[3].y, u_viewInverse[3].z) - _575.xyz);\n    varying_WorldNormal = normalize(mat3(u_world[0].xyz, u_world[1].xyz, u_world[2].xyz) * a_normal);\n}\n\n","#version 100\n\nuniform mat4 u_world;\nuniform vec4 u_lightMapScaleOffset;\nuniform float u_lightCountFA;\nuniform vec4 u_lightPosFA[4];\nuniform vec4 u_lightColorFA[4];\nuniform vec4 u_lightAttenFA[4];\nuniform vec4 u_spotDirFA[4];\n\n\nuniform mat4 u_view;\nuniform mat4 u_viewInverse;\nuniform mat4 u_vp;\nuniform mat4 u_projection;\nuniform mat4 u_lightSpaceMatrix;\nuniform vec4 u_fogInfos;\nuniform vec3 u_fogColor;\nuniform float u_gameTime;\nuniform float u_aspect;\nuniform vec3 u_ambientLight;\nuniform vec3 u_lightDir;\nuniform vec3 u_lightColor;\nuniform vec3 u_shadowColor;\nuniform float u_shadowStrength;\nuniform float u_shadowBias;\nuniform float u_lightWidthPCSS;\nuniform float u_blockSizePCSS;\nuniform vec4 u_csmFarBounds;\nuniform vec4 u_shadowTilingOffsets[4];\nuniform mat4 u_csmLightSpaceMatrices[4];\nuniform vec3 u_SH[9];\n\n\nuniform vec4 _SpecColor;\nuniform vec4 _Control_ST;\nuniform vec4 _Splat0_ST;\nuniform vec4 _Splat1_ST;\nuniform vec4 _Splat2_ST;\nuniform vec3 _Color;\nuniform float _Shininess;\n\n\nattribute vec4 a_position;\nattribute vec2 a_texCoord;\nattribute vec3 a_normal;\nvarying vec2 varying_UVControl;\nvarying vec2 varying_UVSplat0;\nvarying vec2 varying_UVSplat1;\nvarying vec2 varying_UVSplat2;\nvarying vec3 varying_LightDir;\nvarying vec3 varying_ViewDir;\nvarying vec3 varying_WorldNormal;\nvarying vec3 varying_ShadowPosition;\n\nvoid main()\n{\n    vec4 _585 = u_world * a_position;\n    vec2 _444 = vec2(a_texCoord.x, a_texCoord.y - 1.0);\n    vec3 _524 = _585.xyz;\n    gl_Position = u_projection * (u_view * _585);\n    varying_UVControl = (_444 * _Control_ST.xy) + vec2(_Control_ST.z, 1.0 - _Control_ST.w);\n    varying_UVSplat0 = (_444 * _Splat0_ST.xy) + vec2(_Splat0_ST.z, 1.0 - _Splat0_ST.w);\n    varying_UVSplat1 = (_444 * _Splat1_ST.xy) + vec2(_Splat1_ST.z, 1.0 - _Splat1_ST.w);\n    varying_UVSplat2 = (_444 * _Splat2_ST.xy) + vec2(_Splat2_ST.z, 1.0 - _Splat2_ST.w);\n    varying_LightDir = u_lightDir;\n    varying_ViewDir = normalize(vec3(u_viewInverse[3].x, u_viewInverse[3].y, u_viewInverse[3].z) - _524);\n    varying_WorldNormal = normalize(mat3(u_world[0].xyz, u_world[1].xyz, u_world[2].xyz) * a_normal);\n    varying_ShadowPosition = _524;\n}\n\n"],"uniformBlocks":[{"name":11,"blockName":12,"size":96,"member":[{"memberName":1,"type":4,"byteOffset":0},{"memberName":6,"type":4,"byteOffset":16},{"memberName":3,"type":4,"byteOffset":32},{"memberName":4,"type":4,"byteOffset":48},{"memberName":5,"type":4,"byteOffset":64},{"memberName":0,"type":3,"byteOffset":80},{"memberName":2,"type":1,"byteOffset":92}],"hash":"628257DAC79293CB2EAFF006B5D716D8"}],"strings":["_Color","_SpecColor","_Shininess","_Splat0_ST","_Splat1_ST","_Splat2_ST","_Control_ST","_Splat0","_Splat1","_Splat2","_Control","type_Material","Material"]}