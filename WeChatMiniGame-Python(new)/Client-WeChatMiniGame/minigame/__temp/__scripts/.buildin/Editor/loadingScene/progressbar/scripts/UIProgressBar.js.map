{"version":3,"sources":[".buildin/Editor/loadingScene/progressbar/scripts/UIProgressBar.ts"],"names":[],"mappings":"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","file":"UIProgressBar.js","sourcesContent":["import engine from 'engine'\nimport Utils from '../../common/Utils'\n\nconst TypeNames = engine.TypeNames\n\n@engine.decorators.serialize('UIKitProgressBar')\nexport default class UIKitProgressBar extends engine.Script {\n  private _min: number = 0;\n  private _max: number = 100;\n  private _value: number = 50;\n  private _dirty = true;\n\n  private _barMaxWidth: number = 0;\n  private _barMaxWidthDelta: number = 0;\n  private _bar: any = null;\n  private _uiWidget: engine.UIWidget;\n\n  @engine.decorators.property({\n    type: TypeNames.Number,\n  })\n  public get min(): number {\n    return this._min;\n  }\n  public set min(value: number) {\n    if (this._min != value) {\n      this._min = value;\n      this._dirty = true;\n    }\n  }\n\n  @engine.decorators.property({\n    type: TypeNames.Number,\n  })\n  public get max(): number {\n    return this._max;\n  }\n  public set max(value: number) {\n    if (this._max != value) {\n      this._max = value;\n      this._dirty = true;\n    }\n  }\n\n  @engine.decorators.property({\n    type: TypeNames.Number,\n  })\n  public get value(): number {\n    return this._value;\n  }\n  public set value(value: number) {\n    if (this._value != value) {\n      this._value = value;\n      this._dirty = true;\n    }\n  }\n\n  public onAwake() {\n    this._bar = Utils.getChildByName(this.entity, 'Progress_Bar')\n    if (this._bar.transform2D.isRectTransform) {\n      // isRectTransform 不添加uiwidget\n    } else {\n      let uiWidget = this._bar.getComponent(engine.UIWidget)\n      if (!uiWidget) {\n        uiWidget = this._bar.addComponent(engine.UIWidget)\n        uiWidget.leftAnchor = 0\n        uiWidget.topAnchor = 1\n        uiWidget.rightAnchor = 1\n        uiWidget.bottomAnchor = 0\n      }\n      this._uiWidget = uiWidget;\n    }\n\n    const barObjectHTransform = this._bar.transform2D;\n    this._barMaxWidth = barObjectHTransform.sizeX;\n    this._barMaxWidthDelta = this.entity.transform2D.sizeX - this._barMaxWidth;\n    if (this._dirty) {\n      this.update();\n    }\n  }\n\n  public onUpdate() {\n    if (this._dirty) {\n      this.update();\n    }\n  }\n\n  public update(): void {\n    this.updateWithPercent((this._value - this._min) / (this._max - this._min));\n  }\n\n  private updateWithPercent(percent: number): void {\n    this._dirty = false;\n    percent = Utils.clamp01(percent)\n    const bar = this._bar\n    const fullWidth: number = this.entity.transform2D.sizeX - this._barMaxWidthDelta;\n    if (bar.transform2D.isRectTransform) {\n      bar.transform2D.rightOffset = -Math.round(fullWidth * (1 - percent));\n    } else {\n      if (this._uiWidget) {\n        this._uiWidget.rightOffset = -Math.round(fullWidth * (1 - percent));\n      }\n    }\n  }\n}"]}