{"version":3,"sources":["Scripts/utils.ts"],"names":[],"mappings":"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","file":"utils.js","sourcesContent":["import engine from \"engine\";\r\nimport { databus } from \"./Databus\";\r\nimport MyHandCard from \"./MyHandCard\";\r\n\r\n\r\nclass LRUCache<K, V> {\r\n    private cache: Map<K, V>;\r\n\r\n    public constructor(private capacity: number) {\r\n        this.cache = new Map();\r\n    }\r\n\r\n    public get(key: K): V | undefined {\r\n        const val = this.cache.get(key);\r\n        if (val === undefined) return;\r\n\r\n        this.cache.delete(key);\r\n        this.cache.set(key, val);\r\n        return val;\r\n    }\r\n\r\n    public add(key: K, value: V): void {\r\n        if (this.cache.has(key)) {\r\n            this.cache.delete(key);\r\n        } else if (this.cache.size >= this.capacity) {\r\n            this.cache.delete(this.cache.keys().next().value);\r\n        }\r\n        this.cache.set(key, value);\r\n    }\r\n}\r\n\r\nconst spriteFrameCache = new LRUCache<string, engine.SpriteFrame>(10);\r\n\r\n\r\nexport function urlToSpriteFrame(url: string) {\r\n    return new Promise<engine.SpriteFrame>((resolve, reject) => {\r\n        const spriteFrame = spriteFrameCache.get(url);\r\n        if (spriteFrame) {\r\n            return resolve(spriteFrame);\r\n        }\r\n        const img = new engine.Image();\r\n        img.onerror = err => {\r\n            console.error(err);\r\n            reject();\r\n        };\r\n        img.onload = () => {\r\n            const texture = new engine.Texture2D();\r\n            if (texture.initWithImage(img)) {\r\n                const spriteFrame = engine.SpriteFrame.createFromTexture(texture);\r\n                spriteFrameCache.add(url, spriteFrame);\r\n                resolve(spriteFrame);\r\n            } else {\r\n                reject();\r\n            }\r\n        }\r\n        img.src = url;\r\n    });\r\n}\r\n\r\n\r\nexport function invite() {\r\n    engine.canvas.toTempFilePath({\r\n        destWidth: 500,\r\n        destHeight: 400,\r\n        success: res => {\r\n            // wx.shareAppMessage({\r\n            //     title: '5 10 K',\r\n            //     query: `roomNo=${databus.roomNo}`,\r\n            //     imageUrl: res.tempFilePath\r\n            // });\r\n        }\r\n    });\r\n}\r\n\r\n\r\nexport interface ActionModel {\r\n    pattern: string,\r\n    weight: number\r\n}\r\n\r\n\r\n/* bomb weight\r\n负510K 0\r\n正510K 1\r\n0  3333 52\r\n......\r\n12 2222 64\r\n0  33333 65\r\n......\r\n12 22222 25\r\ncard + 13 * count\r\n*/\r\n\r\n\r\nexport class CardHeap {\r\n    public cardScriptList: MyHandCard[];\r\n    private cardCountList: number[];\r\n    private actionModel: ActionModel; //null -> None or invalid\r\n\r\n    public constructor() {\r\n        this.clear();\r\n    }\r\n\r\n    public get action() {\r\n        return {\r\n            model: this.actionModel,\r\n            cards: this.sortedCardScriptList.map(scrit => scrit.cardIndex)\r\n        };\r\n    }\r\n\r\n    public get cardList() {\r\n        return this.cardScriptList.map(scrit => scrit.cardIndex);\r\n    }\r\n\r\n    public get sortedCardScriptList() {\r\n        return this.cardScriptList.sort((a, b) => a.cardIndex - b.cardIndex);\r\n    }\r\n\r\n    public add(cardScript: MyHandCard) {\r\n        this.cardScriptList.push(cardScript);\r\n        this.cardCountList[cardScript.cardWeigt] += 1;\r\n        this.check();\r\n    }\r\n\r\n    public remove(cardScript: MyHandCard) {\r\n        this.cardScriptList.splice(this.cardScriptList.indexOf(cardScript), 1);\r\n        this.cardCountList[cardScript.cardWeigt] -= 1;\r\n        this.check();\r\n    }\r\n\r\n    public clear() {\r\n        this.cardScriptList = [];\r\n        this.cardCountList = Array(13).fill(0);\r\n        this.actionModel = null;\r\n    }\r\n\r\n    public greaterThan(actionModel: ActionModel) {\r\n        if (this.actionModel === null) return false;\r\n        if (actionModel === null) return true;\r\n        if (this.actionModel.pattern === actionModel.pattern) {\r\n            return this.actionModel.weight > actionModel.weight;\r\n        }\r\n        return this.actionModel.pattern === 'bomb';\r\n    }\r\n\r\n    private check() {\r\n        this.actionModel = null;\r\n        if (this.cardScriptList.length === 0) return;\r\n        this.checkSingleRepeat() || this.checkSequence() || this.check510K();\r\n    }\r\n\r\n    // single double triple non-510K bomb\r\n    private checkSingleRepeat() {\r\n        const weight = this.cardScriptList[0].cardWeigt;\r\n        if (this.cardScriptList.every(v => v.cardWeigt === weight)) {\r\n            const count = this.cardScriptList.length;\r\n            switch (count) {\r\n                case 1:\r\n                    this.actionModel = {\r\n                        pattern: 'single',\r\n                        weight\r\n                    };\r\n                    break;\r\n                case 2:\r\n                    this.actionModel = {\r\n                        pattern: 'double',\r\n                        weight\r\n                    };\r\n                    break;\r\n                case 3:\r\n                    this.actionModel = {\r\n                        pattern: 'triple',\r\n                        weight\r\n                    };\r\n                    break;\r\n                default:\r\n                    this.actionModel = {\r\n                        pattern: 'bomb',\r\n                        weight: weight + 13 * count\r\n                    };\r\n                    break;\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // i_double i_triple\r\n    private checkSequence() {\r\n        // 不能含`2`\r\n        if (this.cardCountList[12] > 0) return false;\r\n\r\n        const firstCard = this.cardCountList.findIndex(v => v > 0);\r\n        const count = this.cardCountList[firstCard];\r\n        if (count !== 2 && count !== 3) return false;\r\n\r\n        const lastCard = (() => {\r\n            for (let i = 11; i >= 0; i--) {\r\n                if (this.cardCountList[i] > 0) {\r\n                    return i;\r\n                }\r\n            }\r\n        })();\r\n        const seqLen = lastCard - firstCard + 1;\r\n        if (seqLen < 2) return false;\r\n\r\n        if (this.cardCountList.slice(firstCard + 1, lastCard + 1).every(v => v === count)) {\r\n            this.actionModel = {\r\n                pattern: `${seqLen}_${count === 2 ? 'double' : 'triple'}`,\r\n                weight: firstCard\r\n            };\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private check510K() {\r\n        if (this.cardScriptList.length === 3 && this.cardCountList[2] === 1 && this.cardCountList[7] === 1 && this.cardCountList[10] === 1) {\r\n            const [a, b, c] = this.cardScriptList.map(v => v.cardSuit);\r\n            this.actionModel = {\r\n                pattern: 'bomb',\r\n                weight: a === b && b === c ? 1 : 0\r\n            };\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class SortedList<V> {\r\n    private list: V[] = [];\r\n\r\n    public constructor(private key: (arg: V) => any = a => a) {\r\n\r\n    }\r\n    public get array() {\r\n        return this.list;\r\n    }\r\n\r\n    public get(i: number) {\r\n        if (i < 0) {\r\n            i += this.list.length;\r\n        }\r\n        return this.list[i];\r\n    }\r\n\r\n\r\n    public add(elem: V) {\r\n        const idx = this.searchGreaterEqual(elem);\r\n        this.list.splice(idx, 0, elem);\r\n    }\r\n\r\n    public remove(elem: V) {\r\n        const idx = this.searchGreaterEqual(elem);\r\n        if (this.list[idx] === elem) {\r\n            this.list.splice(idx, 1);\r\n        }\r\n    }\r\n\r\n    public clear() {\r\n        this.list = [];\r\n    }\r\n\r\n    public contains(elem: V) {\r\n        const idx = this.searchGreaterEqual(elem);\r\n        return this.list[idx] === elem;\r\n    }\r\n\r\n    private searchGreaterEqual(target: V): number {\r\n        let left = 0;\r\n        let right = this.list.length;\r\n        while (left < right) {\r\n            const mid = (left + right) >> 1;\r\n            const midVal = this.key(this.list[mid]);\r\n            const targetVal = this.key(target);\r\n            if (midVal === targetVal) return mid;\r\n            if (midVal > targetVal) {\r\n                right = mid;\r\n            } else {\r\n                left = mid + 1;\r\n            }\r\n        }\r\n        return left;\r\n    }\r\n\r\n}\r\n\r\n"]}