{"version":3,"sources":["__temp/buildOnlyScriptProcess/inlineFunctionProcess/Scripts/Room.ts"],"names":[],"mappings":"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","file":"Room.js","sourcesContent":["import engine from \"engine\";\nimport { urlToSpriteFrame, invite } from \"./utils\";\n\n\n@engine.decorators.serialize(\"Room\")\nexport default class Room extends engine.Script {\n    @engine.decorators.property({\n        type: engine.TypeNames.SpriteFrame\n    })\n    public defaultAvatar: engine.SpriteFrame;\n\n\n    private mySeat: number;\n\n    private playerCompList: ({\n        inviteButton?: engine.UIButton,\n        inviteTouchInput?: engine.TouchInputComponent,\n        avatarSprite: engine.UISprite,\n        nicknameLabel: engine.UILabel\n    } | undefined)[] = [];\n\n    public onAwake() {\n        for (let i = 1; i < 4; i++) {\n            const playerTrans = this.entity.transform2D.findChildByName(`Player${i}`);\n            const avatarEntity = playerTrans.findChildByName('CircleMask').children[0].entity;\n            const nicknameEntity = playerTrans.findChildByName('Nickname').entity;\n            this.playerCompList[i] = {\n                inviteButton: avatarEntity.getComponent(engine.UIButton),\n                inviteTouchInput: avatarEntity.getComponent(engine.TouchInputComponent),\n                avatarSprite: avatarEntity.getComponent(engine.UISprite),\n                nicknameLabel: nicknameEntity.getComponent(engine.UILabel)\n            }\n        }\n        console.log('default', this.defaultAvatar);\n        engine.game.customEventEmitter.on('get_players_info_result', data => {\n            this.mySeat = data.my_seat;\n            data.player_list.forEach((info, seat) => {\n                if (seat === this.mySeat) return;\n                const index = this.indexFromMe(seat);\n                const playerComp = this.playerCompList[index];\n                if (info) {\n                    this.showRoommateInfo(playerComp, info);\n                } else {\n                    this.showDefaultRoommate(playerComp);\n                }\n            });\n        });\n        engine.game.customEventEmitter.on('player_enter', data => {\n            const index = this.indexFromMe(data.seat);\n            this.showRoommateInfo(this.playerCompList[index], data.info);\n        });\n        engine.game.customEventEmitter.on('player_exit', data => {\n            const index = this.indexFromMe(data.seat);\n            this.showDefaultRoommate(this.playerCompList[index]);\n        });\n        engine.game.customEventEmitter.on('player_update_ready_status', data => {\n            if (data.seat === this.mySeat) return;\n            const index = this.indexFromMe(data.seat);\n            const playerComp = this.playerCompList[index];\n            playerComp.avatarSprite.grayScale = !data.is_ready;\n        });\n    }\n\n    private showRoommateInfo(playerComp, { nickname, avatar_url, is_ready }) {\n        urlToSpriteFrame(avatar_url).then((spriteFrame: engine.SpriteFrame) => {\n            playerComp.avatarSprite.spriteFrame = spriteFrame;\n            console.log('showRoommateInfo', playerComp.avatarSprite.spriteFrame);\n        });\n        playerComp.avatarSprite.grayScale = !is_ready;\n        playerComp.nicknameLabel.text = nickname;\n        playerComp.inviteButton.disable = true;\n        playerComp.inviteTouchInput.onClick.clear();\n    }\n\n    private showDefaultRoommate(playerComp) {\n        playerComp.avatarSprite.spriteFrame = this.defaultAvatar;\n        console.log('showDefaultRoommate', playerComp.avatarSprite.spriteFrame);\n        playerComp.avatarSprite.grayScale = false;\n        playerComp.nicknameLabel.text = '点击邀请好友';\n        playerComp.inviteButton.disable = false;\n        playerComp.inviteTouchInput.onClick.add(invite);\n    }\n\n    private indexFromMe(seat: number) {\n        return (seat - this.mySeat + 4) % 4;\n    }\n}\n"]}