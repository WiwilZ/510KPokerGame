{"version":3,"sources":["__temp/buildOnlyScriptProcess/inlineFunctionProcess/Scripts/GlobalManager.ts"],"names":[],"mappings":"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","file":"GlobalManager.js","sourcesContent":["import engine from \"engine\";\nimport { databus } from \"./Databus\";\nimport GameServer from \"./GameServer\";\nimport { urlToSpriteFrame } from \"./utils\";\n\n\n@engine.decorators.serialize(\"GlobalManager\")\nexport default class GlobalManager extends engine.Script {\n    @engine.decorators.property({\n        type: engine.TypeNames.Scene,\n        required: true\n    })\n    public homeScene: engine.Scene;\n\n    @engine.decorators.property({\n        type: engine.TypeNames.Scene,\n        required: true\n    })\n    public roomScene: engine.Scene;\n\n    @engine.decorators.property({\n        type: engine.Atlas,\n        required: true\n    })\n    public cardAtlas: engine.Atlas;\n\n    private gameServer: GameServer = null;\n\n    private APPID = 'wx76fd3cf02125f9e2';\n    private SECRET = '445898eda089aa3a1357a6e40d7d1cda';\n\n\n    public onAwake() {\n        engine.game.markAsPersist(this.entity);\n        wx.setEnableDebug({ enableDebug: true });\n\n        console.log(this.cardAtlas.spriteframes)\n        for (let i = 0; i < 52; i++) {\n            databus.cardSpriteframes[i] = this.cardAtlas.getSpriteframeByKey(`Sprites/Poker/${i}.png`);\n        }\n        console.log(databus.cardSpriteframes);\n\n        wx.onHide(this.onHide.bind(this));\n        wx.onShow(this.onShow.bind(this));\n\n        this.getUserInfo().then(({ nickName, avatarUrl }) => {\n            console.log('get nickname:', nickName);\n            databus.nickname = nickName;\n            databus.avatarUrl = avatarUrl;\n            urlToSpriteFrame(avatarUrl);\n\n            this.getOpenid().then(openid => {\n                console.log('get openid:', openid);\n                databus.openid = openid;\n\n                this.gameServer = new GameServer(nickName, avatarUrl, openid, this.onMessage.bind(this));\n\n                engine.game.playScene(this.homeScene);\n                console.log(engine.game.activeScene2D.root.name);\n            });\n        });\n\n        engine.game.customEventEmitter.on('match_room', this.matchRoom.bind(this));\n        engine.game.customEventEmitter.on('create_room', this.createRoom.bind(this));\n        engine.game.customEventEmitter.on('exit_room', this.exitRoom.bind(this));\n        engine.game.customEventEmitter.on('change_banker_card', (data, success) => {\n            this.gameServer.sendMessage({ type: 'change_banker_card', data }).then(success);\n        });\n        engine.game.customEventEmitter.on('play', (data, success) => {\n            this.gameServer.sendMessage({ type: 'play', data }).then(success);\n        });\n    }\n\n    public onDestroy() {\n        this.gameServer.close();\n    }\n\n    private onHide() {\n        this.gameServer.isOpen && this.gameServer.sendMessage({ type: 'hide' });\n    }\n\n    private onShow(res) {\n        const roomNo = res.query.roomNo;\n        console.log('onShow roomNo:', roomNo);\n\n        if (databus.roomNo === '') {\n            roomNo !== undefined && this.joinRoom(roomNo);\n        } else {\n            if (roomNo === undefined || databus.roomNo === roomNo) {\n                this.gameServer.sendMessage({ type: 'show' }).catch(this.reconnect.bind(this));\n            } else {\n                this.gameServer.sendMessage({ type: 'show' }).then(() => {\n                    wx.showModal({\n                        title: '提示',\n                        content: '确定离开当前房间加入其他房间？',\n                        success: res => {\n                            if (res.confirm) {\n                                this.gameServer.sendMessage({\n                                    type: 'join_room',\n                                    data: {\n                                        room_no: roomNo\n                                    }\n                                });\n                            }\n                        }\n                    });\n                }).catch(() => {\n                    wx.showModal({\n                        title: '提示',\n                        content: '确定离开当前房间加入其他房间？',\n                        success: res => {\n                            if (res.confirm) {\n                                this.joinRoom(roomNo);\n                            } else {\n                                this.reconnect();\n                            }\n                        }\n                    });\n                });\n            }\n        }\n    }\n\n    private getUserInfo() {\n        return new Promise<{ nickName: string, avatarUrl: string }>((resolve, reject) => {\n            wx.getUserInfo({\n                success: res => resolve(res.userInfo),\n                fail: () => wx.getUserProfile({\n                    desc: '授权获取用户信息',\n                    success: res => resolve(res.userInfo),\n                    fail: err => reject(err)\n                })\n            });\n        });\n    }\n\n    private getOpenid() {\n        return new Promise<string>((resolve, reject) => {\n            wx.login({\n                success: res => wx.request({\n                    url: 'https://api.weixin.qq.com/sns/jscode2session',\n                    data: {\n                        appid: this.APPID,\n                        secret: this.SECRET,\n                        js_code: res.code,\n                        grant_type: 'authorization_code'\n                    },\n                    success: res => resolve(res.data.openid),\n                    fail: err => reject(err)\n                }),\n                fail: err => reject(err)\n            });\n        });\n    }\n\n    private matchRoom() {\n        wx.showLoading({\n            title: '匹配房间中...',\n            mask: true\n        });\n        this.gameServer.connect({ type: 'match_room' });\n    }\n\n    private createRoom() {\n        wx.showLoading({\n            title: '创建房间中...',\n            mask: true\n        });\n        this.gameServer.connect({ type: 'create_room' });\n    }\n\n    private joinRoom(room_no: string) {\n        wx.showLoading({\n            title: '加入房间中...',\n            mask: true\n        });\n        this.gameServer.connect({\n            type: 'join_room',\n            data: {\n                room_no\n            }\n        });\n    }\n\n    private exitRoom() {\n        engine.game.playScene(this.homeScene);\n        this.gameServer.close();\n        databus.roomNo = '';\n    }\n\n    private reconnect() {\n        wx.showLoading({\n            title: '重新连接中...',\n            mask: true\n        });\n        this.gameServer.connect({ type: 'reconnect' });\n    }\n\n    private onMessage({ type, data }) {\n        console.log('receive event', type, data);\n        switch (type) {\n            case 'join_room_result':\n                if (data.error_msg) {\n                    this.exitRoom();\n                    wx.hideLoading();\n                    wx.showModal({\n                        title: '提示',\n                        content: data.error_msg,\n                        showCancel: false\n                    });\n                    break;\n                }\n            case 'match_room_result':\n                databus.mySeat = data.my_seat;\n            case 'create_room_result':\n                databus.roomNo = data.room_no;\n                this.gameServer.sendMessage({ type: 'get_players_info' });\n                break;\n\n            case 'reconnect_result':\n                wx.hideLoading();\n                if (data.error_msg) {\n                    this.exitRoom();\n                    wx.showModal({\n                        title: '提示',\n                        content: data.error_msg,\n                        showCancel: false\n                    });\n                } else if (data.battle_state) {\n\n                } else {\n                    databus.mySeat = data.my_seat;\n                    engine.game.customEventEmitter.emit('get_players_info', data);\n                }\n                break;\n\n            case 'get_players_info_result':\n                engine.game.playScene(this.roomScene);\n                engine.game.customEventEmitter.emit(type, data);\n                wx.hideLoading();\n                console.log('curr player count', data.player_count);\n                data.player_count === 4 && this.gameServer.sendMessage({ type: 'start' });\n                break;\n\n            case 'player_enter':\n            case 'player_exit':\n            case 'player_change_banker_card':\n            case 'player_play':\n                engine.game.customEventEmitter.emit(type, data);\n                break;\n\n            case 'deal':\n                wx.hideLoading();\n                wx.showToast({\n                    title: '游戏即将开始',\n                    icon: 'loading',\n                    duration: 2000\n                });\n                setTimeout(() => {\n                    engine.game.customEventEmitter.emit(type, data);\n                }, 2000);\n                break;\n        }\n    }\n\n\n}\n"]}