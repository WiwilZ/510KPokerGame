{"version":2,"name":"System::Effect::FXAA","properties":[{"key":0,"type":0,"default":[1]},{"key":1,"type":0,"default":[1]}],"images":[{"key":2,"type":0,"default":"white"}],"defaultRenderQueue":2000,"passes":[{"renderStates":{"cullOn":false,"blendOn":false,"depthTestOn":false},"macros":{"__USE_MESH_COLOR":0},"lightMode":"Default","useMaterialRenderStates":false,"variants":{"0":0,"1":0}}],"variants":[{"shaders":[0,1],"uniformBlock":[]}],"shaders":["#version 100\n\nattribute vec2 a_position;\nvarying vec2 varying_TexCoord;\n\nvoid main()\n{\n    gl_Position = vec4(a_position, 0.0, 1.0);\n    varying_TexCoord = (a_position * 0.5) + vec2(0.5);\n}\n\n","#version 100\nprecision mediump float;\nprecision highp int;\n\nuniform highp float u_width;\nuniform highp float u_height;\nuniform highp float u_nearClipPlane;\nuniform highp float u_farClipPlane;\n\n\nuniform highp sampler2D sourceTex;\n\nvarying highp vec2 varying_TexCoord;\n\nvec2 _822 = vec2(0.0);\n\nvoid main()\n{\n    highp vec4 _825 = vec4(0.0);\n    for (int SPIRV_Cross_Dummy54 = 0; SPIRV_Cross_Dummy54 < 1; SPIRV_Cross_Dummy54++)\n    {\n        highp vec2 _501 = vec2(u_width, u_height);\n        highp vec2 _503 = vec2(1.0) / _501;\n        highp vec4 _511 = texture2D(sourceTex, varying_TexCoord + (vec2(-1.0) / _501));\n        highp vec4 _519 = texture2D(sourceTex, varying_TexCoord + (vec2(1.0, -1.0) / _501));\n        highp vec4 _527 = texture2D(sourceTex, varying_TexCoord + (vec2(-1.0, 1.0) / _501));\n        highp vec4 _535 = texture2D(sourceTex, varying_TexCoord + _503);\n        highp vec4 _548 = texture2D(sourceTex, varying_TexCoord);\n        highp float _556 = dot(_511.xyz, vec3(0.2989999949932098388671875, 0.58700001239776611328125, 0.114000000059604644775390625)) * _511.w;\n        highp float _562 = dot(_519.xyz, vec3(0.2989999949932098388671875, 0.58700001239776611328125, 0.114000000059604644775390625)) * _519.w;\n        highp float _568 = dot(_527.xyz, vec3(0.2989999949932098388671875, 0.58700001239776611328125, 0.114000000059604644775390625)) * _527.w;\n        highp float _574 = dot(_535.xyz, vec3(0.2989999949932098388671875, 0.58700001239776611328125, 0.114000000059604644775390625)) * _535.w;\n        highp float _580 = dot(_548.xyz, vec3(0.2989999949932098388671875, 0.58700001239776611328125, 0.114000000059604644775390625)) * _548.w;\n        highp float _601 = _556 + _562;\n        highp float _606 = -(_601 - (_568 + _574));\n        highp vec2 _800 = _822;\n        _800.x = _606;\n        highp float _614 = (_556 + _568) - (_562 + _574);\n        highp vec2 _802 = _800;\n        _802.y = _614;\n        highp vec2 _641 = min(vec2(16.0), max(vec2(-16.0), _802 * (1.0 / (min(abs(_606), abs(_614)) + max(((_601 + _568) + _574) * 0.015625, 0.0078125))))) * _503;\n        highp vec4 _649 = texture2D(sourceTex, varying_TexCoord + (_641 * (-0.16666667163372039794921875)));\n        highp vec4 _657 = texture2D(sourceTex, varying_TexCoord + (_641 * 0.16666667163372039794921875));\n        highp vec4 _823 = vec4(0.0);\n        for (int SPIRV_Cross_Dummy133 = 0; SPIRV_Cross_Dummy133 < 1; SPIRV_Cross_Dummy133++)\n        {\n            highp float _706 = _649.w;\n            highp float _708 = _657.w;\n            highp float _709 = _706 + _708;\n            if (_709 < 9.9999997473787516355514526367188e-05)\n            {\n                _823 = vec4(0.0);\n                break;\n            }\n            _823 = vec4(((_649.xyz * _706) + (_657.xyz * _708)) / vec3(_709), _709 * 0.5);\n            break;\n        }\n        highp vec4 _668 = texture2D(sourceTex, varying_TexCoord + (_641 * (-0.5)));\n        highp vec4 _676 = texture2D(sourceTex, varying_TexCoord + (_641 * 0.5));\n        highp vec4 _824 = vec4(0.0);\n        for (int SPIRV_Cross_Dummy175 = 0; SPIRV_Cross_Dummy175 < 1; SPIRV_Cross_Dummy175++)\n        {\n            highp float _749 = _668.w;\n            highp float _751 = _676.w;\n            highp float _752 = _749 + _751;\n            if (_752 < 9.9999997473787516355514526367188e-05)\n            {\n                _824 = vec4(0.0);\n                break;\n            }\n            _824 = vec4(((_668.xyz * _749) + (_676.xyz * _751)) / vec3(_752), _752 * 0.5);\n            break;\n        }\n        highp vec4 _679 = (_823 * 0.5) + (_824 * 0.5);\n        highp float _686 = dot(_679.xyz, vec3(0.2989999949932098388671875, 0.58700001239776611328125, 0.114000000059604644775390625)) * _679.w;\n        if ((_686 < min(_580, min(min(_556, _562), min(_568, _574)))) || (_686 > max(_580, max(max(_556, _562), max(_568, _574)))))\n        {\n            _825 = _823;\n            break;\n        }\n        _825 = _679;\n        break;\n    }\n    gl_FragData[0] = _825;\n}\n\n"],"uniformBlocks":[],"strings":["u_width","u_height","sourceTex"],"sourceAsset":{"name":"System::Effect::FXAA","shaderProperties":[{"key":"u_width","type":"Float","default":[1]},{"key":"u_height","type":"Float","default":[1]}],"textures":[{"key":"sourceTex","type":"Texture2D","default":"white"}],"defaultRenderQueue":2000,"passes":[{"lightMode":"Default","useMaterialRenderStates":false,"vs":"./Screen.vertex.hlsl","ps":"./FXAA.pixel.hlsl","renderStates":{"blendOn":false,"depthTestOn":false,"cullOn":false}}],"editorInfo":{"assetVersion":2}}}