{"version":2,"name":"System::Effect::Terrain4","properties":[{"key":0,"type":2,"default":[1,1,1]},{"key":1,"type":3,"default":[0.5,0.5,0.5,1]},{"key":2,"type":0,"default":[0.1]},{"key":3,"type":3,"default":[1,1,0,0]},{"key":4,"type":3,"default":[1,1,0,0]},{"key":5,"type":3,"default":[1,1,0,0]},{"key":6,"type":3,"default":[1,1,0,0]},{"key":7,"type":3,"default":[1,1,0,0]}],"images":[{"key":8,"type":0,"default":"white"},{"key":9,"type":0,"default":"white"},{"key":10,"type":0,"default":"white"},{"key":11,"type":0,"default":"white"},{"key":12,"type":0,"default":"white"}],"defaultRenderQueue":2000,"passes":[{"renderStates":{"cullOn":true,"blendOn":false,"cullFace":2},"macros":{"__USE_RECEIVE_SHADOW_CSM":2,"__USE_RECEIVE_SHADOW_PCSS":3,"__USE_RECEIVE_SHADOW":1,"__USE_MESH_COLOR":0},"lightMode":"ForwardBase","useMaterialRenderStates":true,"variants":{"0":0,"1":4,"2":3,"3":7,"4":2,"5":6,"8":1,"9":5}}],"variants":[{"shaders":[0,1],"uniformBlock":[0]},{"shaders":[2,3],"uniformBlock":[0]},{"shaders":[2,4],"uniformBlock":[0]},{"shaders":[2,5],"uniformBlock":[0]},{"shaders":[6,1],"uniformBlock":[0]},{"shaders":[7,3],"uniformBlock":[0]},{"shaders":[7,4],"uniformBlock":[0]},{"shaders":[7,5],"uniformBlock":[0]}],"shaders":["#version 100\n\nuniform mat4 u_world;\nuniform vec4 u_lightMapScaleOffset;\nuniform float u_lightCountFA;\nuniform vec4 u_lightPosFA[4];\nuniform vec4 u_lightColorFA[4];\nuniform vec4 u_lightAttenFA[4];\nuniform vec4 u_spotDirFA[4];\n\n\nuniform mat4 u_view;\nuniform mat4 u_viewInverse;\nuniform mat4 u_vp;\nuniform mat4 u_projection;\nuniform mat4 u_lightSpaceMatrix;\nuniform vec4 u_fogInfos;\nuniform vec3 u_fogColor;\nuniform float u_gameTime;\nuniform float u_aspect;\nuniform vec3 u_ambientLight;\nuniform vec3 u_lightDir;\nuniform vec3 u_lightColor;\nuniform vec3 u_shadowColor;\nuniform float u_shadowStrength;\nuniform float u_shadowBias;\nuniform float u_lightWidthPCSS;\nuniform float u_blockSizePCSS;\nuniform vec4 u_csmFarBounds;\nuniform vec4 u_shadowTilingOffsets[4];\nuniform mat4 u_csmLightSpaceMatrices[4];\nuniform vec3 u_SH[9];\n\n\nuniform vec4 _SpecColor;\nuniform vec4 _Control_ST;\nuniform vec4 _Splat0_ST;\nuniform vec4 _Splat1_ST;\nuniform vec4 _Splat2_ST;\nuniform vec4 _Splat3_ST;\nuniform vec3 _Color;\nuniform float _Shininess;\n\n\nattribute vec4 a_position;\nattribute vec2 a_texCoord;\nattribute vec3 a_normal;\nvarying vec2 varying_UVControl;\nvarying vec2 varying_UVSplat0;\nvarying vec2 varying_UVSplat1;\nvarying vec2 varying_UVSplat2;\nvarying vec2 varying_UVSplat3;\nvarying vec3 varying_LightDir;\nvarying vec3 varying_ViewDir;\nvarying vec3 varying_WorldNormal;\n\nvoid main()\n{\n    vec4 _613 = u_world * a_position;\n    vec2 _457 = vec2(a_texCoord.x, a_texCoord.y - 1.0);\n    gl_Position = u_projection * (u_view * _613);\n    varying_UVControl = (_457 * _Control_ST.xy) + vec2(_Control_ST.z, 1.0 - _Control_ST.w);\n    varying_UVSplat0 = (_457 * _Splat0_ST.xy) + vec2(_Splat0_ST.z, 1.0 - _Splat0_ST.w);\n    varying_UVSplat1 = (_457 * _Splat1_ST.xy) + vec2(_Splat1_ST.z, 1.0 - _Splat1_ST.w);\n    varying_UVSplat2 = (_457 * _Splat2_ST.xy) + vec2(_Splat2_ST.z, 1.0 - _Splat2_ST.w);\n    varying_UVSplat3 = (_457 * _Splat3_ST.xy) + vec2(_Splat3_ST.z, 1.0 - _Splat3_ST.w);\n    varying_LightDir = u_lightDir;\n    varying_ViewDir = normalize(vec3(u_viewInverse[3].x, u_viewInverse[3].y, u_viewInverse[3].z) - _613.xyz);\n    varying_WorldNormal = normalize(mat3(u_world[0].xyz, u_world[1].xyz, u_world[2].xyz) * a_normal);\n}\n\n","#version 100\nprecision mediump float;\nprecision highp int;\n\nuniform highp vec4 _SpecColor;\nuniform highp vec4 _Control_ST;\nuniform highp vec4 _Splat0_ST;\nuniform highp vec4 _Splat1_ST;\nuniform highp vec4 _Splat2_ST;\nuniform highp vec4 _Splat3_ST;\nuniform highp vec3 _Color;\nuniform highp float _Shininess;\n\n\nuniform highp mat4 u_view;\nuniform highp mat4 u_viewInverse;\nuniform highp mat4 u_vp;\nuniform highp mat4 u_projection;\nuniform highp mat4 u_lightSpaceMatrix;\nuniform highp vec4 u_fogInfos;\nuniform highp vec3 u_fogColor;\nuniform highp float u_gameTime;\nuniform highp float u_aspect;\nuniform highp vec3 u_ambientLight;\nuniform highp vec3 u_lightDir;\nuniform highp vec3 u_lightColor;\nuniform highp vec3 u_shadowColor;\nuniform highp float u_shadowStrength;\nuniform highp float u_shadowBias;\nuniform highp float u_lightWidthPCSS;\nuniform highp float u_blockSizePCSS;\nuniform highp vec4 u_csmFarBounds;\nuniform highp vec4 u_shadowTilingOffsets[4];\nuniform highp mat4 u_csmLightSpaceMatrices[4];\nuniform highp vec3 u_SH[9];\n\n\nuniform highp sampler2D _Control;\nuniform highp sampler2D _Splat0;\nuniform highp sampler2D _Splat1;\nuniform highp sampler2D _Splat2;\nuniform highp sampler2D _Splat3;\n\nvarying highp vec2 varying_UVControl;\nvarying highp vec2 varying_UVSplat0;\nvarying highp vec2 varying_UVSplat1;\nvarying highp vec2 varying_UVSplat2;\nvarying highp vec2 varying_UVSplat3;\nvarying highp vec3 varying_LightDir;\nvarying highp vec3 varying_ViewDir;\nvarying highp vec3 varying_WorldNormal;\n\nvoid main()\n{\n    highp vec4 _376 = texture2D(_Control, varying_UVControl);\n    highp vec3 _430 = normalize(varying_LightDir);\n    highp vec3 _436 = normalize(varying_WorldNormal);\n    gl_FragData[0] = vec4((((((texture2D(_Splat0, varying_UVSplat0).xyz * _376.x) + (texture2D(_Splat1, varying_UVSplat1).xyz * _376.y)) + (texture2D(_Splat2, varying_UVSplat2).xyz * _376.z)) + (texture2D(_Splat3, varying_UVSplat3).xyz * _376.w)) * _Color) * ((u_ambientLight + ((u_lightColor * max(0.0, dot(_430, _436))) * 1.0)) + ((u_lightColor * pow(max(0.0, dot(normalize(normalize(varying_ViewDir) + _430), _436)), _Shininess * 128.0)) * _SpecColor.xyz)), 1.0);\n}\n\n","#version 100\n\nuniform mat4 u_world;\nuniform vec4 u_lightMapScaleOffset;\nuniform float u_lightCountFA;\nuniform vec4 u_lightPosFA[4];\nuniform vec4 u_lightColorFA[4];\nuniform vec4 u_lightAttenFA[4];\nuniform vec4 u_spotDirFA[4];\n\n\nuniform mat4 u_view;\nuniform mat4 u_viewInverse;\nuniform mat4 u_vp;\nuniform mat4 u_projection;\nuniform mat4 u_lightSpaceMatrix;\nuniform vec4 u_fogInfos;\nuniform vec3 u_fogColor;\nuniform float u_gameTime;\nuniform float u_aspect;\nuniform vec3 u_ambientLight;\nuniform vec3 u_lightDir;\nuniform vec3 u_lightColor;\nuniform vec3 u_shadowColor;\nuniform float u_shadowStrength;\nuniform float u_shadowBias;\nuniform float u_lightWidthPCSS;\nuniform float u_blockSizePCSS;\nuniform vec4 u_csmFarBounds;\nuniform vec4 u_shadowTilingOffsets[4];\nuniform mat4 u_csmLightSpaceMatrices[4];\nuniform vec3 u_SH[9];\n\n\nuniform vec4 _SpecColor;\nuniform vec4 _Control_ST;\nuniform vec4 _Splat0_ST;\nuniform vec4 _Splat1_ST;\nuniform vec4 _Splat2_ST;\nuniform vec4 _Splat3_ST;\nuniform vec3 _Color;\nuniform float _Shininess;\n\n\nattribute vec4 a_position;\nattribute vec2 a_texCoord;\nattribute vec3 a_normal;\nvarying vec2 varying_UVControl;\nvarying vec2 varying_UVSplat0;\nvarying vec2 varying_UVSplat1;\nvarying vec2 varying_UVSplat2;\nvarying vec2 varying_UVSplat3;\nvarying vec3 varying_LightDir;\nvarying vec3 varying_ViewDir;\nvarying vec3 varying_WorldNormal;\nvarying vec3 varying_ShadowPosition;\n\nvoid main()\n{\n    vec4 _623 = u_world * a_position;\n    vec2 _464 = vec2(a_texCoord.x, a_texCoord.y - 1.0);\n    vec3 _562 = _623.xyz;\n    gl_Position = u_projection * (u_view * _623);\n    varying_UVControl = (_464 * _Control_ST.xy) + vec2(_Control_ST.z, 1.0 - _Control_ST.w);\n    varying_UVSplat0 = (_464 * _Splat0_ST.xy) + vec2(_Splat0_ST.z, 1.0 - _Splat0_ST.w);\n    varying_UVSplat1 = (_464 * _Splat1_ST.xy) + vec2(_Splat1_ST.z, 1.0 - _Splat1_ST.w);\n    varying_UVSplat2 = (_464 * _Splat2_ST.xy) + vec2(_Splat2_ST.z, 1.0 - _Splat2_ST.w);\n    varying_UVSplat3 = (_464 * _Splat3_ST.xy) + vec2(_Splat3_ST.z, 1.0 - _Splat3_ST.w);\n    varying_LightDir = u_lightDir;\n    varying_ViewDir = normalize(vec3(u_viewInverse[3].x, u_viewInverse[3].y, u_viewInverse[3].z) - _562);\n    varying_WorldNormal = normalize(mat3(u_world[0].xyz, u_world[1].xyz, u_world[2].xyz) * a_normal);\n    varying_ShadowPosition = _562;\n}\n\n","#version 100\nprecision mediump float;\nprecision highp int;\n\nuniform highp mat4 u_view;\nuniform highp mat4 u_viewInverse;\nuniform highp mat4 u_vp;\nuniform highp mat4 u_projection;\nuniform highp mat4 u_lightSpaceMatrix;\nuniform highp vec4 u_fogInfos;\nuniform highp vec3 u_fogColor;\nuniform highp float u_gameTime;\nuniform highp float u_aspect;\nuniform highp vec3 u_ambientLight;\nuniform highp vec3 u_lightDir;\nuniform highp vec3 u_lightColor;\nuniform highp vec3 u_shadowColor;\nuniform highp float u_shadowStrength;\nuniform highp float u_shadowBias;\nuniform highp float u_lightWidthPCSS;\nuniform highp float u_blockSizePCSS;\nuniform highp vec4 u_csmFarBounds;\nuniform highp vec4 u_shadowTilingOffsets[4];\nuniform highp mat4 u_csmLightSpaceMatrices[4];\nuniform highp vec3 u_SH[9];\n\n\nuniform highp vec4 _SpecColor;\nuniform highp vec4 _Control_ST;\nuniform highp vec4 _Splat0_ST;\nuniform highp vec4 _Splat1_ST;\nuniform highp vec4 _Splat2_ST;\nuniform highp vec4 _Splat3_ST;\nuniform highp vec3 _Color;\nuniform highp float _Shininess;\n\n\nuniform highp sampler2D _Control;\nuniform highp sampler2D _Splat0;\nuniform highp sampler2D _Splat1;\nuniform highp sampler2D _Splat2;\nuniform highp sampler2D _Splat3;\nuniform highp sampler2D u_shadowMapTex;\n\nvarying highp vec2 varying_UVControl;\nvarying highp vec2 varying_UVSplat0;\nvarying highp vec2 varying_UVSplat1;\nvarying highp vec2 varying_UVSplat2;\nvarying highp vec2 varying_UVSplat3;\nvarying highp vec3 varying_LightDir;\nvarying highp vec3 varying_ViewDir;\nvarying highp vec3 varying_WorldNormal;\nvarying highp vec3 varying_ShadowPosition;\n\nvoid main()\n{\n    highp vec4 _647 = texture2D(_Control, varying_UVControl);\n    highp vec4 _653 = texture2D(_Splat0, varying_UVSplat0);\n    highp vec4 _660 = texture2D(_Splat1, varying_UVSplat1);\n    highp vec4 _667 = texture2D(_Splat2, varying_UVSplat2);\n    highp vec4 _674 = texture2D(_Splat3, varying_UVSplat3);\n    highp vec3 _701 = normalize(varying_LightDir);\n    highp vec3 _707 = normalize(varying_WorldNormal);\n    highp float _1105 = 0.0;\n    for (int SPIRV_Cross_Dummy295 = 0; SPIRV_Cross_Dummy295 < 1; SPIRV_Cross_Dummy295++)\n    {\n        highp vec3 _801 = ((u_csmLightSpaceMatrices[0] * vec4(varying_ShadowPosition, 1.0)).xyz * 0.5) + vec3(0.5);\n        highp float _804 = _801.z;\n        highp vec2 _845 = vec2(u_blockSizePCSS);\n        highp vec2 _853 = _801.xy;\n        highp vec2 _854 = (_845 * vec2(-0.0004599688691087067127227783203125, -0.0001948545686900615692138671875)) + _853;\n        highp float _1111 = 0.0;\n        for (int SPIRV_Cross_Dummy321 = 0; SPIRV_Cross_Dummy321 < 1; SPIRV_Cross_Dummy321++)\n        {\n            highp float _891 = _854.x;\n            highp float _895 = _854.y;\n            bool _909 = ((((_804 + step(_891, 0.001000000047497451305389404296875)) + step(_895, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _891)) + step(0.999000012874603271484375, _895)) > 1.0;\n            if (_909)\n            {\n                _1111 = 1.0;\n                break;\n            }\n            _1111 = _909 ? 1.0 : dot(texture2D(u_shadowMapTex, _854.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp float _862 = _804 - u_shadowBias;\n        bool _864 = _862 > _1111;\n        highp float _3512 = _864 ? _1111 : 0.0;\n        highp float _3513 = float(_864);\n        highp vec2 _1982 = (_845 * vec2(0.0004617119557224214076995849609375, -0.00037544299266301095485687255859375)) + _854.xy;\n        highp float _2013 = 0.0;\n        for (int SPIRV_Cross_Dummy372 = 0; SPIRV_Cross_Dummy372 < 1; SPIRV_Cross_Dummy372++)\n        {\n            highp float _1986 = _1982.x;\n            highp float _1989 = _1982.y;\n            bool _2000 = ((((_804 + step(_1986, 0.001000000047497451305389404296875)) + step(_1989, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _1986)) + step(0.999000012874603271484375, _1989)) > 1.0;\n            if (_2000)\n            {\n                _2013 = 1.0;\n                break;\n            }\n            _2013 = _2000 ? 1.0 : dot(texture2D(u_shadowMapTex, _1982.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp float _2022 = 0.0;\n        highp float _2023 = 0.0;\n        if (_862 > _2013)\n        {\n            _2022 = _3512 + _2013;\n            _2023 = _3513 + 1.0;\n        }\n        else\n        {\n            _2022 = _3512;\n            _2023 = _3513;\n        }\n        highp vec2 _2044 = (_845 * vec2(-4.598833038471639156341552734375e-05, -0.00045380307710729539394378662109375)) + _1982.xy;\n        highp float _2075 = 0.0;\n        for (int SPIRV_Cross_Dummy441 = 0; SPIRV_Cross_Dummy441 < 1; SPIRV_Cross_Dummy441++)\n        {\n            highp float _2048 = _2044.x;\n            highp float _2051 = _2044.y;\n            bool _2062 = ((((_804 + step(_2048, 0.001000000047497451305389404296875)) + step(_2051, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _2048)) + step(0.999000012874603271484375, _2051)) > 1.0;\n            if (_2062)\n            {\n                _2075 = 1.0;\n                break;\n            }\n            _2075 = _2062 ? 1.0 : dot(texture2D(u_shadowMapTex, _2044.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp float _2084 = 0.0;\n        highp float _2085 = 0.0;\n        if (_862 > _2075)\n        {\n            _2084 = _2022 + _2075;\n            _2085 = _2023 + 1.0;\n        }\n        else\n        {\n            _2084 = _2022;\n            _2085 = _2023;\n        }\n        highp vec2 _2106 = (_845 * vec2(0.0001684371964074671268463134765625, 0.0001434949226677417755126953125)) + _2044.xy;\n        highp float _2137 = 0.0;\n        for (int SPIRV_Cross_Dummy510 = 0; SPIRV_Cross_Dummy510 < 1; SPIRV_Cross_Dummy510++)\n        {\n            highp float _2110 = _2106.x;\n            highp float _2113 = _2106.y;\n            bool _2124 = ((((_804 + step(_2110, 0.001000000047497451305389404296875)) + step(_2113, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _2110)) + step(0.999000012874603271484375, _2113)) > 1.0;\n            if (_2124)\n            {\n                _2137 = 1.0;\n                break;\n            }\n            _2137 = _2124 ? 1.0 : dot(texture2D(u_shadowMapTex, _2106.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp float _2146 = 0.0;\n        highp float _2147 = 0.0;\n        if (_862 > _2137)\n        {\n            _2146 = _2084 + _2137;\n            _2147 = _2085 + 1.0;\n        }\n        else\n        {\n            _2146 = _2084;\n            _2147 = _2085;\n        }\n        highp vec2 _2168 = (_845 * vec2(-0.0004472098662517964839935302734375, 0.000223493319936096668243408203125)) + _2106.xy;\n        highp float _2199 = 0.0;\n        for (int SPIRV_Cross_Dummy579 = 0; SPIRV_Cross_Dummy579 < 1; SPIRV_Cross_Dummy579++)\n        {\n            highp float _2172 = _2168.x;\n            highp float _2175 = _2168.y;\n            bool _2186 = ((((_804 + step(_2172, 0.001000000047497451305389404296875)) + step(_2175, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _2172)) + step(0.999000012874603271484375, _2175)) > 1.0;\n            if (_2186)\n            {\n                _2199 = 1.0;\n                break;\n            }\n            _2199 = _2186 ? 1.0 : dot(texture2D(u_shadowMapTex, _2168.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp float _2208 = 0.0;\n        highp float _2209 = 0.0;\n        if (_862 > _2199)\n        {\n            _2208 = _2146 + _2199;\n            _2209 = _2147 + 1.0;\n        }\n        else\n        {\n            _2208 = _2146;\n            _2209 = _2147;\n        }\n        highp vec2 _2230 = (_845 * vec2(-0.000398165197111666202545166015625, -0.0004292600788176059722900390625)) + _2168.xy;\n        highp float _2261 = 0.0;\n        for (int SPIRV_Cross_Dummy648 = 0; SPIRV_Cross_Dummy648 < 1; SPIRV_Cross_Dummy648++)\n        {\n            highp float _2234 = _2230.x;\n            highp float _2237 = _2230.y;\n            bool _2248 = ((((_804 + step(_2234, 0.001000000047497451305389404296875)) + step(_2237, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _2234)) + step(0.999000012874603271484375, _2237)) > 1.0;\n            if (_2248)\n            {\n                _2261 = 1.0;\n                break;\n            }\n            _2261 = _2248 ? 1.0 : dot(texture2D(u_shadowMapTex, _2230.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp float _2270 = 0.0;\n        highp float _2271 = 0.0;\n        if (_862 > _2261)\n        {\n            _2270 = _2208 + _2261;\n            _2271 = _2209 + 1.0;\n        }\n        else\n        {\n            _2270 = _2208;\n            _2271 = _2209;\n        }\n        highp vec2 _2292 = (_845 * vec2(-0.0001869020634330809116363525390625, 0.000135140842758119106292724609375)) + _2230.xy;\n        highp float _2323 = 0.0;\n        for (int SPIRV_Cross_Dummy717 = 0; SPIRV_Cross_Dummy717 < 1; SPIRV_Cross_Dummy717++)\n        {\n            highp float _2296 = _2292.x;\n            highp float _2299 = _2292.y;\n            bool _2310 = ((((_804 + step(_2296, 0.001000000047497451305389404296875)) + step(_2299, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _2296)) + step(0.999000012874603271484375, _2299)) > 1.0;\n            if (_2310)\n            {\n                _2323 = 1.0;\n                break;\n            }\n            _2323 = _2310 ? 1.0 : dot(texture2D(u_shadowMapTex, _2292.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp float _2332 = 0.0;\n        highp float _2333 = 0.0;\n        if (_862 > _2323)\n        {\n            _2332 = _2270 + _2323;\n            _2333 = _2271 + 1.0;\n        }\n        else\n        {\n            _2332 = _2270;\n            _2333 = _2271;\n        }\n        highp vec2 _2354 = (_845 * vec2(0.000475998036563396453857421875, 0.000369376852177083492279052734375)) + _2292.xy;\n        highp float _2385 = 0.0;\n        for (int SPIRV_Cross_Dummy786 = 0; SPIRV_Cross_Dummy786 < 1; SPIRV_Cross_Dummy786++)\n        {\n            highp float _2358 = _2354.x;\n            highp float _2361 = _2354.y;\n            bool _2372 = ((((_804 + step(_2358, 0.001000000047497451305389404296875)) + step(_2361, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _2358)) + step(0.999000012874603271484375, _2361)) > 1.0;\n            if (_2372)\n            {\n                _2385 = 1.0;\n                break;\n            }\n            _2385 = _2372 ? 1.0 : dot(texture2D(u_shadowMapTex, _2354.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp float _2394 = 0.0;\n        highp float _2395 = 0.0;\n        if (_862 > _2385)\n        {\n            _2394 = _2332 + _2385;\n            _2395 = _2333 + 1.0;\n        }\n        else\n        {\n            _2394 = _2332;\n            _2395 = _2333;\n        }\n        highp vec2 _2416 = (_845 * vec2(0.000216422486118972301483154296875, -0.000476130633614957332611083984375)) + _2354.xy;\n        highp float _2447 = 0.0;\n        for (int SPIRV_Cross_Dummy855 = 0; SPIRV_Cross_Dummy855 < 1; SPIRV_Cross_Dummy855++)\n        {\n            highp float _2420 = _2416.x;\n            highp float _2423 = _2416.y;\n            bool _2434 = ((((_804 + step(_2420, 0.001000000047497451305389404296875)) + step(_2423, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _2420)) + step(0.999000012874603271484375, _2423)) > 1.0;\n            if (_2434)\n            {\n                _2447 = 1.0;\n                break;\n            }\n            _2447 = _2434 ? 1.0 : dot(texture2D(u_shadowMapTex, _2416.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp float _2456 = 0.0;\n        highp float _2457 = 0.0;\n        if (_862 > _2447)\n        {\n            _2456 = _2394 + _2447;\n            _2457 = _2395 + 1.0;\n        }\n        else\n        {\n            _2456 = _2394;\n            _2457 = _2395;\n        }\n        highp vec2 _2478 = (_845 * vec2(0.000262416899204254150390625, -0.00023131552734412252902984619140625)) + _2416.xy;\n        highp float _2509 = 0.0;\n        for (int SPIRV_Cross_Dummy924 = 0; SPIRV_Cross_Dummy924 < 1; SPIRV_Cross_Dummy924++)\n        {\n            highp float _2482 = _2478.x;\n            highp float _2485 = _2478.y;\n            bool _2496 = ((((_804 + step(_2482, 0.001000000047497451305389404296875)) + step(_2485, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _2482)) + step(0.999000012874603271484375, _2485)) > 1.0;\n            if (_2496)\n            {\n                _2509 = 1.0;\n                break;\n            }\n            _2509 = _2496 ? 1.0 : dot(texture2D(u_shadowMapTex, _2478.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp float _2518 = 0.0;\n        highp float _2519 = 0.0;\n        if (_862 > _2509)\n        {\n            _2518 = _2456 + _2509;\n            _2519 = _2457 + 1.0;\n        }\n        else\n        {\n            _2518 = _2456;\n            _2519 = _2457;\n        }\n        highp vec2 _2540 = (_845 * vec2(-0.000129379448480904102325439453125, -0.00020455577760003507137298583984375)) + _2478.xy;\n        highp float _2571 = 0.0;\n        for (int SPIRV_Cross_Dummy993 = 0; SPIRV_Cross_Dummy993 < 1; SPIRV_Cross_Dummy993++)\n        {\n            highp float _2544 = _2540.x;\n            highp float _2547 = _2540.y;\n            bool _2558 = ((((_804 + step(_2544, 0.001000000047497451305389404296875)) + step(_2547, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _2544)) + step(0.999000012874603271484375, _2547)) > 1.0;\n            if (_2558)\n            {\n                _2571 = 1.0;\n                break;\n            }\n            _2571 = _2558 ? 1.0 : dot(texture2D(u_shadowMapTex, _2540.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp float _2580 = 0.0;\n        highp float _2581 = 0.0;\n        if (_862 > _2571)\n        {\n            _2580 = _2518 + _2571;\n            _2581 = _2519 + 1.0;\n        }\n        else\n        {\n            _2580 = _2518;\n            _2581 = _2519;\n        }\n        highp vec2 _2602 = (_845 * vec2(0.0003867066116072237491607666015625, 9.32138063944876194000244140625e-05)) + _2540.xy;\n        highp float _2633 = 0.0;\n        for (int SPIRV_Cross_Dummy1062 = 0; SPIRV_Cross_Dummy1062 < 1; SPIRV_Cross_Dummy1062++)\n        {\n            highp float _2606 = _2602.x;\n            highp float _2609 = _2602.y;\n            bool _2620 = ((((_804 + step(_2606, 0.001000000047497451305389404296875)) + step(_2609, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _2606)) + step(0.999000012874603271484375, _2609)) > 1.0;\n            if (_2620)\n            {\n                _2633 = 1.0;\n                break;\n            }\n            _2633 = _2620 ? 1.0 : dot(texture2D(u_shadowMapTex, _2602.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp float _2642 = 0.0;\n        highp float _2643 = 0.0;\n        if (_862 > _2633)\n        {\n            _2642 = _2580 + _2633;\n            _2643 = _2581 + 1.0;\n        }\n        else\n        {\n            _2642 = _2580;\n            _2643 = _2581;\n        }\n        highp vec2 _2664 = (_845 * vec2(-0.0001181095722131431102752685546875, 0.00048684817738831043243408203125)) + _2602.xy;\n        highp float _2695 = 0.0;\n        for (int SPIRV_Cross_Dummy1131 = 0; SPIRV_Cross_Dummy1131 < 1; SPIRV_Cross_Dummy1131++)\n        {\n            highp float _2668 = _2664.x;\n            highp float _2671 = _2664.y;\n            bool _2682 = ((((_804 + step(_2668, 0.001000000047497451305389404296875)) + step(_2671, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _2668)) + step(0.999000012874603271484375, _2671)) > 1.0;\n            if (_2682)\n            {\n                _2695 = 1.0;\n                break;\n            }\n            _2695 = _2682 ? 1.0 : dot(texture2D(u_shadowMapTex, _2664.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp float _2704 = 0.0;\n        highp float _2705 = 0.0;\n        if (_862 > _2695)\n        {\n            _2704 = _2642 + _2695;\n            _2705 = _2643 + 1.0;\n        }\n        else\n        {\n            _2704 = _2642;\n            _2705 = _2643;\n        }\n        highp vec2 _2726 = (_845 * vec2(-0.000397509546019136905670166015625, 0.0004464726080186665058135986328125)) + _2664.xy;\n        highp float _2757 = 0.0;\n        for (int SPIRV_Cross_Dummy1200 = 0; SPIRV_Cross_Dummy1200 < 1; SPIRV_Cross_Dummy1200++)\n        {\n            highp float _2730 = _2726.x;\n            highp float _2733 = _2726.y;\n            bool _2744 = ((((_804 + step(_2730, 0.001000000047497451305389404296875)) + step(_2733, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _2730)) + step(0.999000012874603271484375, _2733)) > 1.0;\n            if (_2744)\n            {\n                _2757 = 1.0;\n                break;\n            }\n            _2757 = _2744 ? 1.0 : dot(texture2D(u_shadowMapTex, _2726.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp float _2766 = 0.0;\n        highp float _2767 = 0.0;\n        if (_862 > _2757)\n        {\n            _2766 = _2704 + _2757;\n            _2767 = _2705 + 1.0;\n        }\n        else\n        {\n            _2766 = _2704;\n            _2767 = _2705;\n        }\n        highp vec2 _2788 = (_845 * vec2(9.7578740678727626800537109375e-05, 0.00038399104960262775421142578125)) + _2726.xy;\n        highp float _2819 = 0.0;\n        for (int SPIRV_Cross_Dummy1269 = 0; SPIRV_Cross_Dummy1269 < 1; SPIRV_Cross_Dummy1269++)\n        {\n            highp float _2792 = _2788.x;\n            highp float _2795 = _2788.y;\n            bool _2806 = ((((_804 + step(_2792, 0.001000000047497451305389404296875)) + step(_2795, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _2792)) + step(0.999000012874603271484375, _2795)) > 1.0;\n            if (_2806)\n            {\n                _2819 = 1.0;\n                break;\n            }\n            _2819 = _2806 ? 1.0 : dot(texture2D(u_shadowMapTex, _2788.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp float _2828 = 0.0;\n        highp float _2829 = 0.0;\n        if (_862 > _2819)\n        {\n            _2828 = _2766 + _2819;\n            _2829 = _2767 + 1.0;\n        }\n        else\n        {\n            _2828 = _2766;\n            _2829 = _2767;\n        }\n        highp vec2 _2850 = (_845 * vec2(7.02302786521613597869873046875e-05, -6.885151378810405731201171875e-05)) + _2788.xy;\n        highp float _2881 = 0.0;\n        for (int SPIRV_Cross_Dummy1338 = 0; SPIRV_Cross_Dummy1338 < 1; SPIRV_Cross_Dummy1338++)\n        {\n            highp float _2854 = _2850.x;\n            highp float _2857 = _2850.y;\n            bool _2868 = ((((_804 + step(_2854, 0.001000000047497451305389404296875)) + step(_2857, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _2854)) + step(0.999000012874603271484375, _2857)) > 1.0;\n            if (_2868)\n            {\n                _2881 = 1.0;\n                break;\n            }\n            _2881 = _2868 ? 1.0 : dot(texture2D(u_shadowMapTex, _2850.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp float _2890 = 0.0;\n        highp float _2891 = 0.0;\n        if (_862 > _2881)\n        {\n            _2890 = _2828 + _2881;\n            _2891 = _2829 + 1.0;\n        }\n        else\n        {\n            _2890 = _2828;\n            _2891 = _2829;\n        }\n        highp float _881 = (_2891 > 0.0) ? (_2890 / _2891) : 1.0;\n        if (_881 > 0.999000012874603271484375)\n        {\n            _1105 = 1.0;\n            break;\n        }\n        highp vec2 _946 = vec2((max(_804 - _881, 0.0) / _881) * u_lightWidthPCSS);\n        highp vec2 _955 = (_946 * vec2(-0.0004599688691087067127227783203125, -0.0001948545686900615692138671875)) + _853;\n        highp float _1100 = 0.0;\n        for (int SPIRV_Cross_Dummy1423 = 0; SPIRV_Cross_Dummy1423 < 1; SPIRV_Cross_Dummy1423++)\n        {\n            highp float _988 = _955.x;\n            highp float _992 = _955.y;\n            bool _1006 = ((((_804 + step(_988, 0.001000000047497451305389404296875)) + step(_992, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _988)) + step(0.999000012874603271484375, _992)) > 1.0;\n            if (_1006)\n            {\n                _1100 = 1.0;\n                break;\n            }\n            _1100 = _1006 ? 1.0 : dot(texture2D(u_shadowMapTex, _955.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp vec2 _1138 = (_946 * vec2(0.0004617119557224214076995849609375, -0.00037544299266301095485687255859375)) + _955.xy;\n        highp float _1169 = 0.0;\n        for (int SPIRV_Cross_Dummy1462 = 0; SPIRV_Cross_Dummy1462 < 1; SPIRV_Cross_Dummy1462++)\n        {\n            highp float _1142 = _1138.x;\n            highp float _1145 = _1138.y;\n            bool _1156 = ((((_804 + step(_1142, 0.001000000047497451305389404296875)) + step(_1145, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _1142)) + step(0.999000012874603271484375, _1145)) > 1.0;\n            if (_1156)\n            {\n                _1169 = 1.0;\n                break;\n            }\n            _1169 = _1156 ? 1.0 : dot(texture2D(u_shadowMapTex, _1138.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp vec2 _1194 = (_946 * vec2(-4.598833038471639156341552734375e-05, -0.00045380307710729539394378662109375)) + _1138.xy;\n        highp float _1225 = 0.0;\n        for (int SPIRV_Cross_Dummy1501 = 0; SPIRV_Cross_Dummy1501 < 1; SPIRV_Cross_Dummy1501++)\n        {\n            highp float _1198 = _1194.x;\n            highp float _1201 = _1194.y;\n            bool _1212 = ((((_804 + step(_1198, 0.001000000047497451305389404296875)) + step(_1201, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _1198)) + step(0.999000012874603271484375, _1201)) > 1.0;\n            if (_1212)\n            {\n                _1225 = 1.0;\n                break;\n            }\n            _1225 = _1212 ? 1.0 : dot(texture2D(u_shadowMapTex, _1194.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp vec2 _1250 = (_946 * vec2(0.0001684371964074671268463134765625, 0.0001434949226677417755126953125)) + _1194.xy;\n        highp float _1281 = 0.0;\n        for (int SPIRV_Cross_Dummy1540 = 0; SPIRV_Cross_Dummy1540 < 1; SPIRV_Cross_Dummy1540++)\n        {\n            highp float _1254 = _1250.x;\n            highp float _1257 = _1250.y;\n            bool _1268 = ((((_804 + step(_1254, 0.001000000047497451305389404296875)) + step(_1257, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _1254)) + step(0.999000012874603271484375, _1257)) > 1.0;\n            if (_1268)\n            {\n                _1281 = 1.0;\n                break;\n            }\n            _1281 = _1268 ? 1.0 : dot(texture2D(u_shadowMapTex, _1250.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp vec2 _1306 = (_946 * vec2(-0.0004472098662517964839935302734375, 0.000223493319936096668243408203125)) + _1250.xy;\n        highp float _1337 = 0.0;\n        for (int SPIRV_Cross_Dummy1579 = 0; SPIRV_Cross_Dummy1579 < 1; SPIRV_Cross_Dummy1579++)\n        {\n            highp float _1310 = _1306.x;\n            highp float _1313 = _1306.y;\n            bool _1324 = ((((_804 + step(_1310, 0.001000000047497451305389404296875)) + step(_1313, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _1310)) + step(0.999000012874603271484375, _1313)) > 1.0;\n            if (_1324)\n            {\n                _1337 = 1.0;\n                break;\n            }\n            _1337 = _1324 ? 1.0 : dot(texture2D(u_shadowMapTex, _1306.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp vec2 _1362 = (_946 * vec2(-0.000398165197111666202545166015625, -0.0004292600788176059722900390625)) + _1306.xy;\n        highp float _1393 = 0.0;\n        for (int SPIRV_Cross_Dummy1618 = 0; SPIRV_Cross_Dummy1618 < 1; SPIRV_Cross_Dummy1618++)\n        {\n            highp float _1366 = _1362.x;\n            highp float _1369 = _1362.y;\n            bool _1380 = ((((_804 + step(_1366, 0.001000000047497451305389404296875)) + step(_1369, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _1366)) + step(0.999000012874603271484375, _1369)) > 1.0;\n            if (_1380)\n            {\n                _1393 = 1.0;\n                break;\n            }\n            _1393 = _1380 ? 1.0 : dot(texture2D(u_shadowMapTex, _1362.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp vec2 _1418 = (_946 * vec2(-0.0001869020634330809116363525390625, 0.000135140842758119106292724609375)) + _1362.xy;\n        highp float _1449 = 0.0;\n        for (int SPIRV_Cross_Dummy1657 = 0; SPIRV_Cross_Dummy1657 < 1; SPIRV_Cross_Dummy1657++)\n        {\n            highp float _1422 = _1418.x;\n            highp float _1425 = _1418.y;\n            bool _1436 = ((((_804 + step(_1422, 0.001000000047497451305389404296875)) + step(_1425, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _1422)) + step(0.999000012874603271484375, _1425)) > 1.0;\n            if (_1436)\n            {\n                _1449 = 1.0;\n                break;\n            }\n            _1449 = _1436 ? 1.0 : dot(texture2D(u_shadowMapTex, _1418.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp vec2 _1474 = (_946 * vec2(0.000475998036563396453857421875, 0.000369376852177083492279052734375)) + _1418.xy;\n        highp float _1505 = 0.0;\n        for (int SPIRV_Cross_Dummy1696 = 0; SPIRV_Cross_Dummy1696 < 1; SPIRV_Cross_Dummy1696++)\n        {\n            highp float _1478 = _1474.x;\n            highp float _1481 = _1474.y;\n            bool _1492 = ((((_804 + step(_1478, 0.001000000047497451305389404296875)) + step(_1481, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _1478)) + step(0.999000012874603271484375, _1481)) > 1.0;\n            if (_1492)\n            {\n                _1505 = 1.0;\n                break;\n            }\n            _1505 = _1492 ? 1.0 : dot(texture2D(u_shadowMapTex, _1474.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp vec2 _1530 = (_946 * vec2(0.000216422486118972301483154296875, -0.000476130633614957332611083984375)) + _1474.xy;\n        highp float _1561 = 0.0;\n        for (int SPIRV_Cross_Dummy1735 = 0; SPIRV_Cross_Dummy1735 < 1; SPIRV_Cross_Dummy1735++)\n        {\n            highp float _1534 = _1530.x;\n            highp float _1537 = _1530.y;\n            bool _1548 = ((((_804 + step(_1534, 0.001000000047497451305389404296875)) + step(_1537, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _1534)) + step(0.999000012874603271484375, _1537)) > 1.0;\n            if (_1548)\n            {\n                _1561 = 1.0;\n                break;\n            }\n            _1561 = _1548 ? 1.0 : dot(texture2D(u_shadowMapTex, _1530.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp vec2 _1586 = (_946 * vec2(0.000262416899204254150390625, -0.00023131552734412252902984619140625)) + _1530.xy;\n        highp float _1617 = 0.0;\n        for (int SPIRV_Cross_Dummy1774 = 0; SPIRV_Cross_Dummy1774 < 1; SPIRV_Cross_Dummy1774++)\n        {\n            highp float _1590 = _1586.x;\n            highp float _1593 = _1586.y;\n            bool _1604 = ((((_804 + step(_1590, 0.001000000047497451305389404296875)) + step(_1593, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _1590)) + step(0.999000012874603271484375, _1593)) > 1.0;\n            if (_1604)\n            {\n                _1617 = 1.0;\n                break;\n            }\n            _1617 = _1604 ? 1.0 : dot(texture2D(u_shadowMapTex, _1586.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp vec2 _1642 = (_946 * vec2(-0.000129379448480904102325439453125, -0.00020455577760003507137298583984375)) + _1586.xy;\n        highp float _1673 = 0.0;\n        for (int SPIRV_Cross_Dummy1813 = 0; SPIRV_Cross_Dummy1813 < 1; SPIRV_Cross_Dummy1813++)\n        {\n            highp float _1646 = _1642.x;\n            highp float _1649 = _1642.y;\n            bool _1660 = ((((_804 + step(_1646, 0.001000000047497451305389404296875)) + step(_1649, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _1646)) + step(0.999000012874603271484375, _1649)) > 1.0;\n            if (_1660)\n            {\n                _1673 = 1.0;\n                break;\n            }\n            _1673 = _1660 ? 1.0 : dot(texture2D(u_shadowMapTex, _1642.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp vec2 _1698 = (_946 * vec2(0.0003867066116072237491607666015625, 9.32138063944876194000244140625e-05)) + _1642.xy;\n        highp float _1729 = 0.0;\n        for (int SPIRV_Cross_Dummy1852 = 0; SPIRV_Cross_Dummy1852 < 1; SPIRV_Cross_Dummy1852++)\n        {\n            highp float _1702 = _1698.x;\n            highp float _1705 = _1698.y;\n            bool _1716 = ((((_804 + step(_1702, 0.001000000047497451305389404296875)) + step(_1705, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _1702)) + step(0.999000012874603271484375, _1705)) > 1.0;\n            if (_1716)\n            {\n                _1729 = 1.0;\n                break;\n            }\n            _1729 = _1716 ? 1.0 : dot(texture2D(u_shadowMapTex, _1698.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp vec2 _1754 = (_946 * vec2(-0.0001181095722131431102752685546875, 0.00048684817738831043243408203125)) + _1698.xy;\n        highp float _1785 = 0.0;\n        for (int SPIRV_Cross_Dummy1891 = 0; SPIRV_Cross_Dummy1891 < 1; SPIRV_Cross_Dummy1891++)\n        {\n            highp float _1758 = _1754.x;\n            highp float _1761 = _1754.y;\n            bool _1772 = ((((_804 + step(_1758, 0.001000000047497451305389404296875)) + step(_1761, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _1758)) + step(0.999000012874603271484375, _1761)) > 1.0;\n            if (_1772)\n            {\n                _1785 = 1.0;\n                break;\n            }\n            _1785 = _1772 ? 1.0 : dot(texture2D(u_shadowMapTex, _1754.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp vec2 _1810 = (_946 * vec2(-0.000397509546019136905670166015625, 0.0004464726080186665058135986328125)) + _1754.xy;\n        highp float _1841 = 0.0;\n        for (int SPIRV_Cross_Dummy1930 = 0; SPIRV_Cross_Dummy1930 < 1; SPIRV_Cross_Dummy1930++)\n        {\n            highp float _1814 = _1810.x;\n            highp float _1817 = _1810.y;\n            bool _1828 = ((((_804 + step(_1814, 0.001000000047497451305389404296875)) + step(_1817, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _1814)) + step(0.999000012874603271484375, _1817)) > 1.0;\n            if (_1828)\n            {\n                _1841 = 1.0;\n                break;\n            }\n            _1841 = _1828 ? 1.0 : dot(texture2D(u_shadowMapTex, _1810.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp vec2 _1866 = (_946 * vec2(9.7578740678727626800537109375e-05, 0.00038399104960262775421142578125)) + _1810.xy;\n        highp float _1897 = 0.0;\n        for (int SPIRV_Cross_Dummy1969 = 0; SPIRV_Cross_Dummy1969 < 1; SPIRV_Cross_Dummy1969++)\n        {\n            highp float _1870 = _1866.x;\n            highp float _1873 = _1866.y;\n            bool _1884 = ((((_804 + step(_1870, 0.001000000047497451305389404296875)) + step(_1873, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _1870)) + step(0.999000012874603271484375, _1873)) > 1.0;\n            if (_1884)\n            {\n                _1897 = 1.0;\n                break;\n            }\n            _1897 = _1884 ? 1.0 : dot(texture2D(u_shadowMapTex, _1866.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        highp vec2 _1922 = (_946 * vec2(7.02302786521613597869873046875e-05, -6.885151378810405731201171875e-05)) + _1866.xy;\n        highp float _1953 = 0.0;\n        for (int SPIRV_Cross_Dummy2008 = 0; SPIRV_Cross_Dummy2008 < 1; SPIRV_Cross_Dummy2008++)\n        {\n            highp float _1926 = _1922.x;\n            highp float _1929 = _1922.y;\n            bool _1940 = ((((_804 + step(_1926, 0.001000000047497451305389404296875)) + step(_1929, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _1926)) + step(0.999000012874603271484375, _1929)) > 1.0;\n            if (_1940)\n            {\n                _1953 = 1.0;\n                break;\n            }\n            _1953 = _1940 ? 1.0 : dot(texture2D(u_shadowMapTex, _1922.xy), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0));\n            break;\n        }\n        _1105 = (((((((((((((((((_862 > _1100) ? 0.0 : 1.0) + ((_862 > _1169) ? 0.0 : 1.0)) + ((_862 > _1225) ? 0.0 : 1.0)) + ((_862 > _1281) ? 0.0 : 1.0)) + ((_862 > _1337) ? 0.0 : 1.0)) + ((_862 > _1393) ? 0.0 : 1.0)) + ((_862 > _1449) ? 0.0 : 1.0)) + ((_862 > _1505) ? 0.0 : 1.0)) + ((_862 > _1561) ? 0.0 : 1.0)) + ((_862 > _1617) ? 0.0 : 1.0)) + ((_862 > _1673) ? 0.0 : 1.0)) + ((_862 > _1729) ? 0.0 : 1.0)) + ((_862 > _1785) ? 0.0 : 1.0)) + ((_862 > _1841) ? 0.0 : 1.0)) + ((_862 > _1897) ? 0.0 : 1.0)) + ((_862 > _1953) ? 0.0 : 1.0)) * 0.0625;\n        break;\n    }\n    gl_FragData[0] = vec4((((((_653.xyz * _647.x) + (_660.xyz * _647.y)) + (_667.xyz * _647.z)) + (_674.xyz * _647.w)) * _Color) * ((u_ambientLight + ((u_lightColor * max(0.0, dot(_701, _707))) * _1105)) + ((u_lightColor * pow(max(0.0, dot(normalize(normalize(varying_ViewDir) + _701), _707)), _Shininess * 128.0)) * _SpecColor.xyz)), 1.0);\n}\n\n","#version 100\nprecision mediump float;\nprecision highp int;\n\nuniform highp mat4 u_view;\nuniform highp mat4 u_viewInverse;\nuniform highp mat4 u_vp;\nuniform highp mat4 u_projection;\nuniform highp mat4 u_lightSpaceMatrix;\nuniform highp vec4 u_fogInfos;\nuniform highp vec3 u_fogColor;\nuniform highp float u_gameTime;\nuniform highp float u_aspect;\nuniform highp vec3 u_ambientLight;\nuniform highp vec3 u_lightDir;\nuniform highp vec3 u_lightColor;\nuniform highp vec3 u_shadowColor;\nuniform highp float u_shadowStrength;\nuniform highp float u_shadowBias;\nuniform highp float u_lightWidthPCSS;\nuniform highp float u_blockSizePCSS;\nuniform highp vec4 u_csmFarBounds;\nuniform highp vec4 u_shadowTilingOffsets[4];\nuniform highp mat4 u_csmLightSpaceMatrices[4];\nuniform highp vec3 u_SH[9];\n\n\nuniform highp vec4 _SpecColor;\nuniform highp vec4 _Control_ST;\nuniform highp vec4 _Splat0_ST;\nuniform highp vec4 _Splat1_ST;\nuniform highp vec4 _Splat2_ST;\nuniform highp vec4 _Splat3_ST;\nuniform highp vec3 _Color;\nuniform highp float _Shininess;\n\n\nuniform highp sampler2D _Control;\nuniform highp sampler2D _Splat0;\nuniform highp sampler2D _Splat1;\nuniform highp sampler2D _Splat2;\nuniform highp sampler2D _Splat3;\nuniform highp sampler2D u_shadowMapTex;\n\nvarying highp vec2 varying_UVControl;\nvarying highp vec2 varying_UVSplat0;\nvarying highp vec2 varying_UVSplat1;\nvarying highp vec2 varying_UVSplat2;\nvarying highp vec2 varying_UVSplat3;\nvarying highp vec3 varying_LightDir;\nvarying highp vec3 varying_ViewDir;\nvarying highp vec3 varying_WorldNormal;\nvarying highp vec3 varying_ShadowPosition;\n\nvoid main()\n{\n    highp vec4 _642 = texture2D(_Control, varying_UVControl);\n    highp vec4 _648 = texture2D(_Splat0, varying_UVSplat0);\n    highp vec4 _655 = texture2D(_Splat1, varying_UVSplat1);\n    highp vec4 _662 = texture2D(_Splat2, varying_UVSplat2);\n    highp vec4 _669 = texture2D(_Splat3, varying_UVSplat3);\n    highp vec3 _696 = normalize(varying_LightDir);\n    highp vec3 _702 = normalize(varying_WorldNormal);\n    highp vec4 _786 = vec4(varying_ShadowPosition, 1.0);\n    highp float _790 = -(u_view * _786).z;\n    bool _803 = true && (_790 < u_csmFarBounds.x);\n    highp float _1070 = 0.0;\n    if (_803)\n    {\n        highp vec3 _818 = ((u_csmLightSpaceMatrices[0] * _786).xyz * 0.5) + vec3(0.5);\n        highp float _822 = _818.x;\n        highp float _826 = _818.y;\n        highp float _836 = (((_818.z + step(_822, 0.001000000047497451305389404296875)) + step(_826, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _822)) + step(0.999000012874603271484375, _826);\n        highp float _1067 = 0.0;\n        for (int SPIRV_Cross_Dummy323 = 0; SPIRV_Cross_Dummy323 < 1; SPIRV_Cross_Dummy323++)\n        {\n            if (_836 > 1.0)\n            {\n                _1067 = 1.0;\n                break;\n            }\n            highp float _887 = _836 - u_shadowBias;\n            highp vec2 _893 = ((_818.xy * u_shadowTilingOffsets[0].xy) + u_shadowTilingOffsets[0].zw).xy;\n            highp vec2 _904 = fract(_893 * vec2(2048.0));\n            highp float _959 = _904.y;\n            _1067 = mix(mix(float(_887 < dot(texture2D(u_shadowMapTex, _893), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), float(_887 < dot(texture2D(u_shadowMapTex, _893 + vec2(0.0, 0.00048828125)), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), _959), mix(float(_887 < dot(texture2D(u_shadowMapTex, _893 + vec2(0.00048828125, 0.0)), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), float(_887 < dot(texture2D(u_shadowMapTex, _893 + vec2(0.00048828125)), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), _959), _904.x);\n            break;\n        }\n        _1070 = _1067;\n    }\n    else\n    {\n        _1070 = 1.0;\n    }\n    bool _1403 = _803 ? true : false;\n    bool _1088 = (!_1403) && (_790 < u_csmFarBounds.y);\n    highp float _1181 = 0.0;\n    if (_1088)\n    {\n        highp vec3 _1099 = ((u_csmLightSpaceMatrices[1] * _786).xyz * 0.5) + vec3(0.5);\n        highp float _1101 = _1099.x;\n        highp float _1104 = _1099.y;\n        highp float _1112 = (((_1099.z + step(_1101, 0.001000000047497451305389404296875)) + step(_1104, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _1101)) + step(0.999000012874603271484375, _1104);\n        highp float _1178 = 0.0;\n        for (int SPIRV_Cross_Dummy399 = 0; SPIRV_Cross_Dummy399 < 1; SPIRV_Cross_Dummy399++)\n        {\n            if (_1112 > 1.0)\n            {\n                _1178 = 1.0;\n                break;\n            }\n            highp float _1132 = _1112 - u_shadowBias;\n            highp vec2 _1136 = ((_1099.xy * u_shadowTilingOffsets[1].xy) + u_shadowTilingOffsets[1].zw).xy;\n            highp vec2 _1143 = fract(_1136 * vec2(2048.0));\n            highp float _1171 = _1143.y;\n            _1178 = mix(mix(float(_1132 < dot(texture2D(u_shadowMapTex, _1136), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), float(_1132 < dot(texture2D(u_shadowMapTex, _1136 + vec2(0.0, 0.00048828125)), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), _1171), mix(float(_1132 < dot(texture2D(u_shadowMapTex, _1136 + vec2(0.00048828125, 0.0)), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), float(_1132 < dot(texture2D(u_shadowMapTex, _1136 + vec2(0.00048828125)), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), _1171), _1143.x);\n            break;\n        }\n        _1181 = _1178;\n    }\n    else\n    {\n        _1181 = _1070;\n    }\n    bool _1404 = _1088 ? true : _1403;\n    bool _1195 = (!_1404) && (_790 < u_csmFarBounds.z);\n    highp float _1288 = 0.0;\n    if (_1195)\n    {\n        highp vec3 _1206 = ((u_csmLightSpaceMatrices[2] * _786).xyz * 0.5) + vec3(0.5);\n        highp float _1208 = _1206.x;\n        highp float _1211 = _1206.y;\n        highp float _1219 = (((_1206.z + step(_1208, 0.001000000047497451305389404296875)) + step(_1211, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _1208)) + step(0.999000012874603271484375, _1211);\n        highp float _1285 = 0.0;\n        for (int SPIRV_Cross_Dummy475 = 0; SPIRV_Cross_Dummy475 < 1; SPIRV_Cross_Dummy475++)\n        {\n            if (_1219 > 1.0)\n            {\n                _1285 = 1.0;\n                break;\n            }\n            highp float _1239 = _1219 - u_shadowBias;\n            highp vec2 _1243 = ((_1206.xy * u_shadowTilingOffsets[2].xy) + u_shadowTilingOffsets[2].zw).xy;\n            highp vec2 _1250 = fract(_1243 * vec2(2048.0));\n            highp float _1278 = _1250.y;\n            _1285 = mix(mix(float(_1239 < dot(texture2D(u_shadowMapTex, _1243), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), float(_1239 < dot(texture2D(u_shadowMapTex, _1243 + vec2(0.0, 0.00048828125)), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), _1278), mix(float(_1239 < dot(texture2D(u_shadowMapTex, _1243 + vec2(0.00048828125, 0.0)), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), float(_1239 < dot(texture2D(u_shadowMapTex, _1243 + vec2(0.00048828125)), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), _1278), _1250.x);\n            break;\n        }\n        _1288 = _1285;\n    }\n    else\n    {\n        _1288 = _1181;\n    }\n    highp float _1395 = 0.0;\n    if ((!(_1195 ? true : _1404)) && (_790 < u_csmFarBounds.w))\n    {\n        highp vec3 _1313 = ((u_csmLightSpaceMatrices[3] * _786).xyz * 0.5) + vec3(0.5);\n        highp float _1315 = _1313.x;\n        highp float _1318 = _1313.y;\n        highp float _1326 = (((_1313.z + step(_1315, 0.001000000047497451305389404296875)) + step(_1318, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _1315)) + step(0.999000012874603271484375, _1318);\n        highp float _1392 = 0.0;\n        for (int SPIRV_Cross_Dummy545 = 0; SPIRV_Cross_Dummy545 < 1; SPIRV_Cross_Dummy545++)\n        {\n            if (_1326 > 1.0)\n            {\n                _1392 = 1.0;\n                break;\n            }\n            highp float _1346 = _1326 - u_shadowBias;\n            highp vec2 _1350 = ((_1313.xy * u_shadowTilingOffsets[3].xy) + u_shadowTilingOffsets[3].zw).xy;\n            highp vec2 _1357 = fract(_1350 * vec2(2048.0));\n            highp float _1385 = _1357.y;\n            _1392 = mix(mix(float(_1346 < dot(texture2D(u_shadowMapTex, _1350), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), float(_1346 < dot(texture2D(u_shadowMapTex, _1350 + vec2(0.0, 0.00048828125)), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), _1385), mix(float(_1346 < dot(texture2D(u_shadowMapTex, _1350 + vec2(0.00048828125, 0.0)), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), float(_1346 < dot(texture2D(u_shadowMapTex, _1350 + vec2(0.00048828125)), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), _1385), _1357.x);\n            break;\n        }\n        _1395 = _1392;\n    }\n    else\n    {\n        _1395 = _1288;\n    }\n    gl_FragData[0] = vec4((((((_648.xyz * _642.x) + (_655.xyz * _642.y)) + (_662.xyz * _642.z)) + (_669.xyz * _642.w)) * _Color) * ((u_ambientLight + ((u_lightColor * max(0.0, dot(_696, _702))) * _1395)) + ((u_lightColor * pow(max(0.0, dot(normalize(normalize(varying_ViewDir) + _696), _702)), _Shininess * 128.0)) * _SpecColor.xyz)), 1.0);\n}\n\n","#version 100\nprecision mediump float;\nprecision highp int;\n\nuniform highp mat4 u_view;\nuniform highp mat4 u_viewInverse;\nuniform highp mat4 u_vp;\nuniform highp mat4 u_projection;\nuniform highp mat4 u_lightSpaceMatrix;\nuniform highp vec4 u_fogInfos;\nuniform highp vec3 u_fogColor;\nuniform highp float u_gameTime;\nuniform highp float u_aspect;\nuniform highp vec3 u_ambientLight;\nuniform highp vec3 u_lightDir;\nuniform highp vec3 u_lightColor;\nuniform highp vec3 u_shadowColor;\nuniform highp float u_shadowStrength;\nuniform highp float u_shadowBias;\nuniform highp float u_lightWidthPCSS;\nuniform highp float u_blockSizePCSS;\nuniform highp vec4 u_csmFarBounds;\nuniform highp vec4 u_shadowTilingOffsets[4];\nuniform highp mat4 u_csmLightSpaceMatrices[4];\nuniform highp vec3 u_SH[9];\n\n\nuniform highp vec4 _SpecColor;\nuniform highp vec4 _Control_ST;\nuniform highp vec4 _Splat0_ST;\nuniform highp vec4 _Splat1_ST;\nuniform highp vec4 _Splat2_ST;\nuniform highp vec4 _Splat3_ST;\nuniform highp vec3 _Color;\nuniform highp float _Shininess;\n\n\nuniform highp sampler2D _Control;\nuniform highp sampler2D _Splat0;\nuniform highp sampler2D _Splat1;\nuniform highp sampler2D _Splat2;\nuniform highp sampler2D _Splat3;\nuniform highp sampler2D u_shadowMapTex;\n\nvarying highp vec2 varying_UVControl;\nvarying highp vec2 varying_UVSplat0;\nvarying highp vec2 varying_UVSplat1;\nvarying highp vec2 varying_UVSplat2;\nvarying highp vec2 varying_UVSplat3;\nvarying highp vec3 varying_LightDir;\nvarying highp vec3 varying_ViewDir;\nvarying highp vec3 varying_WorldNormal;\nvarying highp vec3 varying_ShadowPosition;\n\nvoid main()\n{\n    highp vec4 _590 = texture2D(_Control, varying_UVControl);\n    highp vec4 _596 = texture2D(_Splat0, varying_UVSplat0);\n    highp vec4 _603 = texture2D(_Splat1, varying_UVSplat1);\n    highp vec4 _610 = texture2D(_Splat2, varying_UVSplat2);\n    highp vec4 _617 = texture2D(_Splat3, varying_UVSplat3);\n    highp vec3 _644 = normalize(varying_LightDir);\n    highp vec3 _650 = normalize(varying_WorldNormal);\n    highp vec3 _736 = ((u_csmLightSpaceMatrices[0] * vec4(varying_ShadowPosition, 1.0)).xyz * 0.5) + vec3(0.5);\n    highp float _740 = _736.x;\n    highp float _744 = _736.y;\n    highp float _754 = (((_736.z + step(_740, 0.001000000047497451305389404296875)) + step(_744, 0.001000000047497451305389404296875)) + step(0.999000012874603271484375, _740)) + step(0.999000012874603271484375, _744);\n    highp float _961 = 0.0;\n    for (int SPIRV_Cross_Dummy307 = 0; SPIRV_Cross_Dummy307 < 1; SPIRV_Cross_Dummy307++)\n    {\n        if (_754 > 1.0)\n        {\n            _961 = 1.0;\n            break;\n        }\n        highp float _786 = _754 - u_shadowBias;\n        highp vec2 _792 = _736.xy;\n        highp vec2 _803 = fract(_792 * vec2(2048.0));\n        highp float _858 = _803.y;\n        _961 = mix(mix(float(_786 < dot(texture2D(u_shadowMapTex, _792), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), float(_786 < dot(texture2D(u_shadowMapTex, _792 + vec2(0.0, 0.00048828125)), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), _858), mix(float(_786 < dot(texture2D(u_shadowMapTex, _792 + vec2(0.00048828125, 0.0)), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), float(_786 < dot(texture2D(u_shadowMapTex, _792 + vec2(0.00048828125)), vec4(5.9604644775390625e-08, 1.52587890625e-05, 0.00390625, 1.0))), _858), _803.x);\n        break;\n    }\n    gl_FragData[0] = vec4((((((_596.xyz * _590.x) + (_603.xyz * _590.y)) + (_610.xyz * _590.z)) + (_617.xyz * _590.w)) * _Color) * ((u_ambientLight + ((u_lightColor * max(0.0, dot(_644, _650))) * _961)) + ((u_lightColor * pow(max(0.0, dot(normalize(normalize(varying_ViewDir) + _644), _650)), _Shininess * 128.0)) * _SpecColor.xyz)), 1.0);\n}\n\n","#version 100\n\nuniform mat4 u_world;\nuniform vec4 u_lightMapScaleOffset;\nuniform float u_lightCountFA;\nuniform vec4 u_lightPosFA[4];\nuniform vec4 u_lightColorFA[4];\nuniform vec4 u_lightAttenFA[4];\nuniform vec4 u_spotDirFA[4];\n\n\nuniform mat4 u_view;\nuniform mat4 u_viewInverse;\nuniform mat4 u_vp;\nuniform mat4 u_projection;\nuniform mat4 u_lightSpaceMatrix;\nuniform vec4 u_fogInfos;\nuniform vec3 u_fogColor;\nuniform float u_gameTime;\nuniform float u_aspect;\nuniform vec3 u_ambientLight;\nuniform vec3 u_lightDir;\nuniform vec3 u_lightColor;\nuniform vec3 u_shadowColor;\nuniform float u_shadowStrength;\nuniform float u_shadowBias;\nuniform float u_lightWidthPCSS;\nuniform float u_blockSizePCSS;\nuniform vec4 u_csmFarBounds;\nuniform vec4 u_shadowTilingOffsets[4];\nuniform mat4 u_csmLightSpaceMatrices[4];\nuniform vec3 u_SH[9];\n\n\nuniform vec4 _SpecColor;\nuniform vec4 _Control_ST;\nuniform vec4 _Splat0_ST;\nuniform vec4 _Splat1_ST;\nuniform vec4 _Splat2_ST;\nuniform vec4 _Splat3_ST;\nuniform vec3 _Color;\nuniform float _Shininess;\n\n\nattribute vec4 a_position;\nattribute vec2 a_texCoord;\nattribute vec3 a_normal;\nvarying vec2 varying_UVControl;\nvarying vec2 varying_UVSplat0;\nvarying vec2 varying_UVSplat1;\nvarying vec2 varying_UVSplat2;\nvarying vec2 varying_UVSplat3;\nvarying vec3 varying_LightDir;\nvarying vec3 varying_ViewDir;\nvarying vec3 varying_WorldNormal;\n\nvoid main()\n{\n    vec4 _615 = u_world * a_position;\n    vec2 _459 = vec2(a_texCoord.x, a_texCoord.y - 1.0);\n    gl_Position = u_projection * (u_view * _615);\n    varying_UVControl = (_459 * _Control_ST.xy) + vec2(_Control_ST.z, 1.0 - _Control_ST.w);\n    varying_UVSplat0 = (_459 * _Splat0_ST.xy) + vec2(_Splat0_ST.z, 1.0 - _Splat0_ST.w);\n    varying_UVSplat1 = (_459 * _Splat1_ST.xy) + vec2(_Splat1_ST.z, 1.0 - _Splat1_ST.w);\n    varying_UVSplat2 = (_459 * _Splat2_ST.xy) + vec2(_Splat2_ST.z, 1.0 - _Splat2_ST.w);\n    varying_UVSplat3 = (_459 * _Splat3_ST.xy) + vec2(_Splat3_ST.z, 1.0 - _Splat3_ST.w);\n    varying_LightDir = u_lightDir;\n    varying_ViewDir = normalize(vec3(u_viewInverse[3].x, u_viewInverse[3].y, u_viewInverse[3].z) - _615.xyz);\n    varying_WorldNormal = normalize(mat3(u_world[0].xyz, u_world[1].xyz, u_world[2].xyz) * a_normal);\n}\n\n","#version 100\n\nuniform mat4 u_world;\nuniform vec4 u_lightMapScaleOffset;\nuniform float u_lightCountFA;\nuniform vec4 u_lightPosFA[4];\nuniform vec4 u_lightColorFA[4];\nuniform vec4 u_lightAttenFA[4];\nuniform vec4 u_spotDirFA[4];\n\n\nuniform mat4 u_view;\nuniform mat4 u_viewInverse;\nuniform mat4 u_vp;\nuniform mat4 u_projection;\nuniform mat4 u_lightSpaceMatrix;\nuniform vec4 u_fogInfos;\nuniform vec3 u_fogColor;\nuniform float u_gameTime;\nuniform float u_aspect;\nuniform vec3 u_ambientLight;\nuniform vec3 u_lightDir;\nuniform vec3 u_lightColor;\nuniform vec3 u_shadowColor;\nuniform float u_shadowStrength;\nuniform float u_shadowBias;\nuniform float u_lightWidthPCSS;\nuniform float u_blockSizePCSS;\nuniform vec4 u_csmFarBounds;\nuniform vec4 u_shadowTilingOffsets[4];\nuniform mat4 u_csmLightSpaceMatrices[4];\nuniform vec3 u_SH[9];\n\n\nuniform vec4 _SpecColor;\nuniform vec4 _Control_ST;\nuniform vec4 _Splat0_ST;\nuniform vec4 _Splat1_ST;\nuniform vec4 _Splat2_ST;\nuniform vec4 _Splat3_ST;\nuniform vec3 _Color;\nuniform float _Shininess;\n\n\nattribute vec4 a_position;\nattribute vec2 a_texCoord;\nattribute vec3 a_normal;\nvarying vec2 varying_UVControl;\nvarying vec2 varying_UVSplat0;\nvarying vec2 varying_UVSplat1;\nvarying vec2 varying_UVSplat2;\nvarying vec2 varying_UVSplat3;\nvarying vec3 varying_LightDir;\nvarying vec3 varying_ViewDir;\nvarying vec3 varying_WorldNormal;\nvarying vec3 varying_ShadowPosition;\n\nvoid main()\n{\n    vec4 _625 = u_world * a_position;\n    vec2 _466 = vec2(a_texCoord.x, a_texCoord.y - 1.0);\n    vec3 _564 = _625.xyz;\n    gl_Position = u_projection * (u_view * _625);\n    varying_UVControl = (_466 * _Control_ST.xy) + vec2(_Control_ST.z, 1.0 - _Control_ST.w);\n    varying_UVSplat0 = (_466 * _Splat0_ST.xy) + vec2(_Splat0_ST.z, 1.0 - _Splat0_ST.w);\n    varying_UVSplat1 = (_466 * _Splat1_ST.xy) + vec2(_Splat1_ST.z, 1.0 - _Splat1_ST.w);\n    varying_UVSplat2 = (_466 * _Splat2_ST.xy) + vec2(_Splat2_ST.z, 1.0 - _Splat2_ST.w);\n    varying_UVSplat3 = (_466 * _Splat3_ST.xy) + vec2(_Splat3_ST.z, 1.0 - _Splat3_ST.w);\n    varying_LightDir = u_lightDir;\n    varying_ViewDir = normalize(vec3(u_viewInverse[3].x, u_viewInverse[3].y, u_viewInverse[3].z) - _564);\n    varying_WorldNormal = normalize(mat3(u_world[0].xyz, u_world[1].xyz, u_world[2].xyz) * a_normal);\n    varying_ShadowPosition = _564;\n}\n\n"],"uniformBlocks":[{"name":13,"blockName":14,"size":112,"member":[{"memberName":1,"type":4,"byteOffset":0},{"memberName":7,"type":4,"byteOffset":16},{"memberName":3,"type":4,"byteOffset":32},{"memberName":4,"type":4,"byteOffset":48},{"memberName":5,"type":4,"byteOffset":64},{"memberName":6,"type":4,"byteOffset":80},{"memberName":0,"type":3,"byteOffset":96},{"memberName":2,"type":1,"byteOffset":108}],"hash":"187E3AD3BC52EAA122509725427AEDA4"}],"strings":["_Color","_SpecColor","_Shininess","_Splat0_ST","_Splat1_ST","_Splat2_ST","_Splat3_ST","_Control_ST","_Splat0","_Splat1","_Splat2","_Splat3","_Control","type_Material","Material"],"sourceAsset":{"name":"System::Effect::Terrain4","shaderProperties":[{"key":"_Color","type":"Vector3","default":[1,1,1]},{"key":"_SpecColor","type":"Vector4","default":[0.5,0.5,0.5,1]},{"key":"_Shininess","type":"Float","default":[0.1]},{"key":"_Splat0_ST","type":"Vector4","default":[1,1,0,0]},{"key":"_Splat1_ST","type":"Vector4","default":[1,1,0,0]},{"key":"_Splat2_ST","type":"Vector4","default":[1,1,0,0]},{"key":"_Splat3_ST","type":"Vector4","default":[1,1,0,0]},{"key":"_Control_ST","type":"Vector4","default":[1,1,0,0]}],"textures":[{"key":"_Splat0","type":"Texture2D","default":"white"},{"key":"_Splat1","type":"Texture2D","default":"white"},{"key":"_Splat2","type":"Texture2D","default":"white"},{"key":"_Splat3","type":"Texture2D","default":"white"},{"key":"_Control","type":"Texture2D","default":"white"}],"defaultRenderQueue":2000,"passes":[{"lightMode":"ForwardBase","vs":"./Terrain4.vertex.hlsl","ps":"./Terrain4.pixel.hlsl","compileFlags":["Shadow"],"useMaterialRenderStates":true,"renderStates":{"blendOn":false,"cullOn":true,"cullFace":"BACK"}}],"editorInfo":{"assetVersion":2}}}