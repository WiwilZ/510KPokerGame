{"version":2,"name":"System::Effect::Effect3D","properties":[{"key":0,"type":3,"default":[1,1,0,0]},{"key":1,"type":3,"default":[1,1,1,1]},{"key":2,"type":0,"default":[1]}],"images":[{"key":3,"type":0,"default":"white"},{"key":4,"type":0,"default":"white"}],"defaultRenderQueue":3000,"passes":[{"renderStates":{"cullOn":false,"blendOn":true,"blendSrc":4,"blendDst":1,"depthWrite":false,"cullFace":2},"macros":{"__PARTICLE":10,"__USE_SKINNED_ANIMATION":8,"__LINE_ALIGN_VIEW_SPACE_LOCAL":9,"__LINE_ALIGN_LOCAL_SPACE_LOCAL":7,"__LINE_ALIGN_VIEW_SPACE_WORLD":6,"__TRAIL_USE_LOCAL":4,"__LINE_ALIGN_LOCAL_SPACE_WORLD":5,"__USE_SKIN_LOCAL":1,"__USE_SKIN_WORLD":2,"__TRAIL_USE_VIEW":3,"__USE_MESH_COLOR":0},"lightMode":"ForwardBase","useMaterialRenderStates":true,"variants":{"0":13,"1":14,"2":12,"3":9,"4":10,"5":15,"8":6,"9":6,"16":7,"17":7,"32":5,"33":5,"64":1,"65":1,"128":2,"129":2,"256":8,"257":11,"512":4,"513":4,"1024":0,"1025":3}}],"variants":[{"shaders":[0,1],"uniformBlock":[0]},{"shaders":[2,3],"uniformBlock":[0]},{"shaders":[4,3],"uniformBlock":[0]},{"shaders":[5,1],"uniformBlock":[0]},{"shaders":[6,3],"uniformBlock":[0]},{"shaders":[7,3],"uniformBlock":[0]},{"shaders":[8,3],"uniformBlock":[0]},{"shaders":[9,3],"uniformBlock":[0]},{"shaders":[10,11],"uniformBlock":[0]},{"shaders":[12,11],"uniformBlock":[0]},{"shaders":[13,11],"uniformBlock":[0]},{"shaders":[14,11],"uniformBlock":[0]},{"shaders":[15,11],"uniformBlock":[0]},{"shaders":[16,17],"uniformBlock":[0]},{"shaders":[18,17],"uniformBlock":[0]},{"shaders":[19,11],"uniformBlock":[0]}],"shaders":["#version 100\n\nuniform mat4 u_view;\nuniform mat4 u_viewInverse;\nuniform mat4 u_vp;\nuniform mat4 u_projection;\nuniform mat4 u_lightSpaceMatrix;\nuniform vec4 u_fogInfos;\nuniform vec3 u_fogColor;\nuniform float u_gameTime;\nuniform float u_aspect;\nuniform vec3 u_ambientLight;\nuniform vec3 u_lightDir;\nuniform vec3 u_lightColor;\nuniform vec3 u_shadowColor;\nuniform float u_shadowStrength;\nuniform float u_shadowBias;\nuniform float u_lightWidthPCSS;\nuniform float u_blockSizePCSS;\nuniform vec4 u_csmFarBounds;\nuniform vec4 u_shadowTilingOffsets[4];\nuniform mat4 u_csmLightSpaceMatrices[4];\nuniform vec3 u_SH[9];\n\n\nuniform vec3 u_speedByLife[13];\nuniform vec3 u_speedLimitByLife[13];\nuniform vec3 u_rotationByLife[13];\nuniform vec3 u_sizeByLife[13];\nuniform vec4 u_colorRGBByLife[8];\nuniform vec2 u_colorAlphaByLife[9];\nuniform vec3 u_textureSheetAnimation[7];\nuniform vec3 u_noise[22];\nuniform vec4 u_common[2];\nuniform vec3 u_renderer[2];\nuniform float u_emitterShape;\nuniform vec4 u_bakedInfo;\nuniform vec4 u_modulesBakedDataTexInfo[5];\n\n\nuniform mat4 u_world;\nuniform vec4 u_lightMapScaleOffset;\nuniform float u_lightCountFA;\nuniform vec4 u_lightPosFA[4];\nuniform vec4 u_lightColorFA[4];\nuniform vec4 u_lightAttenFA[4];\nuniform vec4 u_spotDirFA[4];\n\n\nuniform vec4 _TintColor;\nuniform vec4 _MainTex_ST;\nuniform float _Bright;\n\n\nuniform highp sampler2D u_modulesBakedDataTex;\nuniform highp sampler2D u_permutationTexForNoise;\n\nattribute vec3 a_subCenter;\nattribute vec3 a_subPosition;\nattribute vec2 a_texCoord;\nattribute vec3 a_startSize;\nattribute vec3 a_startRotation;\nattribute vec4 a_startColor;\nattribute vec3 a_startSpeed;\nattribute float a_startTime;\nattribute float a_startLifeTime;\nattribute float a_randomSeed;\nattribute vec3 a_simulationWorldPos;\nattribute vec4 a_simulationWorldRot;\nvarying vec2 varying_TexCoord;\nvarying vec4 varying_Color;\n\nfloat _21785 = 0.0;\nvec4 _25258 = vec4(0.0);\nvec2 _35652 = vec2(0.0);\nvec4 _35653 = vec4(0.0);\nvec3 _35654 = vec3(0.0);\n\nvoid main()\n{\n    float _5789 = u_gameTime - a_startTime;\n    bool _5794 = u_bakedInfo.x > 0.0;\n    float _21768 = 0.0;\n    if (_5794)\n    {\n        float _5801 = u_bakedInfo.y + a_startTime;\n        float _5804 = (u_gameTime - _5801) / a_startLifeTime;\n        float _21769 = 0.0;\n        if ((_5804 < 0.0) && (u_bakedInfo.z > 0.0))\n        {\n            _21769 = (u_gameTime - (_5801 - u_bakedInfo.w)) / a_startLifeTime;\n        }\n        else\n        {\n            _21769 = _5804;\n        }\n        _21768 = _21769;\n    }\n    else\n    {\n        _21768 = (u_bakedInfo.x < 0.0) ? (-1.0) : (_5789 / a_startLifeTime);\n    }\n    vec4 _26195 = vec4(0.0);\n    vec2 _26196 = vec2(0.0);\n    vec4 _26198 = vec4(0.0);\n    if ((_21768 < 1.0) && (_21768 >= 0.0))\n    {\n        vec4 _5859 = a_startColor * vec4(0.0039215688593685626983642578125);\n        float _5905 = clamp(_5789, 0.0, a_startLifeTime);\n        float _21771 = 0.0;\n        float _21773 = 0.0;\n        if (_5794)\n        {\n            float _5919 = u_bakedInfo.y + a_startTime;\n            float _5920 = u_gameTime - _5919;\n            float _5931 = _5920 / a_startLifeTime;\n            float _21772 = 0.0;\n            float _21774 = 0.0;\n            if ((_5931 < 0.0) && (u_bakedInfo.z > 0.0))\n            {\n                float _5948 = u_gameTime - (_5919 - u_bakedInfo.w);\n                _21774 = _5948 / a_startLifeTime;\n                _21772 = clamp(_5948, 0.0, a_startLifeTime);\n            }\n            else\n            {\n                _21774 = _5931;\n                _21772 = clamp(_5920, 0.0, a_startLifeTime);\n            }\n            _21773 = _21774;\n            _21771 = _21772;\n        }\n        else\n        {\n            _21773 = clamp(_5905 / a_startLifeTime, 0.0, 1.0);\n            _21771 = _5905;\n        }\n        bool _5976 = u_modulesBakedDataTexInfo[0].w == 1.0;\n        float _21775 = 0.0;\n        if (_5976)\n        {\n            _21775 = clamp(((_21771 / u_modulesBakedDataTexInfo[0].z) + 0.5) * (1.0 / u_modulesBakedDataTexInfo[0].x), 0.0, 1.0);\n        }\n        else\n        {\n            _21775 = -1.0;\n        }\n        float _8767 = length(vec3(u_world[0].xyz));\n        float _8774 = length(vec3(u_world[1].xyz));\n        float _8781 = length(vec3(u_world[2].xyz));\n        mat4 _8799 = mat4(vec4(_8767, 0.0, 0.0, 0.0), vec4(0.0, _8774, 0.0, 0.0), vec4(0.0, 0.0, _8781, 0.0), vec4(0.0, 0.0, 0.0, 1.0));\n        mat4 _20947 = mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0));\n        _20947[0] = u_world[0] / vec4(_8767);\n        mat4 _20951 = _20947;\n        _20951[1] = u_world[1] / vec4(_8774);\n        mat4 _20955 = _20951;\n        _20955[2] = u_world[2] / vec4(_8781);\n        mat4 _20957 = _20955;\n        _20957[3].w = 1.0;\n        mat4 _20960 = mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0));\n        _20960[3] = u_world[3];\n        mat4 _20962 = _20960;\n        _20962[3].w = 1.0;\n        mat4 _23713 = mat4(vec4(0.0), vec4(0.0), vec4(0.0), vec4(0.0));\n        mat4 _24211 = mat4(vec4(0.0), vec4(0.0), vec4(0.0), vec4(0.0));\n        mat4 _24398 = mat4(vec4(0.0), vec4(0.0), vec4(0.0), vec4(0.0));\n        if (u_common[0].x == 1.0)\n        {\n            float _8887 = a_simulationWorldRot.x + a_simulationWorldRot.x;\n            float _8892 = a_simulationWorldRot.y + a_simulationWorldRot.y;\n            float _8897 = a_simulationWorldRot.z + a_simulationWorldRot.z;\n            float _8905 = a_simulationWorldRot.y * _8887;\n            float _8909 = a_simulationWorldRot.y * _8892;\n            float _8913 = a_simulationWorldRot.z * _8887;\n            float _8917 = a_simulationWorldRot.z * _8892;\n            float _8921 = a_simulationWorldRot.z * _8897;\n            float _8925 = a_simulationWorldRot.w * _8887;\n            float _8929 = a_simulationWorldRot.w * _8892;\n            float _8933 = a_simulationWorldRot.w * _8897;\n            float _8948 = 1.0 - (a_simulationWorldRot.x * _8887);\n            mat4 _8968 = mat4(vec4((1.0 - _8909) - _8921, _8905 + _8933, _8913 - _8929, 0.0), vec4(_8905 - _8933, _8948 - _8921, _8917 + _8925, 0.0), vec4(_8913 + _8929, _8917 - _8925, _8948 - _8909, 0.0), vec4(0.0, 0.0, 0.0, 1.0));\n            mat4 _20979 = _20962;\n            _20979[3] = vec4(a_simulationWorldPos, 1.0);\n            mat4 _20982 = _8968;\n            _20982[3] = vec4(a_simulationWorldPos.x, a_simulationWorldPos.y, a_simulationWorldPos.z, vec4(0.0, 0.0, 0.0, 1.0).w);\n            _24398 = _8968;\n            _24211 = _20979;\n            _23713 = _20982 * _8799;\n        }\n        else\n        {\n            _24398 = _20957;\n            _24211 = _20962;\n            _23713 = u_world;\n        }\n        float _6401 = 1.0 / u_modulesBakedDataTexInfo[0].y;\n        float _8974 = fract(sin(a_randomSeed + 0.100000001490116119384765625) * 43758.546875);\n        float _8980 = fract(sin(a_randomSeed + 0.20000000298023223876953125) * 43758.546875);\n        float _8986 = fract(sin(a_randomSeed + 0.4000000059604644775390625) * 43758.546875);\n        bool _6416 = u_noise[0].x == 1.0;\n        float _21984 = 0.0;\n        float _22017 = 0.0;\n        float _22050 = 0.0;\n        float _22417 = 0.0;\n        float _22477 = 0.0;\n        float _22536 = 0.0;\n        float _23176 = 0.0;\n        float _23323 = 0.0;\n        if (_6416)\n        {\n            float _6432 = u_noise[2].x * a_startLifeTime;\n            float _6451 = u_noise[6].x * a_startLifeTime;\n            float _6470 = u_noise[10].x * a_startLifeTime;\n            float _6489 = u_noise[14].x * a_startLifeTime;\n            float _6508 = u_noise[18].x * a_startLifeTime;\n            float _29502 = u_noise[3].x * a_startLifeTime;\n            float _29506 = mix(u_noise[3].y, u_noise[3].z, _8974);\n            float _29512 = u_noise[7].x * a_startLifeTime;\n            float _29516 = mix(u_noise[7].y, u_noise[7].z, _8980);\n            float _29522 = u_noise[11].x * a_startLifeTime;\n            float _29526 = mix(u_noise[11].y, u_noise[11].z, _8986);\n            float _29532 = u_noise[15].x * a_startLifeTime;\n            float _29536 = mix(u_noise[15].y, u_noise[15].z, _8986);\n            float _29542 = u_noise[19].x * a_startLifeTime;\n            float _29546 = mix(u_noise[19].y, u_noise[19].z, _8986);\n            float _29559 = u_noise[4].x * a_startLifeTime;\n            float _29563 = mix(u_noise[4].y, u_noise[4].z, _8974);\n            float _29569 = u_noise[8].x * a_startLifeTime;\n            float _29573 = mix(u_noise[8].y, u_noise[8].z, _8980);\n            float _29579 = u_noise[12].x * a_startLifeTime;\n            float _29583 = mix(u_noise[12].y, u_noise[12].z, _8986);\n            float _29589 = u_noise[16].x * a_startLifeTime;\n            float _29593 = mix(u_noise[16].y, u_noise[16].z, _8986);\n            float _29599 = u_noise[20].x * a_startLifeTime;\n            float _29603 = mix(u_noise[20].y, u_noise[20].z, _8986);\n            float _29616 = u_noise[5].x * a_startLifeTime;\n            float _29626 = u_noise[9].x * a_startLifeTime;\n            float _29636 = u_noise[13].x * a_startLifeTime;\n            float _29646 = u_noise[17].x * a_startLifeTime;\n            float _29656 = u_noise[21].x * a_startLifeTime;\n            bool _9020 = _29502 >= _21771;\n            float _26215 = 0.0;\n            if (_9020)\n            {\n                _26215 = mix(mix(u_noise[2].y, u_noise[2].z, _8974), _29506, (_21771 - _6432) / (_29502 - _6432));\n            }\n            else\n            {\n                _26215 = _21785;\n            }\n            bool _35658 = _9020 ? false : true;\n            bool _29458 = false;\n            float _29459 = 0.0;\n            if (_35658)\n            {\n                bool _29442 = _29559 >= _21771;\n                float _29456 = 0.0;\n                if (_29442)\n                {\n                    _29456 = mix(_29506, _29563, (_21771 - _29502) / (_29559 - _29502));\n                }\n                else\n                {\n                    _29456 = _26215;\n                }\n                _29458 = _29442 ? false : _35658;\n                _29459 = _29456;\n            }\n            else\n            {\n                _29458 = _35658;\n                _29459 = _26215;\n            }\n            float _29490 = 0.0;\n            if (_29458)\n            {\n                float _29487 = 0.0;\n                if (_29616 >= _21771)\n                {\n                    _29487 = mix(_29563, mix(u_noise[5].y, u_noise[5].z, _8974), (_21771 - _29559) / (_29616 - _29559));\n                }\n                else\n                {\n                    _29487 = _29459;\n                }\n                _29490 = _29487;\n            }\n            else\n            {\n                _29490 = _29459;\n            }\n            bool _9081 = _29512 >= _21771;\n            float _26219 = 0.0;\n            if (_9081)\n            {\n                _26219 = mix(mix(u_noise[6].y, u_noise[6].z, _8980), _29516, (_21771 - _6451) / (_29512 - _6451));\n            }\n            else\n            {\n                _26219 = _21785;\n            }\n            bool _35660 = _9081 ? false : true;\n            bool _29396 = false;\n            float _29397 = 0.0;\n            if (_35660)\n            {\n                bool _29380 = _29569 >= _21771;\n                float _29394 = 0.0;\n                if (_29380)\n                {\n                    _29394 = mix(_29516, _29573, (_21771 - _29512) / (_29569 - _29512));\n                }\n                else\n                {\n                    _29394 = _26219;\n                }\n                _29396 = _29380 ? false : _35660;\n                _29397 = _29394;\n            }\n            else\n            {\n                _29396 = _35660;\n                _29397 = _26219;\n            }\n            float _29428 = 0.0;\n            if (_29396)\n            {\n                float _29425 = 0.0;\n                if (_29626 >= _21771)\n                {\n                    _29425 = mix(_29573, mix(u_noise[9].y, u_noise[9].z, _8980), (_21771 - _29569) / (_29626 - _29569));\n                }\n                else\n                {\n                    _29425 = _29397;\n                }\n                _29428 = _29425;\n            }\n            else\n            {\n                _29428 = _29397;\n            }\n            bool _9142 = _29522 >= _21771;\n            float _26225 = 0.0;\n            if (_9142)\n            {\n                _26225 = mix(mix(u_noise[10].y, u_noise[10].z, _8986), _29526, (_21771 - _6470) / (_29522 - _6470));\n            }\n            else\n            {\n                _26225 = _21785;\n            }\n            bool _35662 = _9142 ? false : true;\n            bool _29334 = false;\n            float _29335 = 0.0;\n            if (_35662)\n            {\n                bool _29318 = _29579 >= _21771;\n                float _29332 = 0.0;\n                if (_29318)\n                {\n                    _29332 = mix(_29526, _29583, (_21771 - _29522) / (_29579 - _29522));\n                }\n                else\n                {\n                    _29332 = _26225;\n                }\n                _29334 = _29318 ? false : _35662;\n                _29335 = _29332;\n            }\n            else\n            {\n                _29334 = _35662;\n                _29335 = _26225;\n            }\n            float _29366 = 0.0;\n            if (_29334)\n            {\n                float _29363 = 0.0;\n                if (_29636 >= _21771)\n                {\n                    _29363 = mix(_29583, mix(u_noise[13].y, u_noise[13].z, _8986), (_21771 - _29579) / (_29636 - _29579));\n                }\n                else\n                {\n                    _29363 = _29335;\n                }\n                _29366 = _29363;\n            }\n            else\n            {\n                _29366 = _29335;\n            }\n            bool _9203 = _29532 >= _21771;\n            float _26233 = 0.0;\n            if (_9203)\n            {\n                _26233 = mix(mix(u_noise[14].y, u_noise[14].z, _8986), _29536, (_21771 - _6489) / (_29532 - _6489));\n            }\n            else\n            {\n                _26233 = _21785;\n            }\n            bool _35664 = _9203 ? false : true;\n            bool _29272 = false;\n            float _29273 = 0.0;\n            if (_35664)\n            {\n                bool _29256 = _29589 >= _21771;\n                float _29270 = 0.0;\n                if (_29256)\n                {\n                    _29270 = mix(_29536, _29593, (_21771 - _29532) / (_29589 - _29532));\n                }\n                else\n                {\n                    _29270 = _26233;\n                }\n                _29272 = _29256 ? false : _35664;\n                _29273 = _29270;\n            }\n            else\n            {\n                _29272 = _35664;\n                _29273 = _26233;\n            }\n            float _29304 = 0.0;\n            if (_29272)\n            {\n                float _29301 = 0.0;\n                if (_29646 >= _21771)\n                {\n                    _29301 = mix(_29593, mix(u_noise[17].y, u_noise[17].z, _8986), (_21771 - _29589) / (_29646 - _29589));\n                }\n                else\n                {\n                    _29301 = _29273;\n                }\n                _29304 = _29301;\n            }\n            else\n            {\n                _29304 = _29273;\n            }\n            bool _9264 = _29542 >= _21771;\n            float _26243 = 0.0;\n            if (_9264)\n            {\n                _26243 = mix(mix(u_noise[18].y, u_noise[18].z, _8986), _29546, (_21771 - _6508) / (_29542 - _6508));\n            }\n            else\n            {\n                _26243 = _21785;\n            }\n            bool _35666 = _9264 ? false : true;\n            bool _29210 = false;\n            float _29211 = 0.0;\n            if (_35666)\n            {\n                bool _29194 = _29599 >= _21771;\n                float _29208 = 0.0;\n                if (_29194)\n                {\n                    _29208 = mix(_29546, _29603, (_21771 - _29542) / (_29599 - _29542));\n                }\n                else\n                {\n                    _29208 = _26243;\n                }\n                _29210 = _29194 ? false : _35666;\n                _29211 = _29208;\n            }\n            else\n            {\n                _29210 = _35666;\n                _29211 = _26243;\n            }\n            float _29242 = 0.0;\n            if (_29210)\n            {\n                float _29239 = 0.0;\n                if (_29656 >= _21771)\n                {\n                    _29239 = mix(_29603, mix(u_noise[21].y, u_noise[21].z, _8986), (_21771 - _29599) / (_29656 - _29599));\n                }\n                else\n                {\n                    _29239 = _29211;\n                }\n                _29242 = _29239;\n            }\n            else\n            {\n                _29242 = _29211;\n            }\n            float _21985 = 0.0;\n            float _22018 = 0.0;\n            float _22051 = 0.0;\n            if (_5976 && (_21775 >= 0.0))\n            {\n                vec3 _21838 = vec3(0.0);\n                if (u_modulesBakedDataTexInfo[4].y >= 0.0)\n                {\n                    _21838 = texture2D(u_modulesBakedDataTex, vec2(_21775, (u_modulesBakedDataTexInfo[4].y + 0.5) * _6401)).xyz;\n                }\n                else\n                {\n                    _21838 = vec3(0.0);\n                }\n                vec3 _21840 = vec3(0.0);\n                if (u_modulesBakedDataTexInfo[4].z >= 0.0)\n                {\n                    _21840 = texture2D(u_modulesBakedDataTex, vec2(_21775, (u_modulesBakedDataTexInfo[4].z + 0.5) * _6401)).xyz;\n                }\n                else\n                {\n                    _21840 = _21838;\n                }\n                _22051 = mix(_21838.z, _21840.z, _8986);\n                _22018 = mix(_21838.y, _21840.y, _8980);\n                _21985 = mix(_21838.x, _21840.x, _8974);\n            }\n            else\n            {\n                _22051 = 0.0;\n                _22018 = 0.0;\n                _21985 = 0.0;\n            }\n            _23323 = _29304;\n            _23176 = _29242;\n            _22536 = _29366;\n            _22477 = _29428;\n            _22417 = _29490;\n            _22050 = _22051;\n            _22017 = _22018;\n            _21984 = _21985;\n        }\n        else\n        {\n            _23323 = 0.0;\n            _23176 = 0.0;\n            _22536 = 0.0;\n            _22477 = 0.0;\n            _22417 = 0.0;\n            _22050 = 0.0;\n            _22017 = 0.0;\n            _21984 = 0.0;\n        }\n        bool _6641 = _21775 >= 0.0;\n        bool _6642 = _5976 && _6641;\n        vec3 _22128 = vec3(0.0);\n        vec3 _22138 = vec3(0.0);\n        if (_6642 && (u_modulesBakedDataTexInfo[2].x >= 0.0))\n        {\n            float _9297 = fract(sin(a_randomSeed) * 43758.546875);\n            float _6666 = (u_modulesBakedDataTexInfo[2].x + 0.5) * _6401;\n            vec4 _6668 = texture2D(u_modulesBakedDataTex, vec2(_21775, _6666));\n            float _6676 = (u_modulesBakedDataTexInfo[2].y + 0.5) * _6401;\n            vec4 _6678 = texture2D(u_modulesBakedDataTex, vec2(_21775, _6676));\n            float _6686 = (u_modulesBakedDataTexInfo[2].z + 0.5) * _6401;\n            vec4 _6688 = texture2D(u_modulesBakedDataTex, vec2(_21775, _6686));\n            vec4 _6698 = texture2D(u_modulesBakedDataTex, vec2(_21773, _6666));\n            vec4 _6708 = texture2D(u_modulesBakedDataTex, vec2(_21773, _6676));\n            vec4 _6718 = texture2D(u_modulesBakedDataTex, vec2(_21773, _6686));\n            vec3 _21038 = _35654;\n            _21038.x = mix(_6668.z, _6668.w, _9297) + _21984;\n            vec3 _21041 = _21038;\n            _21041.y = mix(_6678.z, _6678.w, _9297) + _22017;\n            vec3 _21044 = _21041;\n            _21044.z = mix(_6688.z, _6688.w, _9297) + _22050;\n            _22138 = a_subCenter + _21044;\n            _22128 = vec3(mix(_6698.x, _6698.y, _9297), mix(_6708.x, _6708.y, _9297), mix(_6718.x, _6718.y, _9297));\n        }\n        else\n        {\n            float _9303 = fract(sin(a_randomSeed) * 43758.546875);\n            float _9309 = fract(sin(a_randomSeed - 0.100000001490116119384765625) * 43758.546875);\n            float _6806 = 0.100000001490116119384765625 * a_startLifeTime;\n            float _6810 = 0.300000011920928955078125 * a_startLifeTime;\n            vec2 _6842 = vec2(0.0, a_startSpeed.x);\n            float _6845 = 0.3300000131130218505859375 * a_startLifeTime;\n            vec2 _6848 = vec2(_6845, a_startSpeed.x);\n            float _6851 = 0.660000026226043701171875 * a_startLifeTime;\n            vec2 _6854 = vec2(_6851, a_startSpeed.x);\n            vec2 _6859 = vec2(a_startLifeTime, a_startSpeed.x);\n            vec2 _6863 = vec2(0.0, a_startSpeed.y);\n            vec2 _6869 = vec2(_6845, a_startSpeed.y);\n            vec2 _6875 = vec2(_6851, a_startSpeed.y);\n            vec2 _6880 = vec2(a_startLifeTime, a_startSpeed.y);\n            vec2 _6884 = vec2(0.0, a_startSpeed.z);\n            vec2 _6890 = vec2(_6845, a_startSpeed.z);\n            vec2 _6896 = vec2(_6851, a_startSpeed.z);\n            vec2 _6901 = vec2(a_startLifeTime, a_startSpeed.z);\n            vec2 _30884 = vec2(0.0);\n            vec2 _30922 = vec2(0.0);\n            vec2 _30923 = vec2(0.0);\n            vec2 _30924 = vec2(0.0);\n            vec2 _30962 = vec2(0.0);\n            vec2 _30963 = vec2(0.0);\n            vec2 _30964 = vec2(0.0);\n            vec2 _31002 = vec2(0.0);\n            vec2 _31003 = vec2(0.0);\n            vec2 _31004 = vec2(0.0);\n            vec2 _31042 = vec2(0.0);\n            vec2 _31043 = vec2(0.0);\n            if (u_speedByLife[0].x > 0.0)\n            {\n                vec2 _30308 = _6842;\n                _30308.x = u_speedByLife[1].x * a_startLifeTime;\n                vec2 _30310 = _30308;\n                _30310.y = mix(u_speedByLife[1].y, u_speedByLife[1].z, _9309) + a_startSpeed.x;\n                vec2 _30312 = _6863;\n                _30312.x = u_speedByLife[5].x * a_startLifeTime;\n                vec2 _30314 = _30312;\n                _30314.y = mix(u_speedByLife[5].y, u_speedByLife[5].z, _8980) + a_startSpeed.y;\n                vec2 _30316 = _6884;\n                _30316.x = u_speedByLife[9].x * a_startLifeTime;\n                vec2 _30318 = _30316;\n                _30318.y = mix(u_speedByLife[9].y, u_speedByLife[9].z, _8986) + a_startSpeed.z;\n                vec2 _30320 = _6848;\n                _30320.x = u_speedByLife[2].x * a_startLifeTime;\n                vec2 _30322 = _30320;\n                _30322.y = mix(u_speedByLife[2].y, u_speedByLife[2].z, _9309) + a_startSpeed.x;\n                vec2 _30324 = _6869;\n                _30324.x = u_speedByLife[6].x * a_startLifeTime;\n                vec2 _30326 = _30324;\n                _30326.y = mix(u_speedByLife[6].y, u_speedByLife[6].z, _8980) + a_startSpeed.y;\n                vec2 _30328 = _6890;\n                _30328.x = u_speedByLife[10].x * a_startLifeTime;\n                vec2 _30330 = _30328;\n                _30330.y = mix(u_speedByLife[10].y, u_speedByLife[10].z, _8986) + a_startSpeed.z;\n                vec2 _30332 = _6854;\n                _30332.x = u_speedByLife[3].x * a_startLifeTime;\n                vec2 _30334 = _30332;\n                _30334.y = mix(u_speedByLife[3].y, u_speedByLife[3].z, _9309) + a_startSpeed.x;\n                vec2 _30336 = _6875;\n                _30336.x = u_speedByLife[7].x * a_startLifeTime;\n                vec2 _30338 = _30336;\n                _30338.y = mix(u_speedByLife[7].y, u_speedByLife[7].z, _8980) + a_startSpeed.y;\n                vec2 _30340 = _6896;\n                _30340.x = u_speedByLife[11].x * a_startLifeTime;\n                vec2 _30342 = _30340;\n                _30342.y = mix(u_speedByLife[11].y, u_speedByLife[11].z, _8986) + a_startSpeed.z;\n                vec2 _30344 = _6859;\n                _30344.x = u_speedByLife[4].x * a_startLifeTime;\n                vec2 _30346 = _30344;\n                _30346.y = mix(u_speedByLife[4].y, u_speedByLife[4].z, _9309) + a_startSpeed.x;\n                vec2 _30348 = _6880;\n                _30348.x = u_speedByLife[8].x * a_startLifeTime;\n                vec2 _30350 = _30348;\n                _30350.y = mix(u_speedByLife[8].y, u_speedByLife[8].z, _8980) + a_startSpeed.y;\n                vec2 _30352 = _6901;\n                _30352.x = u_speedByLife[12].x * a_startLifeTime;\n                vec2 _30354 = _30352;\n                _30354.y = mix(u_speedByLife[12].y, u_speedByLife[12].z, _8986) + a_startSpeed.z;\n                _31043 = _30354;\n                _31042 = _30350;\n                _31004 = _30346;\n                _31003 = _30342;\n                _31002 = _30338;\n                _30964 = _30334;\n                _30963 = _30330;\n                _30962 = _30326;\n                _30924 = _30322;\n                _30923 = _30318;\n                _30922 = _30314;\n                _30884 = _30310;\n            }\n            else\n            {\n                _31043 = _6901;\n                _31042 = _6880;\n                _31004 = _6859;\n                _31003 = _6896;\n                _31002 = _6875;\n                _30964 = _6854;\n                _30963 = _6890;\n                _30962 = _6869;\n                _30924 = _6848;\n                _30923 = _6884;\n                _30922 = _6863;\n                _30884 = _6842;\n            }\n            vec2 _31124 = vec2(0.0);\n            vec2 _31128 = vec2(0.0);\n            vec2 _31132 = vec2(0.0);\n            vec2 _31136 = vec2(0.0);\n            vec2 _31143 = vec2(0.0);\n            vec2 _31151 = vec2(0.0);\n            vec2 _31159 = vec2(0.0);\n            vec2 _31167 = vec2(0.0);\n            vec2 _31178 = vec2(0.0);\n            vec2 _31190 = vec2(0.0);\n            vec2 _31202 = vec2(0.0);\n            vec2 _31214 = vec2(0.0);\n            if (u_speedLimitByLife[0].x > 0.0)\n            {\n                vec2 _31125 = vec2(0.0);\n                vec2 _31129 = vec2(0.0);\n                vec2 _31133 = vec2(0.0);\n                vec2 _31137 = vec2(0.0);\n                vec2 _31144 = vec2(0.0);\n                vec2 _31152 = vec2(0.0);\n                vec2 _31160 = vec2(0.0);\n                vec2 _31168 = vec2(0.0);\n                vec2 _31179 = vec2(0.0);\n                vec2 _31191 = vec2(0.0);\n                vec2 _31203 = vec2(0.0);\n                vec2 _31215 = vec2(0.0);\n                if (u_speedLimitByLife[0].z > 0.0)\n                {\n                    float _9347 = a_startLifeTime * 5.0;\n                    float _9352 = a_startLifeTime * 15.00000095367431640625;\n                    float _9357 = a_startLifeTime * 50.0;\n                    float _9362 = abs(_30884.y);\n                    float _9376 = (((mix(u_speedLimitByLife[1].y, u_speedLimitByLife[1].z, _9309) + mix(u_speedLimitByLife[2].y, u_speedLimitByLife[2].z, _9309)) + mix(u_speedLimitByLife[3].y, u_speedLimitByLife[3].z, _9309)) + mix(u_speedLimitByLife[4].y, u_speedLimitByLife[4].z, _9309)) * 0.25;\n                    vec4 _31073 = vec4(0.0);\n                    if (_9362 > _9376)\n                    {\n                        float _9389 = _9362 - _9376;\n                        float _9391 = 1.0 - u_speedLimitByLife[0].y;\n                        vec4 _30512 = _35653;\n                        _30512.x = (_9376 + (_9389 * pow(_9391, 1.0))) / _9362;\n                        vec4 _30514 = _30512;\n                        _30514.y = (_9376 + (_9389 * pow(_9391, _9347))) / _9362;\n                        vec4 _30516 = _30514;\n                        _30516.z = (_9376 + (_9389 * pow(_9391, _9352))) / _9362;\n                        vec4 _30518 = _30516;\n                        _30518.w = (_9376 + (_9389 * pow(_9391, _9357))) / _9362;\n                        _31073 = _30518;\n                    }\n                    else\n                    {\n                        _31073 = vec4(1.0);\n                    }\n                    vec2 _30521 = _30884;\n                    _30521.x = 0.0;\n                    vec2 _30525 = _30521;\n                    _30525.y = _30884.y * _31073.x;\n                    vec2 _30528 = _30924;\n                    _30528.x = _6806;\n                    vec2 _30532 = _30528;\n                    _30532.y = _30924.y * _31073.y;\n                    vec2 _30535 = _30964;\n                    _30535.x = _6810;\n                    vec2 _30539 = _30535;\n                    _30539.y = _30964.y * _31073.z;\n                    vec2 _30542 = _31004;\n                    _30542.x = a_startLifeTime;\n                    vec2 _30546 = _30542;\n                    _30546.y = _31004.y * _31073.w;\n                    float _9454 = abs(_30922.y);\n                    float _9468 = (((mix(u_speedLimitByLife[5].y, u_speedLimitByLife[5].z, _8980) + mix(u_speedLimitByLife[6].y, u_speedLimitByLife[6].z, _8980)) + mix(u_speedLimitByLife[7].y, u_speedLimitByLife[7].z, _8980)) + mix(u_speedLimitByLife[8].y, u_speedLimitByLife[8].z, _8980)) * 0.25;\n                    vec4 _31090 = vec4(0.0);\n                    if (_9454 > _9468)\n                    {\n                        float _9481 = _9454 - _9468;\n                        float _9483 = 1.0 - u_speedLimitByLife[0].y;\n                        vec4 _30548 = _35653;\n                        _30548.x = (_9468 + (_9481 * pow(_9483, 1.0))) / _9454;\n                        vec4 _30550 = _30548;\n                        _30550.y = (_9468 + (_9481 * pow(_9483, _9347))) / _9454;\n                        vec4 _30552 = _30550;\n                        _30552.z = (_9468 + (_9481 * pow(_9483, _9352))) / _9454;\n                        vec4 _30554 = _30552;\n                        _30554.w = (_9468 + (_9481 * pow(_9483, _9357))) / _9454;\n                        _31090 = _30554;\n                    }\n                    else\n                    {\n                        _31090 = vec4(1.0);\n                    }\n                    vec2 _30557 = _30922;\n                    _30557.x = 0.0;\n                    vec2 _30561 = _30557;\n                    _30561.y = _30922.y * _31090.x;\n                    vec2 _30564 = _30962;\n                    _30564.x = _6806;\n                    vec2 _30568 = _30564;\n                    _30568.y = _30962.y * _31090.y;\n                    vec2 _30571 = _31002;\n                    _30571.x = _6810;\n                    vec2 _30575 = _30571;\n                    _30575.y = _31002.y * _31090.z;\n                    vec2 _30578 = _31042;\n                    _30578.x = a_startLifeTime;\n                    vec2 _30582 = _30578;\n                    _30582.y = _31042.y * _31090.w;\n                    float _9546 = abs(_30923.y);\n                    float _9560 = (((mix(u_speedLimitByLife[9].y, u_speedLimitByLife[9].z, _8986) + mix(u_speedLimitByLife[10].y, u_speedLimitByLife[10].z, _8986)) + mix(u_speedLimitByLife[11].y, u_speedLimitByLife[11].z, _8986)) + mix(u_speedLimitByLife[12].y, u_speedLimitByLife[12].z, _8986)) * 0.25;\n                    vec4 _31115 = vec4(0.0);\n                    if (_9546 > _9560)\n                    {\n                        float _9573 = _9546 - _9560;\n                        float _9575 = 1.0 - u_speedLimitByLife[0].y;\n                        vec4 _30584 = _35653;\n                        _30584.x = (_9560 + (_9573 * pow(_9575, 1.0))) / _9546;\n                        vec4 _30586 = _30584;\n                        _30586.y = (_9560 + (_9573 * pow(_9575, _9347))) / _9546;\n                        vec4 _30588 = _30586;\n                        _30588.z = (_9560 + (_9573 * pow(_9575, _9352))) / _9546;\n                        vec4 _30590 = _30588;\n                        _30590.w = (_9560 + (_9573 * pow(_9575, _9357))) / _9546;\n                        _31115 = _30590;\n                    }\n                    else\n                    {\n                        _31115 = vec4(1.0);\n                    }\n                    vec2 _30593 = _30923;\n                    _30593.x = 0.0;\n                    vec2 _30597 = _30593;\n                    _30597.y = _30923.y * _31115.x;\n                    vec2 _30600 = _30963;\n                    _30600.x = _6806;\n                    vec2 _30604 = _30600;\n                    _30604.y = _30963.y * _31115.y;\n                    vec2 _30607 = _31003;\n                    _30607.x = _6810;\n                    vec2 _30611 = _30607;\n                    _30611.y = _31003.y * _31115.z;\n                    vec2 _30614 = _31043;\n                    _30614.x = a_startLifeTime;\n                    vec2 _30618 = _30614;\n                    _30618.y = _31043.y * _31115.w;\n                    _31215 = _30618;\n                    _31203 = _30611;\n                    _31191 = _30604;\n                    _31179 = _30597;\n                    _31168 = _30582;\n                    _31160 = _30575;\n                    _31152 = _30568;\n                    _31144 = _30561;\n                    _31137 = _30546;\n                    _31133 = _30539;\n                    _31129 = _30532;\n                    _31125 = _30525;\n                }\n                else\n                {\n                    float _9638 = abs(length(vec3(_30884.y, _30922.y, _30923.y)));\n                    float _9652 = (((mix(u_speedLimitByLife[1].y, u_speedLimitByLife[1].z, _9303) + mix(u_speedLimitByLife[2].y, u_speedLimitByLife[2].z, _9303)) + mix(u_speedLimitByLife[3].y, u_speedLimitByLife[3].z, _9303)) + mix(u_speedLimitByLife[4].y, u_speedLimitByLife[4].z, _9303)) * 0.25;\n                    vec4 _31048 = vec4(0.0);\n                    if (_9638 > _9652)\n                    {\n                        float _9665 = _9638 - _9652;\n                        float _9667 = 1.0 - u_speedLimitByLife[0].y;\n                        vec4 _30396 = _35653;\n                        _30396.x = (_9652 + (_9665 * pow(_9667, 1.0))) / _9638;\n                        vec4 _30398 = _30396;\n                        _30398.y = (_9652 + (_9665 * pow(_9667, a_startLifeTime * 5.0))) / _9638;\n                        vec4 _30400 = _30398;\n                        _30400.z = (_9652 + (_9665 * pow(_9667, a_startLifeTime * 15.00000095367431640625))) / _9638;\n                        vec4 _30402 = _30400;\n                        _30402.w = (_9652 + (_9665 * pow(_9667, a_startLifeTime * 50.0))) / _9638;\n                        _31048 = _30402;\n                    }\n                    else\n                    {\n                        _31048 = vec4(1.0);\n                    }\n                    vec2 _30405 = _30884;\n                    _30405.x = 0.0;\n                    vec2 _30409 = _30405;\n                    _30409.y = _30884.y * _31048.x;\n                    vec2 _30412 = _30922;\n                    _30412.x = 0.0;\n                    vec2 _30416 = _30412;\n                    _30416.y = _30922.y * _31048.x;\n                    vec2 _30419 = _30923;\n                    _30419.x = 0.0;\n                    vec2 _30423 = _30419;\n                    _30423.y = _30923.y * _31048.x;\n                    vec2 _30426 = _30924;\n                    _30426.x = _6806;\n                    vec2 _30430 = _30426;\n                    _30430.y = _30924.y * _31048.y;\n                    vec2 _30433 = _30962;\n                    _30433.x = _6806;\n                    vec2 _30437 = _30433;\n                    _30437.y = _30962.y * _31048.y;\n                    vec2 _30440 = _30963;\n                    _30440.x = _6806;\n                    vec2 _30444 = _30440;\n                    _30444.y = _30963.y * _31048.y;\n                    vec2 _30447 = _30964;\n                    _30447.x = _6810;\n                    vec2 _30451 = _30447;\n                    _30451.y = _30964.y * _31048.z;\n                    vec2 _30454 = _31002;\n                    _30454.x = _6810;\n                    vec2 _30458 = _30454;\n                    _30458.y = _31002.y * _31048.z;\n                    vec2 _30461 = _31003;\n                    _30461.x = _6810;\n                    vec2 _30465 = _30461;\n                    _30465.y = _31003.y * _31048.z;\n                    vec2 _30468 = _31004;\n                    _30468.x = a_startLifeTime;\n                    vec2 _30472 = _30468;\n                    _30472.y = _31004.y * _31048.w;\n                    vec2 _30475 = _31042;\n                    _30475.x = a_startLifeTime;\n                    vec2 _30479 = _30475;\n                    _30479.y = _31042.y * _31048.w;\n                    vec2 _30482 = _31043;\n                    _30482.x = a_startLifeTime;\n                    vec2 _30486 = _30482;\n                    _30486.y = _31043.y * _31048.w;\n                    _31215 = _30486;\n                    _31203 = _30465;\n                    _31191 = _30444;\n                    _31179 = _30423;\n                    _31168 = _30479;\n                    _31160 = _30458;\n                    _31152 = _30437;\n                    _31144 = _30416;\n                    _31137 = _30472;\n                    _31133 = _30451;\n                    _31129 = _30430;\n                    _31125 = _30409;\n                }\n                _31214 = _31215;\n                _31202 = _31203;\n                _31190 = _31191;\n                _31178 = _31179;\n                _31167 = _31168;\n                _31159 = _31160;\n                _31151 = _31152;\n                _31143 = _31144;\n                _31136 = _31137;\n                _31132 = _31133;\n                _31128 = _31129;\n                _31124 = _31125;\n            }\n            else\n            {\n                _31214 = _31043;\n                _31202 = _31003;\n                _31190 = _30963;\n                _31178 = _30923;\n                _31167 = _31042;\n                _31159 = _31002;\n                _31151 = _30962;\n                _31143 = _30922;\n                _31136 = _31004;\n                _31132 = _30964;\n                _31128 = _30924;\n                _31124 = _30884;\n            }\n            bool _9723 = _31128.x >= _21771;\n            float _26255 = 0.0;\n            if (_9723)\n            {\n                _26255 = mix(_31124.y, _31128.y, (_21771 - _31124.x) / (_31128.x - _31124.x));\n            }\n            else\n            {\n                _26255 = _21785;\n            }\n            bool _35668 = _9723 ? false : true;\n            bool _28398 = false;\n            float _28399 = 0.0;\n            if (_35668)\n            {\n                bool _28382 = _31132.x >= _21771;\n                float _28396 = 0.0;\n                if (_28382)\n                {\n                    _28396 = mix(_31128.y, _31132.y, (_21771 - _31128.x) / (_31132.x - _31128.x));\n                }\n                else\n                {\n                    _28396 = _26255;\n                }\n                _28398 = _28382 ? false : _35668;\n                _28399 = _28396;\n            }\n            else\n            {\n                _28398 = _35668;\n                _28399 = _26255;\n            }\n            float _28430 = 0.0;\n            if (_28398)\n            {\n                float _28427 = 0.0;\n                if (_31136.x >= _21771)\n                {\n                    _28427 = mix(_31132.y, _31136.y, (_21771 - _31132.x) / (_31136.x - _31132.x));\n                }\n                else\n                {\n                    _28427 = _28399;\n                }\n                _28430 = _28427;\n            }\n            else\n            {\n                _28430 = _28399;\n            }\n            bool _9784 = _31151.x >= _21771;\n            float _26269 = 0.0;\n            if (_9784)\n            {\n                _26269 = mix(_31143.y, _31151.y, (_21771 - _31143.x) / (_31151.x - _31143.x));\n            }\n            else\n            {\n                _26269 = _21785;\n            }\n            bool _35670 = _9784 ? false : true;\n            bool _28336 = false;\n            float _28337 = 0.0;\n            if (_35670)\n            {\n                bool _28320 = _31159.x >= _21771;\n                float _28334 = 0.0;\n                if (_28320)\n                {\n                    _28334 = mix(_31151.y, _31159.y, (_21771 - _31151.x) / (_31159.x - _31151.x));\n                }\n                else\n                {\n                    _28334 = _26269;\n                }\n                _28336 = _28320 ? false : _35670;\n                _28337 = _28334;\n            }\n            else\n            {\n                _28336 = _35670;\n                _28337 = _26269;\n            }\n            float _28368 = 0.0;\n            if (_28336)\n            {\n                float _28365 = 0.0;\n                if (_31167.x >= _21771)\n                {\n                    _28365 = mix(_31159.y, _31167.y, (_21771 - _31159.x) / (_31167.x - _31159.x));\n                }\n                else\n                {\n                    _28365 = _28337;\n                }\n                _28368 = _28365;\n            }\n            else\n            {\n                _28368 = _28337;\n            }\n            bool _9845 = _31190.x >= _21771;\n            float _26285 = 0.0;\n            if (_9845)\n            {\n                _26285 = mix(_31178.y, _31190.y, (_21771 - _31178.x) / (_31190.x - _31178.x));\n            }\n            else\n            {\n                _26285 = _21785;\n            }\n            bool _35672 = _9845 ? false : true;\n            bool _28274 = false;\n            float _28275 = 0.0;\n            if (_35672)\n            {\n                bool _28258 = _31202.x >= _21771;\n                float _28272 = 0.0;\n                if (_28258)\n                {\n                    _28272 = mix(_31190.y, _31202.y, (_21771 - _31190.x) / (_31202.x - _31190.x));\n                }\n                else\n                {\n                    _28272 = _26285;\n                }\n                _28274 = _28258 ? false : _35672;\n                _28275 = _28272;\n            }\n            else\n            {\n                _28274 = _35672;\n                _28275 = _26285;\n            }\n            float _28306 = 0.0;\n            if (_28274)\n            {\n                float _28303 = 0.0;\n                if (_31214.x >= _21771)\n                {\n                    _28303 = mix(_31202.y, _31214.y, (_21771 - _31202.x) / (_31214.x - _31202.x));\n                }\n                else\n                {\n                    _28303 = _28275;\n                }\n                _28306 = _28303;\n            }\n            else\n            {\n                _28306 = _28275;\n            }\n            float _26287 = 0.0;\n            if (_9723)\n            {\n                float _9919 = _21771 - _31124.x;\n                _26287 = ((_31124.y + mix(_31124.y, _31128.y, _9919 / (_31128.x - _31124.x))) * 0.5) * _9919;\n            }\n            else\n            {\n                _26287 = ((_31124.y + _31128.y) * 0.5) * (_31128.x - _31124.x);\n            }\n            bool _28199 = false;\n            float _28200 = 0.0;\n            if (_35668)\n            {\n                bool _28174 = _31132.x >= _21771;\n                float _28197 = 0.0;\n                if (_28174)\n                {\n                    float _28185 = _21771 - _31128.x;\n                    _28197 = _26287 + (((_31128.y + mix(_31128.y, _31132.y, _28185 / (_31132.x - _31128.x))) * 0.5) * _28185);\n                }\n                else\n                {\n                    _28197 = _26287 + (((_31128.y + _31132.y) * 0.5) * (_31132.x - _31128.x));\n                }\n                _28199 = _28174 ? false : _35668;\n                _28200 = _28197;\n            }\n            else\n            {\n                _28199 = _35668;\n                _28200 = _26287;\n            }\n            float _28244 = 0.0;\n            if (_28199)\n            {\n                float _28241 = 0.0;\n                if (_31136.x >= _21771)\n                {\n                    float _28229 = _21771 - _31132.x;\n                    _28241 = _28200 + (((_31132.y + mix(_31132.y, _31136.y, _28229 / (_31136.x - _31132.x))) * 0.5) * _28229);\n                }\n                else\n                {\n                    _28241 = _28200 + (((_31132.y + _31136.y) * 0.5) * (_31136.x - _31132.x));\n                }\n                _28244 = _28241;\n            }\n            else\n            {\n                _28244 = _28200;\n            }\n            float _26289 = 0.0;\n            if (_9784)\n            {\n                float _10004 = _21771 - _31143.x;\n                _26289 = ((_31143.y + mix(_31143.y, _31151.y, _10004 / (_31151.x - _31143.x))) * 0.5) * _10004;\n            }\n            else\n            {\n                _26289 = ((_31143.y + _31151.y) * 0.5) * (_31151.x - _31143.x);\n            }\n            bool _28111 = false;\n            float _28112 = 0.0;\n            if (_35670)\n            {\n                bool _28086 = _31159.x >= _21771;\n                float _28109 = 0.0;\n                if (_28086)\n                {\n                    float _28097 = _21771 - _31151.x;\n                    _28109 = _26289 + (((_31151.y + mix(_31151.y, _31159.y, _28097 / (_31159.x - _31151.x))) * 0.5) * _28097);\n                }\n                else\n                {\n                    _28109 = _26289 + (((_31151.y + _31159.y) * 0.5) * (_31159.x - _31151.x));\n                }\n                _28111 = _28086 ? false : _35670;\n                _28112 = _28109;\n            }\n            else\n            {\n                _28111 = _35670;\n                _28112 = _26289;\n            }\n            float _28156 = 0.0;\n            if (_28111)\n            {\n                float _28153 = 0.0;\n                if (_31167.x >= _21771)\n                {\n                    float _28141 = _21771 - _31159.x;\n                    _28153 = _28112 + (((_31159.y + mix(_31159.y, _31167.y, _28141 / (_31167.x - _31159.x))) * 0.5) * _28141);\n                }\n                else\n                {\n                    _28153 = _28112 + (((_31159.y + _31167.y) * 0.5) * (_31167.x - _31159.x));\n                }\n                _28156 = _28153;\n            }\n            else\n            {\n                _28156 = _28112;\n            }\n            float _26291 = 0.0;\n            if (_9845)\n            {\n                float _10089 = _21771 - _31178.x;\n                _26291 = ((_31178.y + mix(_31178.y, _31190.y, _10089 / (_31190.x - _31178.x))) * 0.5) * _10089;\n            }\n            else\n            {\n                _26291 = ((_31178.y + _31190.y) * 0.5) * (_31190.x - _31178.x);\n            }\n            bool _28023 = false;\n            float _28024 = 0.0;\n            if (_35672)\n            {\n                bool _27998 = _31202.x >= _21771;\n                float _28021 = 0.0;\n                if (_27998)\n                {\n                    float _28009 = _21771 - _31190.x;\n                    _28021 = _26291 + (((_31190.y + mix(_31190.y, _31202.y, _28009 / (_31202.x - _31190.x))) * 0.5) * _28009);\n                }\n                else\n                {\n                    _28021 = _26291 + (((_31190.y + _31202.y) * 0.5) * (_31202.x - _31190.x));\n                }\n                _28023 = _27998 ? false : _35672;\n                _28024 = _28021;\n            }\n            else\n            {\n                _28023 = _35672;\n                _28024 = _26291;\n            }\n            float _28068 = 0.0;\n            if (_28023)\n            {\n                float _28065 = 0.0;\n                if (_31214.x >= _21771)\n                {\n                    float _28053 = _21771 - _31202.x;\n                    _28065 = _28024 + (((_31202.y + mix(_31202.y, _31214.y, _28053 / (_31214.x - _31202.x))) * 0.5) * _28053);\n                }\n                else\n                {\n                    _28065 = _28024 + (((_31202.y + _31214.y) * 0.5) * (_31214.x - _31202.x));\n                }\n                _28068 = _28065;\n            }\n            else\n            {\n                _28068 = _28024;\n            }\n            vec3 _21141 = _35654;\n            _21141.x = _28244 + _21984;\n            vec3 _21144 = _21141;\n            _21144.y = _28156 + _22017;\n            vec3 _21147 = _21144;\n            _21147.z = _28068 + _22050;\n            _22138 = a_subCenter + _21147;\n            _22128 = vec3(_28430, _28368, _28306);\n        }\n        float _7310 = _22128.x * (-1.0);\n        vec3 _21150 = _22128;\n        _21150.x = _7310;\n        float _7314 = _22138.x * (-1.0);\n        vec3 _23075 = vec3(0.0);\n        if (u_sizeByLife[0].x > 0.0)\n        {\n            float _10133 = fract(sin(a_randomSeed - 0.100000001490116119384765625) * 43758.546875);\n            float _22326 = 0.0;\n            float _22334 = 0.0;\n            float _22339 = 0.0;\n            if (_6642)\n            {\n                float _22327 = 0.0;\n                float _22335 = 0.0;\n                float _22340 = 0.0;\n                if (u_sizeByLife[0].y > 0.0)\n                {\n                    vec4 _7352 = texture2D(u_modulesBakedDataTex, vec2(_21773, (u_modulesBakedDataTexInfo[1].x + 0.5) * _6401));\n                    vec4 _7362 = texture2D(u_modulesBakedDataTex, vec2(_21773, (u_modulesBakedDataTexInfo[1].y + 0.5) * _6401));\n                    vec4 _7372 = texture2D(u_modulesBakedDataTex, vec2(_21773, (u_modulesBakedDataTexInfo[1].z + 0.5) * _6401));\n                    _22340 = mix(_7372.x, _7372.y, _10133);\n                    _22335 = mix(_7362.x, _7362.y, _10133);\n                    _22327 = mix(_7352.x, _7352.y, _10133);\n                }\n                else\n                {\n                    vec4 _7410 = texture2D(u_modulesBakedDataTex, vec2(_21773, (u_modulesBakedDataTexInfo[1].x + 0.5) * _6401));\n                    float _7419 = mix(_7410.x, _7410.y, _10133);\n                    _22340 = _7419;\n                    _22335 = _7419;\n                    _22327 = _7419;\n                }\n                _22339 = _22340;\n                _22334 = _22335;\n                _22326 = _22327;\n            }\n            else\n            {\n                float _7438 = u_sizeByLife[1].x * a_startLifeTime;\n                float _7446 = 1.0 - _10133;\n                float _7461 = u_sizeByLife[5].x * a_startLifeTime;\n                float _7484 = u_sizeByLife[9].x * a_startLifeTime;\n                float _27854 = u_sizeByLife[2].x * a_startLifeTime;\n                float _27861 = (_10133 * u_sizeByLife[2].y) + (_7446 * u_sizeByLife[2].z);\n                float _27867 = u_sizeByLife[6].x * a_startLifeTime;\n                float _27874 = (_10133 * u_sizeByLife[6].y) + (_7446 * u_sizeByLife[6].z);\n                float _27880 = u_sizeByLife[10].x * a_startLifeTime;\n                float _27887 = (_10133 * u_sizeByLife[10].y) + (_7446 * u_sizeByLife[10].z);\n                float _27900 = u_sizeByLife[3].x * a_startLifeTime;\n                float _27907 = (_10133 * u_sizeByLife[3].y) + (_7446 * u_sizeByLife[3].z);\n                float _27913 = u_sizeByLife[7].x * a_startLifeTime;\n                float _27920 = (_10133 * u_sizeByLife[7].y) + (_7446 * u_sizeByLife[7].z);\n                float _27926 = u_sizeByLife[11].x * a_startLifeTime;\n                float _27933 = (_10133 * u_sizeByLife[11].y) + (_7446 * u_sizeByLife[11].z);\n                float _27946 = u_sizeByLife[4].x * a_startLifeTime;\n                float _27959 = u_sizeByLife[8].x * a_startLifeTime;\n                float _27972 = u_sizeByLife[12].x * a_startLifeTime;\n                bool _10167 = _27854 >= _21771;\n                float _26403 = 0.0;\n                if (_10167)\n                {\n                    _26403 = mix((_10133 * u_sizeByLife[1].y) + (_7446 * u_sizeByLife[1].z), _27861, (_21771 - _7438) / (_27854 - _7438));\n                }\n                else\n                {\n                    _26403 = _21785;\n                }\n                bool _35680 = _10167 ? false : true;\n                bool _27810 = false;\n                float _27811 = 0.0;\n                if (_35680)\n                {\n                    bool _27794 = _27900 >= _21771;\n                    float _27808 = 0.0;\n                    if (_27794)\n                    {\n                        _27808 = mix(_27861, _27907, (_21771 - _27854) / (_27900 - _27854));\n                    }\n                    else\n                    {\n                        _27808 = _26403;\n                    }\n                    _27810 = _27794 ? false : _35680;\n                    _27811 = _27808;\n                }\n                else\n                {\n                    _27810 = _35680;\n                    _27811 = _26403;\n                }\n                float _27842 = 0.0;\n                if (_27810)\n                {\n                    float _27839 = 0.0;\n                    if (_27946 >= _21771)\n                    {\n                        _27839 = mix(_27907, (_10133 * u_sizeByLife[4].y) + (_7446 * u_sizeByLife[4].z), (_21771 - _27900) / (_27946 - _27900));\n                    }\n                    else\n                    {\n                        _27839 = _27811;\n                    }\n                    _27842 = _27839;\n                }\n                else\n                {\n                    _27842 = _27811;\n                }\n                bool _10228 = _27867 >= _21771;\n                float _26417 = 0.0;\n                if (_10228)\n                {\n                    _26417 = mix((_10133 * u_sizeByLife[5].y) + (_7446 * u_sizeByLife[5].z), _27874, (_21771 - _7461) / (_27867 - _7461));\n                }\n                else\n                {\n                    _26417 = _21785;\n                }\n                bool _35682 = _10228 ? false : true;\n                bool _27748 = false;\n                float _27749 = 0.0;\n                if (_35682)\n                {\n                    bool _27732 = _27913 >= _21771;\n                    float _27746 = 0.0;\n                    if (_27732)\n                    {\n                        _27746 = mix(_27874, _27920, (_21771 - _27867) / (_27913 - _27867));\n                    }\n                    else\n                    {\n                        _27746 = _26417;\n                    }\n                    _27748 = _27732 ? false : _35682;\n                    _27749 = _27746;\n                }\n                else\n                {\n                    _27748 = _35682;\n                    _27749 = _26417;\n                }\n                float _27780 = 0.0;\n                if (_27748)\n                {\n                    float _27777 = 0.0;\n                    if (_27959 >= _21771)\n                    {\n                        _27777 = mix(_27920, (_10133 * u_sizeByLife[8].y) + (_7446 * u_sizeByLife[8].z), (_21771 - _27913) / (_27959 - _27913));\n                    }\n                    else\n                    {\n                        _27777 = _27749;\n                    }\n                    _27780 = _27777;\n                }\n                else\n                {\n                    _27780 = _27749;\n                }\n                bool _10289 = _27880 >= _21771;\n                float _26433 = 0.0;\n                if (_10289)\n                {\n                    _26433 = mix((_10133 * u_sizeByLife[9].y) + (_7446 * u_sizeByLife[9].z), _27887, (_21771 - _7484) / (_27880 - _7484));\n                }\n                else\n                {\n                    _26433 = _21785;\n                }\n                bool _35684 = _10289 ? false : true;\n                bool _27686 = false;\n                float _27687 = 0.0;\n                if (_35684)\n                {\n                    bool _27670 = _27926 >= _21771;\n                    float _27684 = 0.0;\n                    if (_27670)\n                    {\n                        _27684 = mix(_27887, _27933, (_21771 - _27880) / (_27926 - _27880));\n                    }\n                    else\n                    {\n                        _27684 = _26433;\n                    }\n                    _27686 = _27670 ? false : _35684;\n                    _27687 = _27684;\n                }\n                else\n                {\n                    _27686 = _35684;\n                    _27687 = _26433;\n                }\n                float _27718 = 0.0;\n                if (_27686)\n                {\n                    float _27715 = 0.0;\n                    if (_27972 >= _21771)\n                    {\n                        _27715 = mix(_27933, (_10133 * u_sizeByLife[12].y) + (_7446 * u_sizeByLife[12].z), (_21771 - _27926) / (_27972 - _27926));\n                    }\n                    else\n                    {\n                        _27715 = _27687;\n                    }\n                    _27718 = _27715;\n                }\n                else\n                {\n                    _27718 = _27687;\n                }\n                _22339 = _27718;\n                _22334 = _27780;\n                _22326 = _27842;\n            }\n            float _7534 = max(_22326, 0.0);\n            float _7536 = max(_22334, 0.0);\n            float _7538 = max(_22339, 0.0);\n            vec3 _23076 = vec3(0.0);\n            if (u_renderer[0].x == 1.0)\n            {\n                vec3 _21185 = _35654;\n                _21185.x = a_startSize.x * _7536;\n                vec3 _21188 = _21185;\n                _21188.y = a_startSize.y * _7534;\n                vec3 _21191 = _21188;\n                _21191.z = a_startSize.z * _7538;\n                _23076 = _21191;\n            }\n            else\n            {\n                vec3 _21194 = _35654;\n                _21194.x = a_startSize.x * _7534;\n                vec3 _21197 = _21194;\n                _21197.y = a_startSize.y * _7536;\n                vec3 _21200 = _21197;\n                _21200.z = a_startSize.z * _7538;\n                _23076 = _21200;\n            }\n            _23075 = _23076;\n        }\n        else\n        {\n            _23075 = a_startSize;\n        }\n        vec3 _23499 = vec3(0.0);\n        vec3 _24582 = vec3(0.0);\n        if (_6416)\n        {\n            float _10500 = _7314 * u_noise[0].z;\n            float _10503 = (_22138.y + 9.9999997473787516355514526367188e-06) * u_noise[0].z;\n            float _10506 = _22138.z * u_noise[0].z;\n            float _10599 = floor(mod(_10500, 256.0));\n            float _10602 = floor(mod(_10503, 256.0));\n            float _10605 = floor(mod(_10506, 256.0));\n            float _10609 = _10500 - floor(_10500);\n            float _10613 = _10503 - floor(_10503);\n            float _10617 = _10506 - floor(_10506);\n            float _10795 = ((_10609 * _10609) * _10609) * ((_10609 * ((_10609 * 6.0) - 15.0)) + 10.0);\n            float _10809 = ((_10613 * _10613) * _10613) * ((_10613 * ((_10613 * 6.0) - 15.0)) + 10.0);\n            float _10823 = ((_10617 * _10617) * _10617) * ((_10617 * ((_10617 * 6.0) - 15.0)) + 10.0);\n            vec2 _10831 = vec2(_10599 * 0.00390625, 0.5);\n            float _10856 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10831).x * 256.0) + _10602) * 0.00390625, 0.5)).x * 256.0) + _10605) * 0.00390625, 0.5)).x * 256.0;\n            float _10871 = _10602 + 1.0;\n            float _10894 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10831).x * 256.0) + _10871) * 0.00390625, 0.5)).x * 256.0) + _10605) * 0.00390625, 0.5)).x * 256.0;\n            float _10920 = _10605 + 1.0;\n            float _10932 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10831).x * 256.0) + _10602) * 0.00390625, 0.5)).x * 256.0) + _10920) * 0.00390625, 0.5)).x * 256.0;\n            float _10975 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10831).x * 256.0) + _10871) * 0.00390625, 0.5)).x * 256.0) + _10920) * 0.00390625, 0.5)).x * 256.0;\n            vec2 _10988 = vec2((_10599 + 1.0) * 0.00390625, 0.5);\n            float _11013 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10988).x * 256.0) + _10602) * 0.00390625, 0.5)).x * 256.0) + _10605) * 0.00390625, 0.5)).x * 256.0;\n            float _11056 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10988).x * 256.0) + _10871) * 0.00390625, 0.5)).x * 256.0) + _10605) * 0.00390625, 0.5)).x * 256.0;\n            float _11099 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10988).x * 256.0) + _10602) * 0.00390625, 0.5)).x * 256.0) + _10920) * 0.00390625, 0.5)).x * 256.0;\n            float _11147 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10988).x * 256.0) + _10871) * 0.00390625, 0.5)).x * 256.0) + _10920) * 0.00390625, 0.5)).x * 256.0;\n            int _11165 = int(floor(mod(_10856, 16.0)));\n            float _11170 = (_11165 < 8) ? _10609 : _10613;\n            float _22592 = 0.0;\n            if (_11165 < 4)\n            {\n                _22592 = _10613;\n            }\n            else\n            {\n                _22592 = ((_11165 == 12) || (_11165 == 14)) ? _10609 : _10617;\n            }\n            float _10707 = _10609 - 1.0;\n            int _11221 = int(floor(mod(_11013, 16.0)));\n            float _11226 = (_11221 < 8) ? _10707 : _10613;\n            float _22594 = 0.0;\n            if (_11221 < 4)\n            {\n                _22594 = _10613;\n            }\n            else\n            {\n                _22594 = ((_11221 == 12) || (_11221 == 14)) ? _10707 : _10617;\n            }\n            float _10717 = _10613 - 1.0;\n            int _11277 = int(floor(mod(_10894, 16.0)));\n            float _11282 = (_11277 < 8) ? _10609 : _10717;\n            float _22596 = 0.0;\n            if (_11277 < 4)\n            {\n                _22596 = _10717;\n            }\n            else\n            {\n                _22596 = ((_11277 == 12) || (_11277 == 14)) ? _10609 : _10617;\n            }\n            int _11333 = int(floor(mod(_11056, 16.0)));\n            float _11338 = (_11333 < 8) ? _10707 : _10717;\n            float _22598 = 0.0;\n            if (_11333 < 4)\n            {\n                _22598 = _10717;\n            }\n            else\n            {\n                _22598 = ((_11333 == 12) || (_11333 == 14)) ? _10707 : _10617;\n            }\n            float _10739 = _10617 - 1.0;\n            int _11389 = int(floor(mod(_10932, 16.0)));\n            float _11394 = (_11389 < 8) ? _10609 : _10613;\n            float _22604 = 0.0;\n            if (_11389 < 4)\n            {\n                _22604 = _10613;\n            }\n            else\n            {\n                _22604 = ((_11389 == 12) || (_11389 == 14)) ? _10609 : _10739;\n            }\n            int _11445 = int(floor(mod(_11099, 16.0)));\n            float _11450 = (_11445 < 8) ? _10707 : _10613;\n            float _22606 = 0.0;\n            if (_11445 < 4)\n            {\n                _22606 = _10613;\n            }\n            else\n            {\n                _22606 = ((_11445 == 12) || (_11445 == 14)) ? _10707 : _10739;\n            }\n            int _11501 = int(floor(mod(_10975, 16.0)));\n            float _11506 = (_11501 < 8) ? _10609 : _10717;\n            float _22608 = 0.0;\n            if (_11501 < 4)\n            {\n                _22608 = _10717;\n            }\n            else\n            {\n                _22608 = ((_11501 == 12) || (_11501 == 14)) ? _10609 : _10739;\n            }\n            int _11557 = int(floor(mod(_11147, 16.0)));\n            float _11562 = (_11557 < 8) ? _10707 : _10717;\n            float _22610 = 0.0;\n            if (_11557 < 4)\n            {\n                _22610 = _10717;\n            }\n            else\n            {\n                _22610 = ((_11557 == 12) || (_11557 == 14)) ? _10707 : _10739;\n            }\n            float _10781 = (mix(mix(mix(((int(mod(_10856, 2.0)) == 0) ? _11170 : (-_11170)) + ((int(mod(_10856, 3.0)) == 0) ? _22592 : (-_22592)), ((int(mod(_11013, 2.0)) == 0) ? _11226 : (-_11226)) + ((int(mod(_11013, 3.0)) == 0) ? _22594 : (-_22594)), _10795), mix(((int(mod(_10894, 2.0)) == 0) ? _11282 : (-_11282)) + ((int(mod(_10894, 3.0)) == 0) ? _22596 : (-_22596)), ((int(mod(_11056, 2.0)) == 0) ? _11338 : (-_11338)) + ((int(mod(_11056, 3.0)) == 0) ? _22598 : (-_22598)), _10795), _10809), mix(mix(((int(mod(_10932, 2.0)) == 0) ? _11394 : (-_11394)) + ((int(mod(_10932, 3.0)) == 0) ? _22604 : (-_22604)), ((int(mod(_11099, 2.0)) == 0) ? _11450 : (-_11450)) + ((int(mod(_11099, 3.0)) == 0) ? _22606 : (-_22606)), _10795), mix(((int(mod(_10975, 2.0)) == 0) ? _11506 : (-_11506)) + ((int(mod(_10975, 3.0)) == 0) ? _22608 : (-_22608)), ((int(mod(_11147, 2.0)) == 0) ? _11562 : (-_11562)) + ((int(mod(_11147, 3.0)) == 0) ? _22610 : (-_22610)), _10795), _10809), _10823) + 1.0) * 0.5;\n            float _11610 = (_22138.y - 9.9999997473787516355514526367188e-06) * u_noise[0].z;\n            float _11709 = floor(mod(_11610, 256.0));\n            float _11720 = _11610 - floor(_11610);\n            float _11916 = ((_11720 * _11720) * _11720) * ((_11720 * ((_11720 * 6.0) - 15.0)) + 10.0);\n            float _11963 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10831).x * 256.0) + _11709) * 0.00390625, 0.5)).x * 256.0) + _10605) * 0.00390625, 0.5)).x * 256.0;\n            float _11978 = _11709 + 1.0;\n            float _12001 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10831).x * 256.0) + _11978) * 0.00390625, 0.5)).x * 256.0) + _10605) * 0.00390625, 0.5)).x * 256.0;\n            float _12039 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10831).x * 256.0) + _11709) * 0.00390625, 0.5)).x * 256.0) + _10920) * 0.00390625, 0.5)).x * 256.0;\n            float _12082 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10831).x * 256.0) + _11978) * 0.00390625, 0.5)).x * 256.0) + _10920) * 0.00390625, 0.5)).x * 256.0;\n            float _12120 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10988).x * 256.0) + _11709) * 0.00390625, 0.5)).x * 256.0) + _10605) * 0.00390625, 0.5)).x * 256.0;\n            float _12163 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10988).x * 256.0) + _11978) * 0.00390625, 0.5)).x * 256.0) + _10605) * 0.00390625, 0.5)).x * 256.0;\n            float _12206 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10988).x * 256.0) + _11709) * 0.00390625, 0.5)).x * 256.0) + _10920) * 0.00390625, 0.5)).x * 256.0;\n            float _12254 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10988).x * 256.0) + _11978) * 0.00390625, 0.5)).x * 256.0) + _10920) * 0.00390625, 0.5)).x * 256.0;\n            int _12272 = int(floor(mod(_11963, 16.0)));\n            float _12277 = (_12272 < 8) ? _10609 : _11720;\n            float _22648 = 0.0;\n            if (_12272 < 4)\n            {\n                _22648 = _11720;\n            }\n            else\n            {\n                _22648 = ((_12272 == 12) || (_12272 == 14)) ? _10609 : _10617;\n            }\n            int _12328 = int(floor(mod(_12120, 16.0)));\n            float _12333 = (_12328 < 8) ? _10707 : _11720;\n            float _22650 = 0.0;\n            if (_12328 < 4)\n            {\n                _22650 = _11720;\n            }\n            else\n            {\n                _22650 = ((_12328 == 12) || (_12328 == 14)) ? _10707 : _10617;\n            }\n            float _11824 = _11720 - 1.0;\n            int _12384 = int(floor(mod(_12001, 16.0)));\n            float _12389 = (_12384 < 8) ? _10609 : _11824;\n            float _22652 = 0.0;\n            if (_12384 < 4)\n            {\n                _22652 = _11824;\n            }\n            else\n            {\n                _22652 = ((_12384 == 12) || (_12384 == 14)) ? _10609 : _10617;\n            }\n            int _12440 = int(floor(mod(_12163, 16.0)));\n            float _12445 = (_12440 < 8) ? _10707 : _11824;\n            float _22654 = 0.0;\n            if (_12440 < 4)\n            {\n                _22654 = _11824;\n            }\n            else\n            {\n                _22654 = ((_12440 == 12) || (_12440 == 14)) ? _10707 : _10617;\n            }\n            int _12496 = int(floor(mod(_12039, 16.0)));\n            float _12501 = (_12496 < 8) ? _10609 : _11720;\n            float _22660 = 0.0;\n            if (_12496 < 4)\n            {\n                _22660 = _11720;\n            }\n            else\n            {\n                _22660 = ((_12496 == 12) || (_12496 == 14)) ? _10609 : _10739;\n            }\n            int _12552 = int(floor(mod(_12206, 16.0)));\n            float _12557 = (_12552 < 8) ? _10707 : _11720;\n            float _22662 = 0.0;\n            if (_12552 < 4)\n            {\n                _22662 = _11720;\n            }\n            else\n            {\n                _22662 = ((_12552 == 12) || (_12552 == 14)) ? _10707 : _10739;\n            }\n            int _12608 = int(floor(mod(_12082, 16.0)));\n            float _12613 = (_12608 < 8) ? _10609 : _11824;\n            float _22664 = 0.0;\n            if (_12608 < 4)\n            {\n                _22664 = _11824;\n            }\n            else\n            {\n                _22664 = ((_12608 == 12) || (_12608 == 14)) ? _10609 : _10739;\n            }\n            int _12664 = int(floor(mod(_12254, 16.0)));\n            float _12669 = (_12664 < 8) ? _10707 : _11824;\n            float _22666 = 0.0;\n            if (_12664 < 4)\n            {\n                _22666 = _11824;\n            }\n            else\n            {\n                _22666 = ((_12664 == 12) || (_12664 == 14)) ? _10707 : _10739;\n            }\n            float _11888 = (mix(mix(mix(((int(mod(_11963, 2.0)) == 0) ? _12277 : (-_12277)) + ((int(mod(_11963, 3.0)) == 0) ? _22648 : (-_22648)), ((int(mod(_12120, 2.0)) == 0) ? _12333 : (-_12333)) + ((int(mod(_12120, 3.0)) == 0) ? _22650 : (-_22650)), _10795), mix(((int(mod(_12001, 2.0)) == 0) ? _12389 : (-_12389)) + ((int(mod(_12001, 3.0)) == 0) ? _22652 : (-_22652)), ((int(mod(_12163, 2.0)) == 0) ? _12445 : (-_12445)) + ((int(mod(_12163, 3.0)) == 0) ? _22654 : (-_22654)), _10795), _11916), mix(mix(((int(mod(_12039, 2.0)) == 0) ? _12501 : (-_12501)) + ((int(mod(_12039, 3.0)) == 0) ? _22660 : (-_22660)), ((int(mod(_12206, 2.0)) == 0) ? _12557 : (-_12557)) + ((int(mod(_12206, 3.0)) == 0) ? _22662 : (-_22662)), _10795), mix(((int(mod(_12082, 2.0)) == 0) ? _12613 : (-_12613)) + ((int(mod(_12082, 3.0)) == 0) ? _22664 : (-_22664)), ((int(mod(_12254, 2.0)) == 0) ? _12669 : (-_12669)) + ((int(mod(_12254, 3.0)) == 0) ? _22666 : (-_22666)), _10795), _11916), _10823) + 1.0) * 0.5;\n            float _12717 = _22138.y * u_noise[0].z;\n            float _12720 = (_22138.z + 9.9999997473787516355514526367188e-06) * u_noise[0].z;\n            float _12816 = floor(mod(_12717, 256.0));\n            float _12819 = floor(mod(_12720, 256.0));\n            float _12827 = _12717 - floor(_12717);\n            float _12831 = _12720 - floor(_12720);\n            float _13023 = ((_12827 * _12827) * _12827) * ((_12827 * ((_12827 * 6.0) - 15.0)) + 10.0);\n            float _13070 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10831).x * 256.0) + _12816) * 0.00390625, 0.5)).x * 256.0) + _12819) * 0.00390625, 0.5)).x * 256.0;\n            float _13085 = _12816 + 1.0;\n            float _13108 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10831).x * 256.0) + _13085) * 0.00390625, 0.5)).x * 256.0) + _12819) * 0.00390625, 0.5)).x * 256.0;\n            float _13134 = _12819 + 1.0;\n            float _13146 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10831).x * 256.0) + _12816) * 0.00390625, 0.5)).x * 256.0) + _13134) * 0.00390625, 0.5)).x * 256.0;\n            float _13189 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10831).x * 256.0) + _13085) * 0.00390625, 0.5)).x * 256.0) + _13134) * 0.00390625, 0.5)).x * 256.0;\n            float _13227 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10988).x * 256.0) + _12816) * 0.00390625, 0.5)).x * 256.0) + _12819) * 0.00390625, 0.5)).x * 256.0;\n            float _13270 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10988).x * 256.0) + _13085) * 0.00390625, 0.5)).x * 256.0) + _12819) * 0.00390625, 0.5)).x * 256.0;\n            float _13313 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10988).x * 256.0) + _12816) * 0.00390625, 0.5)).x * 256.0) + _13134) * 0.00390625, 0.5)).x * 256.0;\n            float _13361 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10988).x * 256.0) + _13085) * 0.00390625, 0.5)).x * 256.0) + _13134) * 0.00390625, 0.5)).x * 256.0;\n            int _13379 = int(floor(mod(_13070, 16.0)));\n            float _13384 = (_13379 < 8) ? _10609 : _12827;\n            float _22704 = 0.0;\n            if (_13379 < 4)\n            {\n                _22704 = _12827;\n            }\n            else\n            {\n                _22704 = ((_13379 == 12) || (_13379 == 14)) ? _10609 : _12831;\n            }\n            int _13435 = int(floor(mod(_13227, 16.0)));\n            float _13440 = (_13435 < 8) ? _10707 : _12827;\n            float _22706 = 0.0;\n            if (_13435 < 4)\n            {\n                _22706 = _12827;\n            }\n            else\n            {\n                _22706 = ((_13435 == 12) || (_13435 == 14)) ? _10707 : _12831;\n            }\n            float _12931 = _12827 - 1.0;\n            int _13491 = int(floor(mod(_13108, 16.0)));\n            float _13496 = (_13491 < 8) ? _10609 : _12931;\n            float _22708 = 0.0;\n            if (_13491 < 4)\n            {\n                _22708 = _12931;\n            }\n            else\n            {\n                _22708 = ((_13491 == 12) || (_13491 == 14)) ? _10609 : _12831;\n            }\n            int _13547 = int(floor(mod(_13270, 16.0)));\n            float _13552 = (_13547 < 8) ? _10707 : _12931;\n            float _22710 = 0.0;\n            if (_13547 < 4)\n            {\n                _22710 = _12931;\n            }\n            else\n            {\n                _22710 = ((_13547 == 12) || (_13547 == 14)) ? _10707 : _12831;\n            }\n            float _12953 = _12831 - 1.0;\n            int _13603 = int(floor(mod(_13146, 16.0)));\n            float _13608 = (_13603 < 8) ? _10609 : _12827;\n            float _22716 = 0.0;\n            if (_13603 < 4)\n            {\n                _22716 = _12827;\n            }\n            else\n            {\n                _22716 = ((_13603 == 12) || (_13603 == 14)) ? _10609 : _12953;\n            }\n            int _13659 = int(floor(mod(_13313, 16.0)));\n            float _13664 = (_13659 < 8) ? _10707 : _12827;\n            float _22718 = 0.0;\n            if (_13659 < 4)\n            {\n                _22718 = _12827;\n            }\n            else\n            {\n                _22718 = ((_13659 == 12) || (_13659 == 14)) ? _10707 : _12953;\n            }\n            int _13715 = int(floor(mod(_13189, 16.0)));\n            float _13720 = (_13715 < 8) ? _10609 : _12931;\n            float _22720 = 0.0;\n            if (_13715 < 4)\n            {\n                _22720 = _12931;\n            }\n            else\n            {\n                _22720 = ((_13715 == 12) || (_13715 == 14)) ? _10609 : _12953;\n            }\n            int _13771 = int(floor(mod(_13361, 16.0)));\n            float _13776 = (_13771 < 8) ? _10707 : _12931;\n            float _22722 = 0.0;\n            if (_13771 < 4)\n            {\n                _22722 = _12931;\n            }\n            else\n            {\n                _22722 = ((_13771 == 12) || (_13771 == 14)) ? _10707 : _12953;\n            }\n            float _12995 = (mix(mix(mix(((int(mod(_13070, 2.0)) == 0) ? _13384 : (-_13384)) + ((int(mod(_13070, 3.0)) == 0) ? _22704 : (-_22704)), ((int(mod(_13227, 2.0)) == 0) ? _13440 : (-_13440)) + ((int(mod(_13227, 3.0)) == 0) ? _22706 : (-_22706)), _10795), mix(((int(mod(_13108, 2.0)) == 0) ? _13496 : (-_13496)) + ((int(mod(_13108, 3.0)) == 0) ? _22708 : (-_22708)), ((int(mod(_13270, 2.0)) == 0) ? _13552 : (-_13552)) + ((int(mod(_13270, 3.0)) == 0) ? _22710 : (-_22710)), _10795), _13023), mix(mix(((int(mod(_13146, 2.0)) == 0) ? _13608 : (-_13608)) + ((int(mod(_13146, 3.0)) == 0) ? _22716 : (-_22716)), ((int(mod(_13313, 2.0)) == 0) ? _13664 : (-_13664)) + ((int(mod(_13313, 3.0)) == 0) ? _22718 : (-_22718)), _10795), mix(((int(mod(_13189, 2.0)) == 0) ? _13720 : (-_13720)) + ((int(mod(_13189, 3.0)) == 0) ? _22720 : (-_22720)), ((int(mod(_13361, 2.0)) == 0) ? _13776 : (-_13776)) + ((int(mod(_13361, 3.0)) == 0) ? _22722 : (-_22722)), _10795), _13023), ((_12831 * _12831) * _12831) * ((_12831 * ((_12831 * 6.0) - 15.0)) + 10.0)) + 1.0) * 0.5;\n            float _13827 = (_22138.z - 9.9999997473787516355514526367188e-06) * u_noise[0].z;\n            float _13926 = floor(mod(_13827, 256.0));\n            float _13938 = _13827 - floor(_13827);\n            float _14177 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10831).x * 256.0) + _12816) * 0.00390625, 0.5)).x * 256.0) + _13926) * 0.00390625, 0.5)).x * 256.0;\n            float _14215 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10831).x * 256.0) + _13085) * 0.00390625, 0.5)).x * 256.0) + _13926) * 0.00390625, 0.5)).x * 256.0;\n            float _14241 = _13926 + 1.0;\n            float _14253 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10831).x * 256.0) + _12816) * 0.00390625, 0.5)).x * 256.0) + _14241) * 0.00390625, 0.5)).x * 256.0;\n            float _14296 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10831).x * 256.0) + _13085) * 0.00390625, 0.5)).x * 256.0) + _14241) * 0.00390625, 0.5)).x * 256.0;\n            float _14334 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10988).x * 256.0) + _12816) * 0.00390625, 0.5)).x * 256.0) + _13926) * 0.00390625, 0.5)).x * 256.0;\n            float _14377 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10988).x * 256.0) + _13085) * 0.00390625, 0.5)).x * 256.0) + _13926) * 0.00390625, 0.5)).x * 256.0;\n            float _14420 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10988).x * 256.0) + _12816) * 0.00390625, 0.5)).x * 256.0) + _14241) * 0.00390625, 0.5)).x * 256.0;\n            float _14468 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10988).x * 256.0) + _13085) * 0.00390625, 0.5)).x * 256.0) + _14241) * 0.00390625, 0.5)).x * 256.0;\n            int _14486 = int(floor(mod(_14177, 16.0)));\n            float _14491 = (_14486 < 8) ? _10609 : _12827;\n            float _22760 = 0.0;\n            if (_14486 < 4)\n            {\n                _22760 = _12827;\n            }\n            else\n            {\n                _22760 = ((_14486 == 12) || (_14486 == 14)) ? _10609 : _13938;\n            }\n            int _14542 = int(floor(mod(_14334, 16.0)));\n            float _14547 = (_14542 < 8) ? _10707 : _12827;\n            float _22762 = 0.0;\n            if (_14542 < 4)\n            {\n                _22762 = _12827;\n            }\n            else\n            {\n                _22762 = ((_14542 == 12) || (_14542 == 14)) ? _10707 : _13938;\n            }\n            int _14598 = int(floor(mod(_14215, 16.0)));\n            float _14603 = (_14598 < 8) ? _10609 : _12931;\n            float _22764 = 0.0;\n            if (_14598 < 4)\n            {\n                _22764 = _12931;\n            }\n            else\n            {\n                _22764 = ((_14598 == 12) || (_14598 == 14)) ? _10609 : _13938;\n            }\n            int _14654 = int(floor(mod(_14377, 16.0)));\n            float _14659 = (_14654 < 8) ? _10707 : _12931;\n            float _22766 = 0.0;\n            if (_14654 < 4)\n            {\n                _22766 = _12931;\n            }\n            else\n            {\n                _22766 = ((_14654 == 12) || (_14654 == 14)) ? _10707 : _13938;\n            }\n            float _14060 = _13938 - 1.0;\n            int _14710 = int(floor(mod(_14253, 16.0)));\n            float _14715 = (_14710 < 8) ? _10609 : _12827;\n            float _22772 = 0.0;\n            if (_14710 < 4)\n            {\n                _22772 = _12827;\n            }\n            else\n            {\n                _22772 = ((_14710 == 12) || (_14710 == 14)) ? _10609 : _14060;\n            }\n            int _14766 = int(floor(mod(_14420, 16.0)));\n            float _14771 = (_14766 < 8) ? _10707 : _12827;\n            float _22774 = 0.0;\n            if (_14766 < 4)\n            {\n                _22774 = _12827;\n            }\n            else\n            {\n                _22774 = ((_14766 == 12) || (_14766 == 14)) ? _10707 : _14060;\n            }\n            int _14822 = int(floor(mod(_14296, 16.0)));\n            float _14827 = (_14822 < 8) ? _10609 : _12931;\n            float _22776 = 0.0;\n            if (_14822 < 4)\n            {\n                _22776 = _12931;\n            }\n            else\n            {\n                _22776 = ((_14822 == 12) || (_14822 == 14)) ? _10609 : _14060;\n            }\n            int _14878 = int(floor(mod(_14468, 16.0)));\n            float _14883 = (_14878 < 8) ? _10707 : _12931;\n            float _22778 = 0.0;\n            if (_14878 < 4)\n            {\n                _22778 = _12931;\n            }\n            else\n            {\n                _22778 = ((_14878 == 12) || (_14878 == 14)) ? _10707 : _14060;\n            }\n            float _14102 = (mix(mix(mix(((int(mod(_14177, 2.0)) == 0) ? _14491 : (-_14491)) + ((int(mod(_14177, 3.0)) == 0) ? _22760 : (-_22760)), ((int(mod(_14334, 2.0)) == 0) ? _14547 : (-_14547)) + ((int(mod(_14334, 3.0)) == 0) ? _22762 : (-_22762)), _10795), mix(((int(mod(_14215, 2.0)) == 0) ? _14603 : (-_14603)) + ((int(mod(_14215, 3.0)) == 0) ? _22764 : (-_22764)), ((int(mod(_14377, 2.0)) == 0) ? _14659 : (-_14659)) + ((int(mod(_14377, 3.0)) == 0) ? _22766 : (-_22766)), _10795), _13023), mix(mix(((int(mod(_14253, 2.0)) == 0) ? _14715 : (-_14715)) + ((int(mod(_14253, 3.0)) == 0) ? _22772 : (-_22772)), ((int(mod(_14420, 2.0)) == 0) ? _14771 : (-_14771)) + ((int(mod(_14420, 3.0)) == 0) ? _22774 : (-_22774)), _10795), mix(((int(mod(_14296, 2.0)) == 0) ? _14827 : (-_14827)) + ((int(mod(_14296, 3.0)) == 0) ? _22776 : (-_22776)), ((int(mod(_14468, 2.0)) == 0) ? _14883 : (-_14883)) + ((int(mod(_14468, 3.0)) == 0) ? _22778 : (-_22778)), _10795), _13023), ((_13938 * _13938) * _13938) * ((_13938 * ((_13938 * 6.0) - 15.0)) + 10.0)) + 1.0) * 0.5;\n            float _14928 = (_7314 + 9.9999997473787516355514526367188e-06) * u_noise[0].z;\n            float _15027 = floor(mod(_14928, 256.0));\n            float _15037 = _14928 - floor(_14928);\n            float _15223 = ((_15037 * _15037) * _15037) * ((_15037 * ((_15037 * 6.0) - 15.0)) + 10.0);\n            vec2 _15259 = vec2(_15027 * 0.00390625, 0.5);\n            float _15284 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _15259).x * 256.0) + _12816) * 0.00390625, 0.5)).x * 256.0) + _10605) * 0.00390625, 0.5)).x * 256.0;\n            float _15322 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _15259).x * 256.0) + _13085) * 0.00390625, 0.5)).x * 256.0) + _10605) * 0.00390625, 0.5)).x * 256.0;\n            float _15360 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _15259).x * 256.0) + _12816) * 0.00390625, 0.5)).x * 256.0) + _10920) * 0.00390625, 0.5)).x * 256.0;\n            float _15403 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _15259).x * 256.0) + _13085) * 0.00390625, 0.5)).x * 256.0) + _10920) * 0.00390625, 0.5)).x * 256.0;\n            vec2 _15416 = vec2((_15027 + 1.0) * 0.00390625, 0.5);\n            float _15441 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _15416).x * 256.0) + _12816) * 0.00390625, 0.5)).x * 256.0) + _10605) * 0.00390625, 0.5)).x * 256.0;\n            float _15484 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _15416).x * 256.0) + _13085) * 0.00390625, 0.5)).x * 256.0) + _10605) * 0.00390625, 0.5)).x * 256.0;\n            float _15527 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _15416).x * 256.0) + _12816) * 0.00390625, 0.5)).x * 256.0) + _10920) * 0.00390625, 0.5)).x * 256.0;\n            float _15575 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _15416).x * 256.0) + _13085) * 0.00390625, 0.5)).x * 256.0) + _10920) * 0.00390625, 0.5)).x * 256.0;\n            int _15593 = int(floor(mod(_15284, 16.0)));\n            float _15598 = (_15593 < 8) ? _15037 : _12827;\n            float _22816 = 0.0;\n            if (_15593 < 4)\n            {\n                _22816 = _12827;\n            }\n            else\n            {\n                _22816 = ((_15593 == 12) || (_15593 == 14)) ? _15037 : _10617;\n            }\n            float _15135 = _15037 - 1.0;\n            int _15649 = int(floor(mod(_15441, 16.0)));\n            float _15654 = (_15649 < 8) ? _15135 : _12827;\n            float _22818 = 0.0;\n            if (_15649 < 4)\n            {\n                _22818 = _12827;\n            }\n            else\n            {\n                _22818 = ((_15649 == 12) || (_15649 == 14)) ? _15135 : _10617;\n            }\n            int _15705 = int(floor(mod(_15322, 16.0)));\n            float _15710 = (_15705 < 8) ? _15037 : _12931;\n            float _22820 = 0.0;\n            if (_15705 < 4)\n            {\n                _22820 = _12931;\n            }\n            else\n            {\n                _22820 = ((_15705 == 12) || (_15705 == 14)) ? _15037 : _10617;\n            }\n            int _15761 = int(floor(mod(_15484, 16.0)));\n            float _15766 = (_15761 < 8) ? _15135 : _12931;\n            float _22822 = 0.0;\n            if (_15761 < 4)\n            {\n                _22822 = _12931;\n            }\n            else\n            {\n                _22822 = ((_15761 == 12) || (_15761 == 14)) ? _15135 : _10617;\n            }\n            int _15817 = int(floor(mod(_15360, 16.0)));\n            float _15822 = (_15817 < 8) ? _15037 : _12827;\n            float _22828 = 0.0;\n            if (_15817 < 4)\n            {\n                _22828 = _12827;\n            }\n            else\n            {\n                _22828 = ((_15817 == 12) || (_15817 == 14)) ? _15037 : _10739;\n            }\n            int _15873 = int(floor(mod(_15527, 16.0)));\n            float _15878 = (_15873 < 8) ? _15135 : _12827;\n            float _22830 = 0.0;\n            if (_15873 < 4)\n            {\n                _22830 = _12827;\n            }\n            else\n            {\n                _22830 = ((_15873 == 12) || (_15873 == 14)) ? _15135 : _10739;\n            }\n            int _15929 = int(floor(mod(_15403, 16.0)));\n            float _15934 = (_15929 < 8) ? _15037 : _12931;\n            float _22832 = 0.0;\n            if (_15929 < 4)\n            {\n                _22832 = _12931;\n            }\n            else\n            {\n                _22832 = ((_15929 == 12) || (_15929 == 14)) ? _15037 : _10739;\n            }\n            int _15985 = int(floor(mod(_15575, 16.0)));\n            float _15990 = (_15985 < 8) ? _15135 : _12931;\n            float _22834 = 0.0;\n            if (_15985 < 4)\n            {\n                _22834 = _12931;\n            }\n            else\n            {\n                _22834 = ((_15985 == 12) || (_15985 == 14)) ? _15135 : _10739;\n            }\n            float _15209 = (mix(mix(mix(((int(mod(_15284, 2.0)) == 0) ? _15598 : (-_15598)) + ((int(mod(_15284, 3.0)) == 0) ? _22816 : (-_22816)), ((int(mod(_15441, 2.0)) == 0) ? _15654 : (-_15654)) + ((int(mod(_15441, 3.0)) == 0) ? _22818 : (-_22818)), _15223), mix(((int(mod(_15322, 2.0)) == 0) ? _15710 : (-_15710)) + ((int(mod(_15322, 3.0)) == 0) ? _22820 : (-_22820)), ((int(mod(_15484, 2.0)) == 0) ? _15766 : (-_15766)) + ((int(mod(_15484, 3.0)) == 0) ? _22822 : (-_22822)), _15223), _13023), mix(mix(((int(mod(_15360, 2.0)) == 0) ? _15822 : (-_15822)) + ((int(mod(_15360, 3.0)) == 0) ? _22828 : (-_22828)), ((int(mod(_15527, 2.0)) == 0) ? _15878 : (-_15878)) + ((int(mod(_15527, 3.0)) == 0) ? _22830 : (-_22830)), _15223), mix(((int(mod(_15403, 2.0)) == 0) ? _15934 : (-_15934)) + ((int(mod(_15403, 3.0)) == 0) ? _22832 : (-_22832)), ((int(mod(_15575, 2.0)) == 0) ? _15990 : (-_15990)) + ((int(mod(_15575, 3.0)) == 0) ? _22834 : (-_22834)), _15223), _13023), _10823) + 1.0) * 0.5;\n            float _16035 = (_7314 - 9.9999997473787516355514526367188e-06) * u_noise[0].z;\n            float _16134 = floor(mod(_16035, 256.0));\n            float _16144 = _16035 - floor(_16035);\n            float _16330 = ((_16144 * _16144) * _16144) * ((_16144 * ((_16144 * 6.0) - 15.0)) + 10.0);\n            vec2 _16366 = vec2(_16134 * 0.00390625, 0.5);\n            float _16391 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _16366).x * 256.0) + _12816) * 0.00390625, 0.5)).x * 256.0) + _10605) * 0.00390625, 0.5)).x * 256.0;\n            float _16429 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _16366).x * 256.0) + _13085) * 0.00390625, 0.5)).x * 256.0) + _10605) * 0.00390625, 0.5)).x * 256.0;\n            float _16467 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _16366).x * 256.0) + _12816) * 0.00390625, 0.5)).x * 256.0) + _10920) * 0.00390625, 0.5)).x * 256.0;\n            float _16510 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _16366).x * 256.0) + _13085) * 0.00390625, 0.5)).x * 256.0) + _10920) * 0.00390625, 0.5)).x * 256.0;\n            vec2 _16523 = vec2((_16134 + 1.0) * 0.00390625, 0.5);\n            float _16548 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _16523).x * 256.0) + _12816) * 0.00390625, 0.5)).x * 256.0) + _10605) * 0.00390625, 0.5)).x * 256.0;\n            float _16591 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _16523).x * 256.0) + _13085) * 0.00390625, 0.5)).x * 256.0) + _10605) * 0.00390625, 0.5)).x * 256.0;\n            float _16634 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _16523).x * 256.0) + _12816) * 0.00390625, 0.5)).x * 256.0) + _10920) * 0.00390625, 0.5)).x * 256.0;\n            float _16682 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _16523).x * 256.0) + _13085) * 0.00390625, 0.5)).x * 256.0) + _10920) * 0.00390625, 0.5)).x * 256.0;\n            int _16700 = int(floor(mod(_16391, 16.0)));\n            float _16705 = (_16700 < 8) ? _16144 : _12827;\n            float _22872 = 0.0;\n            if (_16700 < 4)\n            {\n                _22872 = _12827;\n            }\n            else\n            {\n                _22872 = ((_16700 == 12) || (_16700 == 14)) ? _16144 : _10617;\n            }\n            float _16242 = _16144 - 1.0;\n            int _16756 = int(floor(mod(_16548, 16.0)));\n            float _16761 = (_16756 < 8) ? _16242 : _12827;\n            float _22874 = 0.0;\n            if (_16756 < 4)\n            {\n                _22874 = _12827;\n            }\n            else\n            {\n                _22874 = ((_16756 == 12) || (_16756 == 14)) ? _16242 : _10617;\n            }\n            int _16812 = int(floor(mod(_16429, 16.0)));\n            float _16817 = (_16812 < 8) ? _16144 : _12931;\n            float _22876 = 0.0;\n            if (_16812 < 4)\n            {\n                _22876 = _12931;\n            }\n            else\n            {\n                _22876 = ((_16812 == 12) || (_16812 == 14)) ? _16144 : _10617;\n            }\n            int _16868 = int(floor(mod(_16591, 16.0)));\n            float _16873 = (_16868 < 8) ? _16242 : _12931;\n            float _22878 = 0.0;\n            if (_16868 < 4)\n            {\n                _22878 = _12931;\n            }\n            else\n            {\n                _22878 = ((_16868 == 12) || (_16868 == 14)) ? _16242 : _10617;\n            }\n            int _16924 = int(floor(mod(_16467, 16.0)));\n            float _16929 = (_16924 < 8) ? _16144 : _12827;\n            float _22884 = 0.0;\n            if (_16924 < 4)\n            {\n                _22884 = _12827;\n            }\n            else\n            {\n                _22884 = ((_16924 == 12) || (_16924 == 14)) ? _16144 : _10739;\n            }\n            int _16980 = int(floor(mod(_16634, 16.0)));\n            float _16985 = (_16980 < 8) ? _16242 : _12827;\n            float _22886 = 0.0;\n            if (_16980 < 4)\n            {\n                _22886 = _12827;\n            }\n            else\n            {\n                _22886 = ((_16980 == 12) || (_16980 == 14)) ? _16242 : _10739;\n            }\n            int _17036 = int(floor(mod(_16510, 16.0)));\n            float _17041 = (_17036 < 8) ? _16144 : _12931;\n            float _22888 = 0.0;\n            if (_17036 < 4)\n            {\n                _22888 = _12931;\n            }\n            else\n            {\n                _22888 = ((_17036 == 12) || (_17036 == 14)) ? _16144 : _10739;\n            }\n            int _17092 = int(floor(mod(_16682, 16.0)));\n            float _17097 = (_17092 < 8) ? _16242 : _12931;\n            float _22890 = 0.0;\n            if (_17092 < 4)\n            {\n                _22890 = _12931;\n            }\n            else\n            {\n                _22890 = ((_17092 == 12) || (_17092 == 14)) ? _16242 : _10739;\n            }\n            float _16316 = (mix(mix(mix(((int(mod(_16391, 2.0)) == 0) ? _16705 : (-_16705)) + ((int(mod(_16391, 3.0)) == 0) ? _22872 : (-_22872)), ((int(mod(_16548, 2.0)) == 0) ? _16761 : (-_16761)) + ((int(mod(_16548, 3.0)) == 0) ? _22874 : (-_22874)), _16330), mix(((int(mod(_16429, 2.0)) == 0) ? _16817 : (-_16817)) + ((int(mod(_16429, 3.0)) == 0) ? _22876 : (-_22876)), ((int(mod(_16591, 2.0)) == 0) ? _16873 : (-_16873)) + ((int(mod(_16591, 3.0)) == 0) ? _22878 : (-_22878)), _16330), _13023), mix(mix(((int(mod(_16467, 2.0)) == 0) ? _16929 : (-_16929)) + ((int(mod(_16467, 3.0)) == 0) ? _22884 : (-_22884)), ((int(mod(_16634, 2.0)) == 0) ? _16985 : (-_16985)) + ((int(mod(_16634, 3.0)) == 0) ? _22886 : (-_22886)), _16330), mix(((int(mod(_16510, 2.0)) == 0) ? _17041 : (-_17041)) + ((int(mod(_16510, 3.0)) == 0) ? _22888 : (-_22888)), ((int(mod(_16682, 2.0)) == 0) ? _17097 : (-_17097)) + ((int(mod(_16682, 3.0)) == 0) ? _22890 : (-_22890)), _16330), _13023), _10823) + 1.0) * 0.5;\n            vec3 _21349 = vec3(0.0);\n            _21349.x = (((_11888 - _10781) - _14102) + _12995) * 50000.0;\n            vec3 _21351 = _21349;\n            _21351.y = (((_14102 - _12995) - _16316) + _15209) * 50000.0;\n            vec3 _21353 = _21351;\n            _21353.z = (((_16316 - _15209) - _11888) + _10781) * 50000.0;\n            vec3 _10444 = normalize(_21353);\n            vec3 _23025 = vec3(0.0);\n            if (u_noise[1].x == 0.0)\n            {\n                vec3 _21356 = _35654;\n                _21356.x = _22417 * u_noise[0].z;\n                vec3 _21359 = _21356;\n                _21359.y = _22477 * u_noise[0].z;\n                vec3 _21362 = _21359;\n                _21362.z = _22536 * u_noise[0].z;\n                _23025 = _21362;\n            }\n            else\n            {\n                _23025 = vec3(_22417, _22477, _22536);\n            }\n            float _10474 = _10444.x * _23025.x;\n            vec3 _21366 = _35654;\n            _21366.x = _10474;\n            vec3 _24583 = vec3(0.0);\n            if (u_common[0].z == 0.0)\n            {\n                vec3 _21379 = _35654;\n                _21379.x = _23075.x + ((_10474 * _23075.x) * _23176);\n                vec3 _21384 = _21379;\n                _21384.y = _23075.y + ((_10474 * _23075.y) * _23176);\n                vec3 _21389 = _21384;\n                _21389.z = _23075.z + ((_10474 * _23075.z) * _23176);\n                _24583 = _21389;\n            }\n            else\n            {\n                vec3 _21394 = _35654;\n                _21394.x = _23075.x + ((_10474 * _23075.x) * _23176);\n                vec3 _21399 = _21394;\n                _21399.y = _23075.y + (((_10444.y * _23025.y) * _23075.y) * _23176);\n                vec3 _21404 = _21399;\n                _21404.z = _23075.z + (((_10444.z * _23025.z) * _23075.z) * _23176);\n                _24583 = _21404;\n            }\n            _24582 = _24583;\n            _23499 = _21366;\n        }\n        else\n        {\n            _24582 = _23075;\n            _23499 = vec3(0.0);\n        }\n        vec3 _23523 = vec3(0.0);\n        if (u_rotationByLife[0].x > 0.0)\n        {\n            float _23294 = 0.0;\n            float _23296 = 0.0;\n            float _23305 = 0.0;\n            if (_6642)\n            {\n                float _23295 = 0.0;\n                float _23297 = 0.0;\n                float _23306 = 0.0;\n                if (u_rotationByLife[0].y > 0.0)\n                {\n                    vec4 _7699 = texture2D(u_modulesBakedDataTex, vec2(_21775, (u_modulesBakedDataTexInfo[1].x + 0.5) * _6401));\n                    vec4 _7709 = texture2D(u_modulesBakedDataTex, vec2(_21775, (u_modulesBakedDataTexInfo[1].y + 0.5) * _6401));\n                    vec4 _7719 = texture2D(u_modulesBakedDataTex, vec2(_21775, (u_modulesBakedDataTexInfo[1].z + 0.5) * _6401));\n                    _23306 = mix(radians(_7699.z), radians(_7699.w), _8974);\n                    _23297 = mix(radians(_7709.z), radians(_7709.w), _8974);\n                    _23295 = mix(radians(_7719.z), radians(_7719.w), _8974);\n                }\n                else\n                {\n                    vec4 _7763 = texture2D(u_modulesBakedDataTex, vec2(_21775, (u_modulesBakedDataTexInfo[1].z + 0.5) * _6401));\n                    _23306 = 0.0;\n                    _23297 = 0.0;\n                    _23295 = mix(radians(_7763.z), radians(_7763.w), _8974);\n                }\n                _23305 = _23306;\n                _23296 = _23297;\n                _23294 = _23295;\n            }\n            else\n            {\n                float _7791 = u_rotationByLife[1].x * a_startLifeTime;\n                float _7799 = 1.0 - _8974;\n                float _7804 = radians((_8974 * u_rotationByLife[1].y) + (_7799 * u_rotationByLife[1].z));\n                float _7815 = u_rotationByLife[5].x * a_startLifeTime;\n                float _7828 = radians((_8974 * u_rotationByLife[5].y) + (_7799 * u_rotationByLife[5].z));\n                float _7839 = u_rotationByLife[9].x * a_startLifeTime;\n                float _7852 = radians((_8974 * u_rotationByLife[9].y) + (_7799 * u_rotationByLife[9].z));\n                float _27521 = u_rotationByLife[2].x * a_startLifeTime;\n                float _27529 = radians((_8974 * u_rotationByLife[2].y) + (_7799 * u_rotationByLife[2].z));\n                float _27535 = u_rotationByLife[6].x * a_startLifeTime;\n                float _27543 = radians((_8974 * u_rotationByLife[6].y) + (_7799 * u_rotationByLife[6].z));\n                float _27549 = u_rotationByLife[10].x * a_startLifeTime;\n                float _27557 = radians((_8974 * u_rotationByLife[10].y) + (_7799 * u_rotationByLife[10].z));\n                float _27570 = u_rotationByLife[3].x * a_startLifeTime;\n                float _27578 = radians((_8974 * u_rotationByLife[3].y) + (_7799 * u_rotationByLife[3].z));\n                float _27584 = u_rotationByLife[7].x * a_startLifeTime;\n                float _27592 = radians((_8974 * u_rotationByLife[7].y) + (_7799 * u_rotationByLife[7].z));\n                float _27598 = u_rotationByLife[11].x * a_startLifeTime;\n                float _27606 = radians((_8974 * u_rotationByLife[11].y) + (_7799 * u_rotationByLife[11].z));\n                float _27619 = u_rotationByLife[4].x * a_startLifeTime;\n                float _27627 = radians((_8974 * u_rotationByLife[4].y) + (_7799 * u_rotationByLife[4].z));\n                float _27633 = u_rotationByLife[8].x * a_startLifeTime;\n                float _27641 = radians((_8974 * u_rotationByLife[8].y) + (_7799 * u_rotationByLife[8].z));\n                float _27647 = u_rotationByLife[12].x * a_startLifeTime;\n                float _27655 = radians((_8974 * u_rotationByLife[12].y) + (_7799 * u_rotationByLife[12].z));\n                bool _17177 = _27521 >= _21771;\n                float _26469 = 0.0;\n                if (_17177)\n                {\n                    float _17183 = _21771 - _7791;\n                    _26469 = ((_7804 + mix(_7804, _27529, _17183 / (_27521 - _7791))) * 0.5) * _17183;\n                }\n                else\n                {\n                    _26469 = ((_7804 + _27529) * 0.5) * (_27521 - _7791);\n                }\n                bool _35734 = _17177 ? false : true;\n                bool _27464 = false;\n                float _27465 = 0.0;\n                if (_35734)\n                {\n                    bool _27439 = _27570 >= _21771;\n                    float _27462 = 0.0;\n                    if (_27439)\n                    {\n                        float _27450 = _21771 - _27521;\n                        _27462 = _26469 + (((_27529 + mix(_27529, _27578, _27450 / (_27570 - _27521))) * 0.5) * _27450);\n                    }\n                    else\n                    {\n                        _27462 = _26469 + (((_27529 + _27578) * 0.5) * (_27570 - _27521));\n                    }\n                    _27464 = _27439 ? false : _35734;\n                    _27465 = _27462;\n                }\n                else\n                {\n                    _27464 = _35734;\n                    _27465 = _26469;\n                }\n                float _27509 = 0.0;\n                if (_27464)\n                {\n                    float _27506 = 0.0;\n                    if (_27619 >= _21771)\n                    {\n                        float _27494 = _21771 - _27570;\n                        _27506 = _27465 + (((_27578 + mix(_27578, _27627, _27494 / (_27619 - _27570))) * 0.5) * _27494);\n                    }\n                    else\n                    {\n                        _27506 = _27465 + (((_27578 + _27627) * 0.5) * (_27619 - _27570));\n                    }\n                    _27509 = _27506;\n                }\n                else\n                {\n                    _27509 = _27465;\n                }\n                bool _17262 = _27535 >= _21771;\n                float _26471 = 0.0;\n                if (_17262)\n                {\n                    float _17268 = _21771 - _7815;\n                    _26471 = ((_7828 + mix(_7828, _27543, _17268 / (_27535 - _7815))) * 0.5) * _17268;\n                }\n                else\n                {\n                    _26471 = ((_7828 + _27543) * 0.5) * (_27535 - _7815);\n                }\n                bool _35736 = _17262 ? false : true;\n                bool _27376 = false;\n                float _27377 = 0.0;\n                if (_35736)\n                {\n                    bool _27351 = _27584 >= _21771;\n                    float _27374 = 0.0;\n                    if (_27351)\n                    {\n                        float _27362 = _21771 - _27535;\n                        _27374 = _26471 + (((_27543 + mix(_27543, _27592, _27362 / (_27584 - _27535))) * 0.5) * _27362);\n                    }\n                    else\n                    {\n                        _27374 = _26471 + (((_27543 + _27592) * 0.5) * (_27584 - _27535));\n                    }\n                    _27376 = _27351 ? false : _35736;\n                    _27377 = _27374;\n                }\n                else\n                {\n                    _27376 = _35736;\n                    _27377 = _26471;\n                }\n                float _27421 = 0.0;\n                if (_27376)\n                {\n                    float _27418 = 0.0;\n                    if (_27633 >= _21771)\n                    {\n                        float _27406 = _21771 - _27584;\n                        _27418 = _27377 + (((_27592 + mix(_27592, _27641, _27406 / (_27633 - _27584))) * 0.5) * _27406);\n                    }\n                    else\n                    {\n                        _27418 = _27377 + (((_27592 + _27641) * 0.5) * (_27633 - _27584));\n                    }\n                    _27421 = _27418;\n                }\n                else\n                {\n                    _27421 = _27377;\n                }\n                bool _17347 = _27549 >= _21771;\n                float _26473 = 0.0;\n                if (_17347)\n                {\n                    float _17353 = _21771 - _7839;\n                    _26473 = ((_7852 + mix(_7852, _27557, _17353 / (_27549 - _7839))) * 0.5) * _17353;\n                }\n                else\n                {\n                    _26473 = ((_7852 + _27557) * 0.5) * (_27549 - _7839);\n                }\n                bool _35738 = _17347 ? false : true;\n                bool _27288 = false;\n                float _27289 = 0.0;\n                if (_35738)\n                {\n                    bool _27263 = _27598 >= _21771;\n                    float _27286 = 0.0;\n                    if (_27263)\n                    {\n                        float _27274 = _21771 - _27549;\n                        _27286 = _26473 + (((_27557 + mix(_27557, _27606, _27274 / (_27598 - _27549))) * 0.5) * _27274);\n                    }\n                    else\n                    {\n                        _27286 = _26473 + (((_27557 + _27606) * 0.5) * (_27598 - _27549));\n                    }\n                    _27288 = _27263 ? false : _35738;\n                    _27289 = _27286;\n                }\n                else\n                {\n                    _27288 = _35738;\n                    _27289 = _26473;\n                }\n                float _27333 = 0.0;\n                if (_27288)\n                {\n                    float _27330 = 0.0;\n                    if (_27647 >= _21771)\n                    {\n                        float _27318 = _21771 - _27598;\n                        _27330 = _27289 + (((_27606 + mix(_27606, _27655, _27318 / (_27647 - _27598))) * 0.5) * _27318);\n                    }\n                    else\n                    {\n                        _27330 = _27289 + (((_27606 + _27655) * 0.5) * (_27647 - _27598));\n                    }\n                    _27333 = _27330;\n                }\n                else\n                {\n                    _27333 = _27289;\n                }\n                _23305 = _27509;\n                _23296 = _27421;\n                _23294 = _27333;\n            }\n            vec3 _23685 = vec3(0.0);\n            if (u_rotationByLife[0].y > 0.0)\n            {\n                vec3 _23688 = vec3(0.0);\n                if (u_renderer[0].x == 0.0)\n                {\n                    _23688 = vec3(_23305, _23296, _23294);\n                }\n                else\n                {\n                    _23688 = vec3(0.0);\n                }\n                vec3 _23687 = vec3(0.0);\n                if ((u_renderer[0].x == 2.0) || (u_renderer[0].x == 3.0))\n                {\n                    _23687 = vec3(0.0, 0.0, _23294);\n                }\n                else\n                {\n                    _23687 = _23688;\n                }\n                vec3 _23686 = vec3(0.0);\n                if (u_renderer[0].x == 4.0)\n                {\n                    _23686 = vec3(_23305, _23296, _23294);\n                }\n                else\n                {\n                    _23686 = _23687;\n                }\n                _23685 = _23686;\n            }\n            else\n            {\n                vec3 _23703 = vec3(0.0);\n                if (u_renderer[0].x == 4.0)\n                {\n                    vec3 _23704 = vec3(0.0);\n                    if (u_emitterShape == 1.0)\n                    {\n                        vec3 _23705 = vec3(0.0);\n                        if (u_common[1].w > 0.0)\n                        {\n                            _23705 = vec3(0.0, 0.0, (-1.0) * _23294);\n                        }\n                        else\n                        {\n                            _23705 = vec3(0.0, (-1.0) * _23296, 0.0);\n                        }\n                        _23704 = _23705;\n                    }\n                    else\n                    {\n                        _23704 = vec3(0.0, 0.0, _23294);\n                    }\n                    _23703 = _23704;\n                }\n                else\n                {\n                    _23703 = vec3(0.0);\n                }\n                vec3 _23702 = vec3(0.0);\n                if (((u_renderer[0].x == 0.0) || (u_renderer[0].x == 2.0)) || (u_renderer[0].x == 3.0))\n                {\n                    _23702 = vec3(0.0, 0.0, _23294);\n                }\n                else\n                {\n                    _23702 = _23703;\n                }\n                _23685 = _23702;\n            }\n            _23523 = _23685;\n        }\n        else\n        {\n            _23523 = vec3(0.0);\n        }\n        vec3 _24971 = vec3(0.0);\n        if (_6416)\n        {\n            float _7988 = radians(_23323);\n            vec3 _24972 = vec3(0.0);\n            if (u_common[1].w > 0.0)\n            {\n                float _7996 = _23499.x * _7988;\n                vec3 _21443 = _35654;\n                _21443.x = _23523.x + _7996;\n                vec3 _21447 = _21443;\n                _21447.y = _23523.y + _7996;\n                vec3 _21451 = _21447;\n                _21451.z = _23523.z + _7996;\n                _24972 = _21451;\n            }\n            else\n            {\n                vec3 _21455 = _23523;\n                _21455.z = _23523.z + (_23499.x * _7988);\n                _24972 = _21455;\n            }\n            _24971 = _24972;\n        }\n        else\n        {\n            _24971 = _23523;\n        }\n        bool _8030 = u_renderer[0].x == 0.0;\n        bool _8033 = u_renderer[0].x == 4.0;\n        mat4 _24954 = mat4(vec4(0.0), vec4(0.0), vec4(0.0), vec4(0.0));\n        if (_8030 || _8033)\n        {\n            mat4 _24955 = mat4(vec4(0.0), vec4(0.0), vec4(0.0), vec4(0.0));\n            if (u_renderer[0].y == 1.0)\n            {\n                _24955 = _24211 * _8799;\n            }\n            else\n            {\n                mat4 _24956 = mat4(vec4(0.0), vec4(0.0), vec4(0.0), vec4(0.0));\n                if (u_renderer[0].y == 2.0)\n                {\n                    _24956 = _24211 * _24398;\n                }\n                else\n                {\n                    mat4 _24957 = mat4(vec4(0.0), vec4(0.0), vec4(0.0), vec4(0.0));\n                    if (u_renderer[0].y == 3.0)\n                    {\n                        vec3 _8074 = normalize(vec3(u_viewInverse[3].x, u_viewInverse[3].y, u_viewInverse[3].z) - (_23713 * vec4(_7314, _22138.yz, 1.0)).xyz);\n                        vec3 _8078 = normalize(cross(vec3(0.0, 1.0, 0.0), _8074));\n                        mat4 _21457 = mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0));\n                        _21457[0] = vec4(_8078, 0.0);\n                        mat4 _21459 = _21457;\n                        _21459[1] = vec4(normalize(cross(_8074, _8078)), 0.0);\n                        mat4 _21461 = _21459;\n                        _21461[2] = vec4(_8074, 0.0);\n                        _24957 = _21461;\n                    }\n                    else\n                    {\n                        vec3 _8118 = vec3(1.0) / (vec3(length(vec3(u_view[0].xyz)), length(vec3(u_view[1].xyz)), length(vec3(u_view[2].xyz))) + vec3(9.9999997473787516355514526367188e-06));\n                        mat4 _8124 = u_view * mat4(vec4(_8118.x, 0.0, 0.0, 0.0), vec4(0.0, _8118.y, 0.0, 0.0), vec4(0.0, 0.0, _8118.z, 0.0), vec4(0.0, 0.0, 0.0, 1.0));\n                        float _17469 = _8124[0].x;\n                        float _17471 = _8124[0].y;\n                        float _17473 = _8124[0].z;\n                        float _17475 = _8124[0].w;\n                        float _17477 = _8124[1].x;\n                        float _17479 = _8124[1].y;\n                        float _17481 = _8124[1].z;\n                        float _17483 = _8124[1].w;\n                        float _17485 = _8124[2].x;\n                        float _17487 = _8124[2].y;\n                        float _17489 = _8124[2].z;\n                        float _17491 = _8124[2].w;\n                        float _17493 = _8124[3].x;\n                        float _17495 = _8124[3].y;\n                        float _17497 = _8124[3].z;\n                        float _17499 = _8124[3].w;\n                        float _17506 = (_17469 * _17479) - (_17471 * _17477);\n                        float _17513 = (_17469 * _17481) - (_17473 * _17477);\n                        float _17520 = (_17469 * _17483) - (_17475 * _17477);\n                        float _17527 = (_17471 * _17481) - (_17473 * _17479);\n                        float _17534 = (_17471 * _17483) - (_17475 * _17479);\n                        float _17541 = (_17473 * _17483) - (_17475 * _17481);\n                        float _17548 = (_17485 * _17495) - (_17487 * _17493);\n                        float _17555 = (_17485 * _17497) - (_17489 * _17493);\n                        float _17562 = (_17485 * _17499) - (_17491 * _17493);\n                        float _17569 = (_17487 * _17497) - (_17489 * _17495);\n                        float _17576 = (_17487 * _17499) - (_17491 * _17495);\n                        float _17583 = (_17489 * _17499) - (_17491 * _17497);\n                        _24957 = mat4(vec4(((_17479 * _17583) - (_17481 * _17576)) + (_17483 * _17569), ((_17473 * _17576) - (_17471 * _17583)) - (_17475 * _17569), ((_17495 * _17541) - (_17497 * _17534)) + (_17499 * _17527), ((_17489 * _17534) - (_17487 * _17541)) - (_17491 * _17527)), vec4(((_17481 * _17562) - (_17477 * _17583)) - (_17483 * _17555), ((_17469 * _17583) - (_17473 * _17562)) + (_17475 * _17555), ((_17497 * _17520) - (_17493 * _17541)) - (_17499 * _17513), ((_17485 * _17541) - (_17489 * _17520)) + (_17491 * _17513)), vec4(((_17477 * _17576) - (_17479 * _17562)) + (_17483 * _17548), ((_17471 * _17562) - (_17469 * _17576)) - (_17475 * _17548), ((_17493 * _17534) - (_17495 * _17520)) + (_17499 * _17506), ((_17487 * _17520) - (_17485 * _17534)) - (_17491 * _17506)), vec4(((_17479 * _17555) - (_17477 * _17569)) - (_17481 * _17548), ((_17469 * _17569) - (_17471 * _17555)) + (_17473 * _17548), ((_17495 * _17513) - (_17493 * _17527)) - (_17497 * _17506), ((_17485 * _17527) - (_17487 * _17513)) + (_17489 * _17506))) * (1.0 / ((((((_17506 * _17583) - (_17513 * _17576)) + (_17520 * _17569)) + (_17527 * _17562)) - (_17534 * _17555)) + (_17541 * _17548)));\n                    }\n                    _24956 = _24957;\n                }\n                _24955 = _24956;\n            }\n            _24954 = _24955;\n        }\n        else\n        {\n            _24954 = mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0));\n        }\n        mat4 _24959 = mat4(vec4(0.0), vec4(0.0), vec4(0.0), vec4(0.0));\n        vec3 _24965 = vec3(0.0);\n        if (u_renderer[0].x == 1.0)\n        {\n            vec3 _8168 = normalize((_23713 * vec4(_7310, _22128.yz, 0.0)).xyz) * (-1.0);\n            vec3 _8172 = normalize(cross(normalize(vec3(u_viewInverse[3].x, u_viewInverse[3].y, u_viewInverse[3].z) - (_23713 * vec4(_7314, _22138.yz, 1.0)).xyz), _8168));\n            int _8194 = int(sign(u_renderer[1].y));\n            int _24952 = 0;\n            if (_8194 == 0)\n            {\n                _24952 = int(sign(u_renderer[1].z));\n            }\n            else\n            {\n                _24952 = _8194;\n            }\n            vec3 _21496 = _35654;\n            _21496.x = a_subPosition.x * ((u_renderer[1].y * length(_21150)) + (u_renderer[1].z * _24582.x));\n            vec3 _21500 = _21496;\n            _21500.y = a_subPosition.y * (_24582.y * float(_24952));\n            vec3 _21504 = _21500;\n            _21504.z = a_subPosition.z * _24582.z;\n            mat4 _21506 = _24954;\n            _21506[0] = vec4(_8168, 0.0);\n            mat4 _21508 = _21506;\n            _21508[1] = vec4(_8172, 0.0);\n            mat4 _21510 = _21508;\n            _21510[2] = vec4(normalize(cross(_8172, _8168)), 0.0);\n            _24965 = _21504;\n            _24959 = _21510;\n        }\n        else\n        {\n            _24965 = a_subPosition * _24582;\n            _24959 = _24954;\n        }\n        mat4 _24961 = mat4(vec4(0.0), vec4(0.0), vec4(0.0), vec4(0.0));\n        if (u_renderer[0].x == 2.0)\n        {\n            mat4 _21518 = _24959;\n            _21518[0] = vec4(-0.699999988079071044921875, 0.0, 0.0, 0.0);\n            mat4 _21520 = _21518;\n            _21520[1] = vec4(cross(vec3(0.0, 1.0, 0.0), vec3(-1.0, 0.0, 0.0)) * 0.699999988079071044921875, 0.0);\n            mat4 _21522 = _21520;\n            _21522[2] = vec4(0.0, 0.699999988079071044921875, 0.0, 0.0);\n            _24961 = _21522;\n        }\n        else\n        {\n            _24961 = _24959;\n        }\n        mat4 _24989 = mat4(vec4(0.0), vec4(0.0), vec4(0.0), vec4(0.0));\n        if (u_renderer[0].x == 3.0)\n        {\n            vec3 _8312 = cross(vec3(0.0, 1.0, 0.0), vec4(u_viewInverse[2].x, u_viewInverse[2].y, u_viewInverse[2].z, 1.0).xyz);\n            mat4 _21530 = _24961;\n            _21530[0] = vec4(_8312 * 0.699999988079071044921875, 0.0);\n            mat4 _21532 = _21530;\n            _21532[1] = vec4(0.0, 0.699999988079071044921875, 0.0, 0.0);\n            mat4 _21534 = _21532;\n            _21534[2] = vec4(cross(_8312, vec3(0.0, 1.0, 0.0)) * 0.699999988079071044921875, 0.0);\n            _24989 = _21534;\n        }\n        else\n        {\n            _24989 = _24961;\n        }\n        vec4 _8355 = vec4(_24965, 1.0);\n        vec4 _25010 = vec4(0.0);\n        if (!(u_renderer[0].x == 1.0))\n        {\n            vec4 _25011 = vec4(0.0);\n            if (!(u_renderer[0].x == 4.0))\n            {\n                bool _8386 = _8030 && (u_common[1].w <= 0.0);\n                bvec4 _35741 = bvec4(_8386);\n                float _17810 = cos(a_startRotation.y);\n                float _17813 = sin(a_startRotation.y);\n                float _17830 = -a_startRotation.x;\n                float _17831 = cos(_17830);\n                float _17835 = sin(_17830);\n                float _17852 = cos(a_startRotation.z);\n                float _17855 = sin(a_startRotation.z);\n                mat4 _17803 = mat4(vec4(_17810, 0.0, -_17813, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(_17813, 0.0, _17810, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * (mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, _17831, _17835, 0.0), vec4(0.0, -_17835, _17831, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * mat4(vec4(_17852, _17855, 0.0, 0.0), vec4(-_17855, _17852, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)));\n                vec4 _8392 = _17803 * vec4(_35741.x ? vec4(0.0, 0.0, 1.0, 0.0).x : vec4(0.0, 0.0, -1.0, 0.0).x, _35741.y ? vec4(0.0, 0.0, 1.0, 0.0).y : vec4(0.0, 0.0, -1.0, 0.0).y, _35741.z ? vec4(0.0, 0.0, 1.0, 0.0).z : vec4(0.0, 0.0, -1.0, 0.0).z, _35741.w ? vec4(0.0, 0.0, 1.0, 0.0).w : vec4(0.0, 0.0, -1.0, 0.0).w);\n                float _17870 = _8392.x;\n                float _17873 = _8392.y;\n                float _17877 = _8392.z;\n                float _17880 = sqrt((pow(_17870, 2.0) + pow(_17873, 2.0)) + pow(_17877, 2.0));\n                float _17884 = _17870 / _17880;\n                float _17888 = _17873 / _17880;\n                float _17892 = _17877 / _17880;\n                float _17911 = cos(_24971.z);\n                float _17913 = sin(_24971.z);\n                float _17922 = _17884 * _17884;\n                float _17926 = 1.0 - _17922;\n                float _17932 = _17884 * _17888;\n                float _17934 = 1.0 - _17911;\n                float _17935 = _17932 * _17934;\n                float _17938 = _17892 * _17913;\n                float _17942 = _17884 * _17892;\n                float _17945 = _17942 * _17934;\n                float _17948 = _17888 * _17913;\n                float _17962 = _17888 * _17888;\n                float _17966 = 1.0 - _17962;\n                float _17972 = _17888 * _17892;\n                float _17975 = _17972 * _17934;\n                float _17978 = _17884 * _17913;\n                float _18002 = _17892 * _17892;\n                float _18006 = 1.0 - _18002;\n                mat4 _24978 = mat4(vec4(0.0), vec4(0.0), vec4(0.0), vec4(0.0));\n                if (_8386)\n                {\n                    float _8408 = (-1.0) * _24971.z;\n                    float _18041 = cos(_8408);\n                    float _18043 = sin(_8408);\n                    float _18064 = 1.0 - _18041;\n                    float _18065 = _17932 * _18064;\n                    float _18068 = _17892 * _18043;\n                    float _18075 = _17942 * _18064;\n                    float _18078 = _17888 * _18043;\n                    float _18105 = _17972 * _18064;\n                    float _18108 = _17884 * _18043;\n                    _24978 = mat4(vec4(_17922 + (_17926 * _18041), _18065 + _18068, _18075 - _18078, 0.0), vec4(_18065 - _18068, _17962 + (_17966 * _18041), _18105 + _18108, 0.0), vec4(_18075 + _18078, _18105 - _18108, _18002 + (_18006 * _18041), 0.0), vec4(0.0, 0.0, 0.0, 1.0));\n                }\n                else\n                {\n                    _24978 = mat4(vec4(_17922 + (_17926 * _17911), _17935 + _17938, _17945 - _17948, 0.0), vec4(_17935 - _17938, _17962 + (_17966 * _17911), _17975 + _17978, 0.0), vec4(_17945 + _17948, _17975 - _17978, _18002 + (_18006 * _17911), 0.0), vec4(0.0, 0.0, 0.0, 1.0));\n                }\n                float _18173 = cos(_24971.y);\n                float _18176 = sin(_24971.y);\n                float _18193 = -_24971.x;\n                float _18194 = cos(_18193);\n                float _18198 = sin(_18193);\n                _25011 = (mat4(vec4(_18173, 0.0, -_18176, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(_18176, 0.0, _18173, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * (mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, _18194, _18198, 0.0), vec4(0.0, -_18198, _18194, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(-0.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)))) * (_24978 * (_17803 * _8355));\n            }\n            else\n            {\n                vec4 _25012 = vec4(0.0);\n                if (u_common[1].w == 1.0)\n                {\n                    vec4 _25013 = vec4(0.0);\n                    if (u_emitterShape == 1.0)\n                    {\n                        float _8445 = (-1.0) * a_startRotation.y;\n                        float _8448 = (-1.0) * a_startRotation.z;\n                        float _18323 = cos(_8445);\n                        float _18326 = sin(_8445);\n                        float _18344 = cos(a_startRotation.x);\n                        float _18348 = sin(a_startRotation.x);\n                        float _18365 = cos(_8448);\n                        float _18368 = sin(_8448);\n                        mat4 _18316 = mat4(vec4(_18323, 0.0, -_18326, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(_18326, 0.0, _18323, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * (mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, _18344, _18348, 0.0), vec4(0.0, -_18348, _18344, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * mat4(vec4(_18365, _18368, 0.0, 0.0), vec4(-_18368, _18365, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)));\n                        vec4 _8453 = _18316 * vec4(0.0, 0.0, -1.0, 0.0);\n                        float _18383 = _8453.x;\n                        float _18386 = _8453.y;\n                        float _18390 = _8453.z;\n                        float _18393 = sqrt((pow(_18383, 2.0) + pow(_18386, 2.0)) + pow(_18390, 2.0));\n                        float _18397 = _18383 / _18393;\n                        float _18401 = _18386 / _18393;\n                        float _18405 = _18390 / _18393;\n                        float _8457 = (-1.0) * _24971.z;\n                        float _18424 = cos(_8457);\n                        float _18426 = sin(_8457);\n                        float _18435 = _18397 * _18397;\n                        float _18447 = 1.0 - _18424;\n                        float _18448 = (_18397 * _18401) * _18447;\n                        float _18451 = _18405 * _18426;\n                        float _18458 = (_18397 * _18405) * _18447;\n                        float _18461 = _18401 * _18426;\n                        float _18475 = _18401 * _18401;\n                        float _18488 = (_18401 * _18405) * _18447;\n                        float _18491 = _18397 * _18426;\n                        float _18515 = _18405 * _18405;\n                        float _18556 = cos(_24971.y);\n                        float _18559 = sin(_24971.y);\n                        float _18576 = -_24971.x;\n                        float _18577 = cos(_18576);\n                        float _18581 = sin(_18576);\n                        _25013 = (mat4(vec4(_18556, 0.0, -_18559, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(_18559, 0.0, _18556, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * (mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, _18577, _18581, 0.0), vec4(0.0, -_18581, _18577, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(-0.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)))) * (mat4(vec4(_18435 + ((1.0 - _18435) * _18424), _18448 + _18451, _18458 - _18461, 0.0), vec4(_18448 - _18451, _18475 + ((1.0 - _18475) * _18424), _18488 + _18491, 0.0), vec4(_18458 + _18461, _18488 - _18491, _18515 + ((1.0 - _18515) * _18424), 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * (_18316 * _8355));\n                    }\n                    else\n                    {\n                        float _8475 = (-1.0) * a_startRotation.y;\n                        float _8478 = (-1.0) * a_startRotation.z;\n                        float _18706 = cos(_8475);\n                        float _18709 = sin(_8475);\n                        float _18727 = cos(a_startRotation.x);\n                        float _18731 = sin(a_startRotation.x);\n                        float _18748 = cos(_8478);\n                        float _18751 = sin(_8478);\n                        mat4 _18699 = mat4(vec4(_18706, 0.0, -_18709, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(_18709, 0.0, _18706, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * (mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, _18727, _18731, 0.0), vec4(0.0, -_18731, _18727, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * mat4(vec4(_18748, _18751, 0.0, 0.0), vec4(-_18751, _18748, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)));\n                        vec4 _8483 = _18699 * vec4(0.0, 0.0, -1.0, 0.0);\n                        float _18766 = _8483.x;\n                        float _18769 = _8483.y;\n                        float _18773 = _8483.z;\n                        float _18776 = sqrt((pow(_18766, 2.0) + pow(_18769, 2.0)) + pow(_18773, 2.0));\n                        float _18780 = _18766 / _18776;\n                        float _18784 = _18769 / _18776;\n                        float _18788 = _18773 / _18776;\n                        float _18807 = cos(_24971.z);\n                        float _18809 = sin(_24971.z);\n                        float _18818 = _18780 * _18780;\n                        float _18830 = 1.0 - _18807;\n                        float _18831 = (_18780 * _18784) * _18830;\n                        float _18834 = _18788 * _18809;\n                        float _18841 = (_18780 * _18788) * _18830;\n                        float _18844 = _18784 * _18809;\n                        float _18858 = _18784 * _18784;\n                        float _18871 = (_18784 * _18788) * _18830;\n                        float _18874 = _18780 * _18809;\n                        float _18898 = _18788 * _18788;\n                        float _18939 = cos(_24971.y);\n                        float _18942 = sin(_24971.y);\n                        float _18959 = -_24971.x;\n                        float _18960 = cos(_18959);\n                        float _18964 = sin(_18959);\n                        _25013 = (mat4(vec4(_18939, 0.0, -_18942, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(_18942, 0.0, _18939, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * (mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, _18960, _18964, 0.0), vec4(0.0, -_18964, _18960, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(-0.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)))) * (mat4(vec4(_18818 + ((1.0 - _18818) * _18807), _18831 + _18834, _18841 - _18844, 0.0), vec4(_18831 - _18834, _18858 + ((1.0 - _18858) * _18807), _18871 + _18874, 0.0), vec4(_18841 + _18844, _18871 - _18874, _18898 + ((1.0 - _18898) * _18807), 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * (_18699 * _8355));\n                    }\n                    _25012 = _25013;\n                }\n                else\n                {\n                    vec4 _25014 = vec4(0.0);\n                    if (u_emitterShape == 1.0)\n                    {\n                        float _8509 = (-1.0) * a_startRotation.y;\n                        float _8512 = (-1.0) * a_startRotation.z;\n                        float _19089 = cos(_8509);\n                        float _19092 = sin(_8509);\n                        float _19110 = cos(a_startRotation.x);\n                        float _19114 = sin(a_startRotation.x);\n                        float _19131 = cos(_8512);\n                        float _19134 = sin(_8512);\n                        mat4 _19082 = mat4(vec4(_19089, 0.0, -_19092, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(_19092, 0.0, _19089, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * (mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, _19110, _19114, 0.0), vec4(0.0, -_19114, _19110, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * mat4(vec4(_19131, _19134, 0.0, 0.0), vec4(-_19134, _19131, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)));\n                        vec4 _8517 = _19082 * vec4(0.0, 0.0, 1.0, 0.0);\n                        float _19149 = _8517.x;\n                        float _19152 = _8517.y;\n                        float _19156 = _8517.z;\n                        float _19159 = sqrt((pow(_19149, 2.0) + pow(_19152, 2.0)) + pow(_19156, 2.0));\n                        float _19163 = _19149 / _19159;\n                        float _19167 = _19152 / _19159;\n                        float _19171 = _19156 / _19159;\n                        float _8521 = (-1.0) * _24971.z;\n                        float _19190 = cos(_8521);\n                        float _19192 = sin(_8521);\n                        float _19201 = _19163 * _19163;\n                        float _19213 = 1.0 - _19190;\n                        float _19214 = (_19163 * _19167) * _19213;\n                        float _19217 = _19171 * _19192;\n                        float _19224 = (_19163 * _19171) * _19213;\n                        float _19227 = _19167 * _19192;\n                        float _19241 = _19167 * _19167;\n                        float _19254 = (_19167 * _19171) * _19213;\n                        float _19257 = _19163 * _19192;\n                        float _19281 = _19171 * _19171;\n                        float _19322 = cos(_24971.y);\n                        float _19325 = sin(_24971.y);\n                        float _19342 = -_24971.x;\n                        float _19343 = cos(_19342);\n                        float _19347 = sin(_19342);\n                        _25014 = (mat4(vec4(_19322, 0.0, -_19325, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(_19325, 0.0, _19322, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * (mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, _19343, _19347, 0.0), vec4(0.0, -_19347, _19343, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(-0.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)))) * (mat4(vec4(_19201 + ((1.0 - _19201) * _19190), _19214 + _19217, _19224 - _19227, 0.0), vec4(_19214 - _19217, _19241 + ((1.0 - _19241) * _19190), _19254 + _19257, 0.0), vec4(_19224 + _19227, _19254 - _19257, _19281 + ((1.0 - _19281) * _19190), 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * (_19082 * _8355));\n                    }\n                    else\n                    {\n                        float _8539 = (-1.0) * a_startRotation.y;\n                        float _8542 = (-1.0) * a_startRotation.z;\n                        float _19472 = cos(_8539);\n                        float _19475 = sin(_8539);\n                        float _19493 = cos(a_startRotation.x);\n                        float _19497 = sin(a_startRotation.x);\n                        float _19514 = cos(_8542);\n                        float _19517 = sin(_8542);\n                        mat4 _19465 = mat4(vec4(_19472, 0.0, -_19475, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(_19475, 0.0, _19472, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * (mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, _19493, _19497, 0.0), vec4(0.0, -_19497, _19493, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * mat4(vec4(_19514, _19517, 0.0, 0.0), vec4(-_19517, _19514, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)));\n                        vec4 _8547 = _19465 * vec4(0.0, 0.0, -1.0, 0.0);\n                        float _19532 = _8547.x;\n                        float _19535 = _8547.y;\n                        float _19539 = _8547.z;\n                        float _19542 = sqrt((pow(_19532, 2.0) + pow(_19535, 2.0)) + pow(_19539, 2.0));\n                        float _19546 = _19532 / _19542;\n                        float _19550 = _19535 / _19542;\n                        float _19554 = _19539 / _19542;\n                        float _19573 = cos(_24971.z);\n                        float _19575 = sin(_24971.z);\n                        float _19584 = _19546 * _19546;\n                        float _19596 = 1.0 - _19573;\n                        float _19597 = (_19546 * _19550) * _19596;\n                        float _19600 = _19554 * _19575;\n                        float _19607 = (_19546 * _19554) * _19596;\n                        float _19610 = _19550 * _19575;\n                        float _19624 = _19550 * _19550;\n                        float _19637 = (_19550 * _19554) * _19596;\n                        float _19640 = _19546 * _19575;\n                        float _19664 = _19554 * _19554;\n                        float _19705 = cos(_24971.y);\n                        float _19708 = sin(_24971.y);\n                        float _19725 = -_24971.x;\n                        float _19726 = cos(_19725);\n                        float _19730 = sin(_19725);\n                        _25014 = (mat4(vec4(_19705, 0.0, -_19708, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(_19708, 0.0, _19705, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * (mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, _19726, _19730, 0.0), vec4(0.0, -_19730, _19726, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(-0.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)))) * (mat4(vec4(_19584 + ((1.0 - _19584) * _19573), _19597 + _19600, _19607 - _19610, 0.0), vec4(_19597 - _19600, _19624 + ((1.0 - _19624) * _19573), _19637 + _19640, 0.0), vec4(_19607 + _19610, _19637 - _19640, _19664 + ((1.0 - _19664) * _19573), 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * (_19465 * _8355));\n                    }\n                    _25012 = _25014;\n                }\n                _25011 = _25012;\n            }\n            _25010 = _25011;\n        }\n        else\n        {\n            _25010 = _8355;\n        }\n        bool _8568 = u_common[0].y == 1.0;\n        bool _8571 = u_common[0].y == 2.0;\n        mat4 _25015 = mat4(vec4(0.0), vec4(0.0), vec4(0.0), vec4(0.0));\n        if (_8568 || _8571)\n        {\n            vec3 _8579 = vec3(1.0) / (vec3(length(vec3(_23713[0].xyz)), length(vec3(_23713[1].xyz)), length(vec3(_23713[2].xyz))) + vec3(9.9999997473787516355514526367188e-06));\n            _25015 = _23713 * mat4(vec4(_8579.x, 0.0, 0.0, 0.0), vec4(0.0, _8579.y, 0.0, 0.0), vec4(0.0, 0.0, _8579.z, 0.0), vec4(0.0, 0.0, 0.0, 1.0));\n        }\n        else\n        {\n            _25015 = mat4(vec4((1.0 / 0.0)), vec4((1.0 / 0.0)), vec4((1.0 / 0.0)), vec4((1.0 / 0.0)));\n        }\n        mat4 _21709 = mat4(vec4(0.0), vec4(0.0), vec4(0.0), vec4(0.0));\n        _21709[0] = _24989[0];\n        mat4 _21712 = _21709;\n        _21712[1] = _24989[1];\n        mat4 _21715 = _21712;\n        _21715[2] = _24989[2];\n        mat4 _21717 = _21715;\n        _21717[3].w = 1.0;\n        vec4 _25016 = vec4(0.0);\n        if (_8033)\n        {\n            vec4 _25017 = vec4(0.0);\n            if (_8571)\n            {\n                _25017 = (_23713 * vec4(_7314, _22138.yz, 1.0)) + vec4((_21717 * _25010).xyz, 0.0);\n            }\n            else\n            {\n                vec4 _25018 = vec4(0.0);\n                if (_8568)\n                {\n                    mat4 _19902 = mat4(vec4(u_common[1].x, 0.0, 0.0, 0.0), vec4(0.0, u_common[1].y, 0.0, 0.0), vec4(0.0, 0.0, u_common[1].z, 0.0), vec4(0.0, 0.0, 0.0, 1.0));\n                    _25018 = ((_25015 * _19902) * vec4(_7314, _22138.yz, 1.0)) + vec4((_21717 * (_19902 * _25010)).xyz, 0.0);\n                }\n                else\n                {\n                    _25018 = (_23713 * vec4(_7314, _22138.yz, 1.0)) + vec4((_21717 * (_8799 * _25010)).xyz, 0.0);\n                }\n                _25017 = _25018;\n            }\n            _25016 = _25017;\n        }\n        else\n        {\n            vec4 _25019 = vec4(0.0);\n            if (_8571)\n            {\n                _25019 = (_23713 * vec4(_7314, _22138.yz, 1.0)) + vec4((_21717 * _25010).xyz, 0.0);\n            }\n            else\n            {\n                vec4 _25020 = vec4(0.0);\n                if (_8568)\n                {\n                    mat4 _19917 = mat4(vec4(u_common[1].x, 0.0, 0.0, 0.0), vec4(0.0, u_common[1].y, 0.0, 0.0), vec4(0.0, 0.0, u_common[1].z, 0.0), vec4(0.0, 0.0, 0.0, 1.0));\n                    _25020 = ((_25015 * _19917) * vec4(_7314, _22138.yz, 1.0)) + vec4((_19917 * (_21717 * _25010)).xyz, 0.0);\n                }\n                else\n                {\n                    _25020 = (_23713 * vec4(_7314, _22138.yz, 1.0)) + vec4((_8799 * (_21717 * _25010)).xyz, 0.0);\n                }\n                _25019 = _25020;\n            }\n            _25016 = _25019;\n        }\n        float _20096 = fract(sin(a_randomSeed) * 43758.546875);\n        bool _19959 = u_colorAlphaByLife[0].y > 0.0;\n        bool _19962 = u_colorAlphaByLife[0].x > 0.0;\n        vec4 _25914 = vec4(0.0);\n        if (_6642 && (_19959 || _19962))\n        {\n            _25914 = _5859 * mix(texture2D(u_modulesBakedDataTex, vec2(_21773, (u_modulesBakedDataTexInfo[3].x + 0.5) * _6401)) * vec4(0.0039215688593685626983642578125), texture2D(u_modulesBakedDataTex, vec2(_21773, (u_modulesBakedDataTexInfo[3].y + 0.5) * _6401)) * vec4(0.0039215688593685626983642578125), vec4(_20096));\n        }\n        else\n        {\n            vec4 _25915 = vec4(0.0);\n            if (_19959)\n            {\n                bool _20133 = true && (u_colorAlphaByLife[2].x >= _21773);\n                vec4 _26578 = vec4(0.0);\n                if (_20133)\n                {\n                    vec4 _21729 = _25258;\n                    _21729.w = mix(u_colorAlphaByLife[1].y, u_colorAlphaByLife[2].y, (_21773 - u_colorAlphaByLife[1].x) / (u_colorAlphaByLife[2].x - u_colorAlphaByLife[1].x));\n                    _26578 = _21729;\n                }\n                else\n                {\n                    _26578 = _25258;\n                }\n                bool _35747 = _20133 ? false : true;\n                bool _26969 = _35747 && (u_colorAlphaByLife[3].x >= _21773);\n                vec4 _26984 = vec4(0.0);\n                if (_26969)\n                {\n                    vec4 _26981 = _26578;\n                    _26981.w = mix(u_colorAlphaByLife[2].y, u_colorAlphaByLife[3].y, (_21773 - u_colorAlphaByLife[2].x) / (u_colorAlphaByLife[3].x - u_colorAlphaByLife[2].x));\n                    _26984 = _26981;\n                }\n                else\n                {\n                    _26984 = _26578;\n                }\n                vec4 _27013 = vec4(0.0);\n                if ((_26969 ? false : _35747) && (u_colorAlphaByLife[4].x >= _21773))\n                {\n                    vec4 _27010 = _26984;\n                    _27010.w = mix(u_colorAlphaByLife[3].y, u_colorAlphaByLife[4].y, (_21773 - u_colorAlphaByLife[3].x) / (u_colorAlphaByLife[4].x - u_colorAlphaByLife[3].x));\n                    _27013 = _27010;\n                }\n                else\n                {\n                    _27013 = _26984;\n                }\n                bool _20174 = true && (u_colorRGBByLife[1].x >= _21773);\n                vec4 _26579 = vec4(0.0);\n                if (_20174)\n                {\n                    vec3 _20198 = mix(u_colorRGBByLife[0].yzw, u_colorRGBByLife[1].yzw, vec3((_21773 - u_colorRGBByLife[0].x) / (u_colorRGBByLife[1].x - u_colorRGBByLife[0].x)));\n                    _26579 = vec4(_20198.x, _20198.y, _20198.z, _27013.w);\n                }\n                else\n                {\n                    _26579 = _27013;\n                }\n                bool _35749 = _20174 ? false : true;\n                bool _26903 = _35749 && (u_colorRGBByLife[2].x >= _21773);\n                vec4 _26922 = vec4(0.0);\n                if (_26903)\n                {\n                    vec3 _26918 = mix(u_colorRGBByLife[1].yzw, u_colorRGBByLife[2].yzw, vec3((_21773 - u_colorRGBByLife[1].x) / (u_colorRGBByLife[2].x - u_colorRGBByLife[1].x)));\n                    _26922 = vec4(_26918.x, _26918.y, _26918.z, _26579.w);\n                }\n                else\n                {\n                    _26922 = _26579;\n                }\n                vec4 _26955 = vec4(0.0);\n                if ((_26903 ? false : _35749) && (u_colorRGBByLife[3].x >= _21773))\n                {\n                    vec3 _26951 = mix(u_colorRGBByLife[2].yzw, u_colorRGBByLife[3].yzw, vec3((_21773 - u_colorRGBByLife[2].x) / (u_colorRGBByLife[3].x - u_colorRGBByLife[2].x)));\n                    _26955 = vec4(_26951.x, _26951.y, _26951.z, _26922.w);\n                }\n                else\n                {\n                    _26955 = _26922;\n                }\n                bool _20237 = true && (u_colorAlphaByLife[6].x >= _21773);\n                vec4 _26592 = vec4(0.0);\n                if (_20237)\n                {\n                    vec4 _21737 = _25258;\n                    _21737.w = mix(u_colorAlphaByLife[5].y, u_colorAlphaByLife[6].y, (_21773 - u_colorAlphaByLife[5].x) / (u_colorAlphaByLife[6].x - u_colorAlphaByLife[5].x));\n                    _26592 = _21737;\n                }\n                else\n                {\n                    _26592 = _25258;\n                }\n                bool _35751 = _20237 ? false : true;\n                bool _26845 = _35751 && (u_colorAlphaByLife[7].x >= _21773);\n                vec4 _26860 = vec4(0.0);\n                if (_26845)\n                {\n                    vec4 _26857 = _26592;\n                    _26857.w = mix(u_colorAlphaByLife[6].y, u_colorAlphaByLife[7].y, (_21773 - u_colorAlphaByLife[6].x) / (u_colorAlphaByLife[7].x - u_colorAlphaByLife[6].x));\n                    _26860 = _26857;\n                }\n                else\n                {\n                    _26860 = _26592;\n                }\n                vec4 _26889 = vec4(0.0);\n                if ((_26845 ? false : _35751) && (u_colorAlphaByLife[8].x >= _21773))\n                {\n                    vec4 _26886 = _26860;\n                    _26886.w = mix(u_colorAlphaByLife[7].y, u_colorAlphaByLife[8].y, (_21773 - u_colorAlphaByLife[7].x) / (u_colorAlphaByLife[8].x - u_colorAlphaByLife[7].x));\n                    _26889 = _26886;\n                }\n                else\n                {\n                    _26889 = _26860;\n                }\n                bool _20278 = true && (u_colorRGBByLife[5].x >= _21773);\n                vec4 _26593 = vec4(0.0);\n                if (_20278)\n                {\n                    vec3 _20302 = mix(u_colorRGBByLife[4].yzw, u_colorRGBByLife[5].yzw, vec3((_21773 - u_colorRGBByLife[4].x) / (u_colorRGBByLife[5].x - u_colorRGBByLife[4].x)));\n                    _26593 = vec4(_20302.x, _20302.y, _20302.z, _26889.w);\n                }\n                else\n                {\n                    _26593 = _26889;\n                }\n                bool _35753 = _20278 ? false : true;\n                bool _26779 = _35753 && (u_colorRGBByLife[6].x >= _21773);\n                vec4 _26798 = vec4(0.0);\n                if (_26779)\n                {\n                    vec3 _26794 = mix(u_colorRGBByLife[5].yzw, u_colorRGBByLife[6].yzw, vec3((_21773 - u_colorRGBByLife[5].x) / (u_colorRGBByLife[6].x - u_colorRGBByLife[5].x)));\n                    _26798 = vec4(_26794.x, _26794.y, _26794.z, _26593.w);\n                }\n                else\n                {\n                    _26798 = _26593;\n                }\n                vec4 _26831 = vec4(0.0);\n                if ((_26779 ? false : _35753) && (u_colorRGBByLife[7].x >= _21773))\n                {\n                    vec3 _26827 = mix(u_colorRGBByLife[6].yzw, u_colorRGBByLife[7].yzw, vec3((_21773 - u_colorRGBByLife[6].x) / (u_colorRGBByLife[7].x - u_colorRGBByLife[6].x)));\n                    _26831 = vec4(_26827.x, _26827.y, _26827.z, _26798.w);\n                }\n                else\n                {\n                    _26831 = _26798;\n                }\n                _25915 = _5859 * mix(_26955, _26831, vec4(_20096));\n            }\n            else\n            {\n                vec4 _25916 = vec4(0.0);\n                if (_19962)\n                {\n                    bool _20341 = true && (u_colorAlphaByLife[2].x >= _21773);\n                    vec4 _26562 = vec4(0.0);\n                    if (_20341)\n                    {\n                        vec4 _21745 = _25258;\n                        _21745.w = mix(u_colorAlphaByLife[1].y, u_colorAlphaByLife[2].y, (_21773 - u_colorAlphaByLife[1].x) / (u_colorAlphaByLife[2].x - u_colorAlphaByLife[1].x));\n                        _26562 = _21745;\n                    }\n                    else\n                    {\n                        _26562 = _25258;\n                    }\n                    bool _35743 = _20341 ? false : true;\n                    bool _27159 = _35743 && (u_colorAlphaByLife[3].x >= _21773);\n                    vec4 _27174 = vec4(0.0);\n                    if (_27159)\n                    {\n                        vec4 _27171 = _26562;\n                        _27171.w = mix(u_colorAlphaByLife[2].y, u_colorAlphaByLife[3].y, (_21773 - u_colorAlphaByLife[2].x) / (u_colorAlphaByLife[3].x - u_colorAlphaByLife[2].x));\n                        _27174 = _27171;\n                    }\n                    else\n                    {\n                        _27174 = _26562;\n                    }\n                    vec4 _27203 = vec4(0.0);\n                    if ((_27159 ? false : _35743) && (u_colorAlphaByLife[4].x >= _21773))\n                    {\n                        vec4 _27200 = _27174;\n                        _27200.w = mix(u_colorAlphaByLife[3].y, u_colorAlphaByLife[4].y, (_21773 - u_colorAlphaByLife[3].x) / (u_colorAlphaByLife[4].x - u_colorAlphaByLife[3].x));\n                        _27203 = _27200;\n                    }\n                    else\n                    {\n                        _27203 = _27174;\n                    }\n                    bool _20382 = true && (u_colorRGBByLife[1].x >= _21773);\n                    vec4 _26563 = vec4(0.0);\n                    if (_20382)\n                    {\n                        vec3 _20406 = mix(u_colorRGBByLife[0].yzw, u_colorRGBByLife[1].yzw, vec3((_21773 - u_colorRGBByLife[0].x) / (u_colorRGBByLife[1].x - u_colorRGBByLife[0].x)));\n                        _26563 = vec4(_20406.x, _20406.y, _20406.z, _27203.w);\n                    }\n                    else\n                    {\n                        _26563 = _27203;\n                    }\n                    bool _35745 = _20382 ? false : true;\n                    bool _27093 = _35745 && (u_colorRGBByLife[2].x >= _21773);\n                    vec4 _27112 = vec4(0.0);\n                    if (_27093)\n                    {\n                        vec3 _27108 = mix(u_colorRGBByLife[1].yzw, u_colorRGBByLife[2].yzw, vec3((_21773 - u_colorRGBByLife[1].x) / (u_colorRGBByLife[2].x - u_colorRGBByLife[1].x)));\n                        _27112 = vec4(_27108.x, _27108.y, _27108.z, _26563.w);\n                    }\n                    else\n                    {\n                        _27112 = _26563;\n                    }\n                    vec4 _27145 = vec4(0.0);\n                    if ((_27093 ? false : _35745) && (u_colorRGBByLife[3].x >= _21773))\n                    {\n                        vec3 _27141 = mix(u_colorRGBByLife[2].yzw, u_colorRGBByLife[3].yzw, vec3((_21773 - u_colorRGBByLife[2].x) / (u_colorRGBByLife[3].x - u_colorRGBByLife[2].x)));\n                        _27145 = vec4(_27141.x, _27141.y, _27141.z, _27112.w);\n                    }\n                    else\n                    {\n                        _27145 = _27112;\n                    }\n                    _25916 = _5859 * _27145;\n                }\n                else\n                {\n                    _25916 = _5859;\n                }\n                _25915 = _25916;\n            }\n            _25914 = _25915;\n        }\n        vec2 _26160 = vec2(0.0);\n        if (u_textureSheetAnimation[0].x > 0.0)\n        {\n            float _20617 = fract(sin(a_randomSeed + 0.5) * 43758.546875);\n            float _35755 = (_21773 >= 1.0) ? 0.9900000095367431640625 : (_21773 - floor(_21773));\n            float _26152 = 0.0;\n            if (_6641 && (u_modulesBakedDataTexInfo[4].x >= 0.0))\n            {\n                vec4 _20482 = texture2D(u_modulesBakedDataTex, vec2(_35755, (u_modulesBakedDataTexInfo[4].x + 0.5) * _6401));\n                _26152 = floor(mix(u_textureSheetAnimation[1].x * _20482.x, u_textureSheetAnimation[1].x * _20482.y, _20617));\n            }\n            else\n            {\n                float _20515 = 1.0 - _20617;\n                float _26712 = u_textureSheetAnimation[1].x * ((_20617 * u_textureSheetAnimation[4].y) + (_20515 * u_textureSheetAnimation[4].z));\n                float _26738 = u_textureSheetAnimation[1].x * ((_20617 * u_textureSheetAnimation[5].y) + (_20515 * u_textureSheetAnimation[5].z));\n                bool _20642 = true && (u_textureSheetAnimation[4].x >= _35755);\n                float _26612 = 0.0;\n                if (_20642)\n                {\n                    _26612 = mix(u_textureSheetAnimation[1].x * ((_20617 * u_textureSheetAnimation[3].y) + (_20515 * u_textureSheetAnimation[3].z)), _26712, (_35755 - u_textureSheetAnimation[3].x) / (u_textureSheetAnimation[4].x - u_textureSheetAnimation[3].x));\n                }\n                else\n                {\n                    _26612 = 0.0;\n                }\n                bool _35756 = _20642 ? false : true;\n                bool _26645 = _35756 && (u_textureSheetAnimation[5].x >= _35755);\n                float _26659 = 0.0;\n                if (_26645)\n                {\n                    _26659 = mix(_26712, _26738, (_35755 - u_textureSheetAnimation[4].x) / (u_textureSheetAnimation[5].x - u_textureSheetAnimation[4].x));\n                }\n                else\n                {\n                    _26659 = _26612;\n                }\n                float _26687 = 0.0;\n                if ((_26645 ? false : _35756) && (u_textureSheetAnimation[6].x >= _35755))\n                {\n                    _26687 = mix(_26738, u_textureSheetAnimation[1].x * ((_20617 * u_textureSheetAnimation[6].y) + (_20515 * u_textureSheetAnimation[6].z)), (_35755 - u_textureSheetAnimation[5].x) / (u_textureSheetAnimation[6].x - u_textureSheetAnimation[5].x));\n                }\n                else\n                {\n                    _26687 = _26659;\n                }\n                _26152 = floor(_26687);\n            }\n            vec2 _26161 = vec2(0.0);\n            if (u_textureSheetAnimation[0].y < 2.0)\n            {\n                float _20553 = floor(mod(u_textureSheetAnimation[0].z + _26152, u_textureSheetAnimation[1].y * u_textureSheetAnimation[1].z));\n                vec2 _21756 = _35652;\n                _21756.x = (a_texCoord.x + mod(_20553, u_textureSheetAnimation[1].y)) / u_textureSheetAnimation[1].y;\n                vec2 _21759 = _21756;\n                _21759.y = (a_texCoord.y + floor((_20553 / u_textureSheetAnimation[1].y) + 0.100000001490116119384765625)) / u_textureSheetAnimation[1].z;\n                _26161 = _21759;\n            }\n            else\n            {\n                float _26159 = 0.0;\n                if (u_textureSheetAnimation[2].x > 0.0)\n                {\n                    _26159 = floor(a_randomSeed * u_textureSheetAnimation[1].z);\n                }\n                else\n                {\n                    _26159 = clamp(u_textureSheetAnimation[2].y, 0.0, u_textureSheetAnimation[1].z - 1.0);\n                }\n                vec2 _21762 = _35652;\n                _21762.x = (a_texCoord.x + mod(_26152, u_textureSheetAnimation[1].y)) / u_textureSheetAnimation[1].y;\n                vec2 _21765 = _21762;\n                _21765.y = (a_texCoord.y + _26159) / u_textureSheetAnimation[1].z;\n                _26161 = _21765;\n            }\n            _26160 = _26161;\n        }\n        else\n        {\n            _26160 = a_texCoord;\n        }\n        _26198 = _25016;\n        _26196 = _26160;\n        _26195 = _25914;\n    }\n    else\n    {\n        _26198 = vec4(1000000.0, 1000000.0, 1000000.0, 1.0);\n        _26196 = vec2(1.0);\n        _26195 = vec4(1.0);\n    }\n    gl_Position = u_projection * (u_view * _26198);\n    varying_TexCoord = (vec2(_26196.x, _26196.y - 1.0) * _MainTex_ST.xy) + vec2(_MainTex_ST.z, 1.0 - _MainTex_ST.w);\n    varying_Color = _26195;\n}\n\n","#version 100\nprecision mediump float;\nprecision highp int;\n\nuniform highp vec4 _TintColor;\nuniform highp vec4 _MainTex_ST;\nuniform highp float _Bright;\n\n\nuniform highp sampler2D _MainTex;\nuniform highp sampler2D _MaskTex;\n\nvarying highp vec2 varying_TexCoord;\nvarying highp vec4 varying_Color;\n\nvoid main()\n{\n    highp vec4 _234 = ((varying_Color * _Bright) * texture2D(_MainTex, varying_TexCoord)) * _TintColor;\n    highp vec4 _264 = _234;\n    _264.w = _234.w * texture2D(_MaskTex, varying_TexCoord).x;\n    gl_FragData[0] = clamp(_264, vec4(0.0), vec4(1.0));\n}\n\n","#version 100\n\nuniform mat4 u_view;\nuniform mat4 u_viewInverse;\nuniform mat4 u_vp;\nuniform mat4 u_projection;\nuniform mat4 u_lightSpaceMatrix;\nuniform vec4 u_fogInfos;\nuniform vec3 u_fogColor;\nuniform float u_gameTime;\nuniform float u_aspect;\nuniform vec3 u_ambientLight;\nuniform vec3 u_lightDir;\nuniform vec3 u_lightColor;\nuniform vec3 u_shadowColor;\nuniform float u_shadowStrength;\nuniform float u_shadowBias;\nuniform float u_lightWidthPCSS;\nuniform float u_blockSizePCSS;\nuniform vec4 u_csmFarBounds;\nuniform vec4 u_shadowTilingOffsets[4];\nuniform mat4 u_csmLightSpaceMatrices[4];\nuniform vec3 u_SH[9];\n\n\nuniform vec3 u_widthByLength[4];\nuniform vec4 u_colorRGBByLength[4];\nuniform vec2 u_colorAlphaByLength[4];\n\n\nuniform vec4 _TintColor;\nuniform vec4 _MainTex_ST;\nuniform float _Bright;\n\n\nattribute vec3 a_position;\nattribute float a_sign;\nattribute vec3 a_prevDir;\nattribute vec3 a_nextDir;\nattribute float a_lengthPercent;\nattribute vec2 a_texCoord;\nattribute vec2 a_endCapInfo;\nattribute vec2 a_cornerInfo;\nvarying vec2 varying_TexCoord;\nvarying vec4 varying_Color;\n\nfloat _1609 = 0.0;\nvec4 _1618 = vec4(0.0);\n\nvoid main()\n{\n    bool _1282 = true && (u_widthByLength[1].x >= a_lengthPercent);\n    float _1628 = 0.0;\n    if (_1282)\n    {\n        _1628 = mix(u_widthByLength[0].y, u_widthByLength[1].y, (a_lengthPercent - u_widthByLength[0].x) / (u_widthByLength[1].x - u_widthByLength[0].x));\n    }\n    else\n    {\n        _1628 = _1609;\n    }\n    bool _1961 = _1282 ? false : true;\n    bool _1809 = _1961 && (u_widthByLength[2].x >= a_lengthPercent);\n    float _1823 = 0.0;\n    if (_1809)\n    {\n        _1823 = mix(u_widthByLength[1].y, u_widthByLength[2].y, (a_lengthPercent - u_widthByLength[1].x) / (u_widthByLength[2].x - u_widthByLength[1].x));\n    }\n    else\n    {\n        _1823 = _1628;\n    }\n    float _1851 = 0.0;\n    if ((_1809 ? false : _1961) && (u_widthByLength[3].x >= a_lengthPercent))\n    {\n        _1851 = mix(u_widthByLength[2].y, u_widthByLength[3].y, (a_lengthPercent - u_widthByLength[2].x) / (u_widthByLength[3].x - u_widthByLength[2].x));\n    }\n    else\n    {\n        _1851 = _1823;\n    }\n    bool _1338 = true && (u_colorAlphaByLength[1].x >= a_lengthPercent);\n    vec4 _1630 = vec4(0.0);\n    if (_1338)\n    {\n        vec4 _1582 = _1618;\n        _1582.w = mix(u_colorAlphaByLength[0].y, u_colorAlphaByLength[1].y, (a_lengthPercent - u_colorAlphaByLength[0].x) / (u_colorAlphaByLength[1].x - u_colorAlphaByLength[0].x));\n        _1630 = _1582;\n    }\n    else\n    {\n        _1630 = _1618;\n    }\n    bool _1963 = _1338 ? false : true;\n    bool _1712 = _1963 && (u_colorAlphaByLength[2].x >= a_lengthPercent);\n    vec4 _1727 = vec4(0.0);\n    if (_1712)\n    {\n        vec4 _1724 = _1630;\n        _1724.w = mix(u_colorAlphaByLength[1].y, u_colorAlphaByLength[2].y, (a_lengthPercent - u_colorAlphaByLength[1].x) / (u_colorAlphaByLength[2].x - u_colorAlphaByLength[1].x));\n        _1727 = _1724;\n    }\n    else\n    {\n        _1727 = _1630;\n    }\n    vec4 _1756 = vec4(0.0);\n    if ((_1712 ? false : _1963) && (u_colorAlphaByLength[3].x >= a_lengthPercent))\n    {\n        vec4 _1753 = _1727;\n        _1753.w = mix(u_colorAlphaByLength[2].y, u_colorAlphaByLength[3].y, (a_lengthPercent - u_colorAlphaByLength[2].x) / (u_colorAlphaByLength[3].x - u_colorAlphaByLength[2].x));\n        _1756 = _1753;\n    }\n    else\n    {\n        _1756 = _1727;\n    }\n    bool _1379 = true && (u_colorRGBByLength[1].x >= a_lengthPercent);\n    vec4 _1631 = vec4(0.0);\n    if (_1379)\n    {\n        vec3 _1403 = mix(u_colorRGBByLength[0].yzw, u_colorRGBByLength[1].yzw, vec3((a_lengthPercent - u_colorRGBByLength[0].x) / (u_colorRGBByLength[1].x - u_colorRGBByLength[0].x)));\n        _1631 = vec4(_1403.x, _1403.y, _1403.z, _1756.w);\n    }\n    else\n    {\n        _1631 = _1756;\n    }\n    bool _1965 = _1379 ? false : true;\n    bool _1646 = _1965 && (u_colorRGBByLength[2].x >= a_lengthPercent);\n    vec4 _1665 = vec4(0.0);\n    if (_1646)\n    {\n        vec3 _1661 = mix(u_colorRGBByLength[1].yzw, u_colorRGBByLength[2].yzw, vec3((a_lengthPercent - u_colorRGBByLength[1].x) / (u_colorRGBByLength[2].x - u_colorRGBByLength[1].x)));\n        _1665 = vec4(_1661.x, _1661.y, _1661.z, _1631.w);\n    }\n    else\n    {\n        _1665 = _1631;\n    }\n    vec4 _1698 = vec4(0.0);\n    if ((_1646 ? false : _1965) && (u_colorRGBByLength[3].x >= a_lengthPercent))\n    {\n        vec3 _1694 = mix(u_colorRGBByLength[2].yzw, u_colorRGBByLength[3].yzw, vec3((a_lengthPercent - u_colorRGBByLength[2].x) / (u_colorRGBByLength[3].x - u_colorRGBByLength[2].x)));\n        _1698 = vec4(_1694.x, _1694.y, _1694.z, _1665.w);\n    }\n    else\n    {\n        _1698 = _1665;\n    }\n    vec3 _1043 = normalize((a_nextDir * inversesqrt(max(9.9999997473787516355514526367188e-06, dot(a_nextDir, a_nextDir)))) + (a_prevDir * inversesqrt(max(9.9999997473787516355514526367188e-06, dot(a_prevDir, a_prevDir)))));\n    vec3 _1056 = normalize(a_position - vec3(u_viewInverse[3].x, u_viewInverse[3].y, u_viewInverse[3].z));\n    vec3 _1061 = normalize(cross(_1056, _1043));\n    mat4 _1586 = mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0));\n    _1586[0] = vec4(_1043, 0.0);\n    mat4 _1588 = _1586;\n    _1588[1] = vec4(_1061, 0.0);\n    mat4 _1590 = _1588;\n    _1590[2] = vec4(normalize(cross(_1043, _1061)), 0.0);\n    vec4 _1620 = vec4(0.0);\n    if (a_cornerInfo.x > 0.0)\n    {\n        vec4 _1091 = vec4(0.0, a_sign, 0.0, 1.0);\n        vec3 _1098 = vec3((_1590 * _1091).xyz);\n        vec3 _1103 = cross(a_prevDir, a_nextDir);\n        vec4 _1621 = vec4(0.0);\n        if (dot(_1098, _1103 * sign(dot(-_1056, _1103))) <= 0.0)\n        {\n            _1621 = vec4(a_position + (normalize(_1098) * _1851), 1.0);\n        }\n        else\n        {\n            float _1133 = a_cornerInfo.y / a_cornerInfo.x;\n            vec3 _1146 = normalize((normalize(a_prevDir) * (1.0 - _1133)) + (normalize(a_nextDir) * _1133));\n            vec3 _1151 = normalize(cross(_1056, _1146));\n            mat4 _1595 = mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0));\n            _1595[0] = vec4(_1146, 0.0);\n            mat4 _1597 = _1595;\n            _1597[1] = vec4(_1151, 0.0);\n            mat4 _1599 = _1597;\n            _1599[2] = vec4(normalize(cross(_1146, _1151)), 0.0);\n            _1621 = vec4(a_position + (normalize(vec3((_1599 * _1091).xyz)) * _1851), 1.0);\n        }\n        _1620 = _1621;\n    }\n    else\n    {\n        vec4 _1619 = vec4(0.0);\n        if (a_endCapInfo.x > 0.0)\n        {\n            float _1207 = (a_endCapInfo.y / (a_endCapInfo.x - 1.0)) * 3.1415927410125732421875;\n            _1619 = vec4((-a_sign) * sin(_1207), cos(_1207), 0.0, 1.0);\n        }\n        else\n        {\n            _1619 = vec4(0.0, a_sign, 0.0, 1.0);\n        }\n        _1620 = vec4(a_position + (normalize(vec3((_1590 * _1619).xyz)) * _1851), 1.0);\n    }\n    gl_Position = u_projection * (u_view * _1620);\n    varying_TexCoord = (vec2(a_texCoord.x, a_texCoord.y - 1.0) * _MainTex_ST.xy) + vec2(_MainTex_ST.z, 1.0 - _MainTex_ST.w);\n    varying_Color = _1698;\n}\n\n","#version 100\nprecision mediump float;\nprecision highp int;\n\nuniform highp vec4 _TintColor;\nuniform highp vec4 _MainTex_ST;\nuniform highp float _Bright;\n\n\nuniform highp sampler2D _MainTex;\nuniform highp sampler2D _MaskTex;\n\nvarying highp vec2 varying_TexCoord;\nvarying highp vec4 varying_Color;\n\nvoid main()\n{\n    highp vec4 _216 = ((varying_Color * _Bright) * texture2D(_MainTex, varying_TexCoord)) * _TintColor;\n    highp vec4 _246 = _216;\n    _246.w = _216.w * texture2D(_MaskTex, varying_TexCoord).x;\n    gl_FragData[0] = clamp(_246, vec4(0.0), vec4(1.0));\n}\n\n","#version 100\n\nuniform mat4 u_view;\nuniform mat4 u_viewInverse;\nuniform mat4 u_vp;\nuniform mat4 u_projection;\nuniform mat4 u_lightSpaceMatrix;\nuniform vec4 u_fogInfos;\nuniform vec3 u_fogColor;\nuniform float u_gameTime;\nuniform float u_aspect;\nuniform vec3 u_ambientLight;\nuniform vec3 u_lightDir;\nuniform vec3 u_lightColor;\nuniform vec3 u_shadowColor;\nuniform float u_shadowStrength;\nuniform float u_shadowBias;\nuniform float u_lightWidthPCSS;\nuniform float u_blockSizePCSS;\nuniform vec4 u_csmFarBounds;\nuniform vec4 u_shadowTilingOffsets[4];\nuniform mat4 u_csmLightSpaceMatrices[4];\nuniform vec3 u_SH[9];\n\n\nuniform vec3 u_widthByLength[4];\nuniform vec4 u_colorRGBByLength[4];\nuniform vec2 u_colorAlphaByLength[4];\n\n\nuniform mat4 u_world;\nuniform vec4 u_lightMapScaleOffset;\nuniform float u_lightCountFA;\nuniform vec4 u_lightPosFA[4];\nuniform vec4 u_lightColorFA[4];\nuniform vec4 u_lightAttenFA[4];\nuniform vec4 u_spotDirFA[4];\n\n\nuniform vec4 _TintColor;\nuniform vec4 _MainTex_ST;\nuniform float _Bright;\n\n\nattribute vec3 a_position;\nattribute float a_sign;\nattribute vec3 a_prevDir;\nattribute vec3 a_nextDir;\nattribute float a_lengthPercent;\nattribute vec2 a_texCoord;\nattribute vec2 a_endCapInfo;\nattribute vec2 a_cornerInfo;\nvarying vec2 varying_TexCoord;\nvarying vec4 varying_Color;\n\nfloat _1351 = 0.0;\nvec4 _1360 = vec4(0.0);\n\nvoid main()\n{\n    bool _1036 = true && (u_widthByLength[1].x >= a_lengthPercent);\n    float _1369 = 0.0;\n    if (_1036)\n    {\n        _1369 = mix(u_widthByLength[0].y, u_widthByLength[1].y, (a_lengthPercent - u_widthByLength[0].x) / (u_widthByLength[1].x - u_widthByLength[0].x));\n    }\n    else\n    {\n        _1369 = _1351;\n    }\n    bool _1702 = _1036 ? false : true;\n    bool _1550 = _1702 && (u_widthByLength[2].x >= a_lengthPercent);\n    float _1564 = 0.0;\n    if (_1550)\n    {\n        _1564 = mix(u_widthByLength[1].y, u_widthByLength[2].y, (a_lengthPercent - u_widthByLength[1].x) / (u_widthByLength[2].x - u_widthByLength[1].x));\n    }\n    else\n    {\n        _1564 = _1369;\n    }\n    float _1592 = 0.0;\n    if ((_1550 ? false : _1702) && (u_widthByLength[3].x >= a_lengthPercent))\n    {\n        _1592 = mix(u_widthByLength[2].y, u_widthByLength[3].y, (a_lengthPercent - u_widthByLength[2].x) / (u_widthByLength[3].x - u_widthByLength[2].x));\n    }\n    else\n    {\n        _1592 = _1564;\n    }\n    bool _1092 = true && (u_colorAlphaByLength[1].x >= a_lengthPercent);\n    vec4 _1371 = vec4(0.0);\n    if (_1092)\n    {\n        vec4 _1336 = _1360;\n        _1336.w = mix(u_colorAlphaByLength[0].y, u_colorAlphaByLength[1].y, (a_lengthPercent - u_colorAlphaByLength[0].x) / (u_colorAlphaByLength[1].x - u_colorAlphaByLength[0].x));\n        _1371 = _1336;\n    }\n    else\n    {\n        _1371 = _1360;\n    }\n    bool _1704 = _1092 ? false : true;\n    bool _1453 = _1704 && (u_colorAlphaByLength[2].x >= a_lengthPercent);\n    vec4 _1468 = vec4(0.0);\n    if (_1453)\n    {\n        vec4 _1465 = _1371;\n        _1465.w = mix(u_colorAlphaByLength[1].y, u_colorAlphaByLength[2].y, (a_lengthPercent - u_colorAlphaByLength[1].x) / (u_colorAlphaByLength[2].x - u_colorAlphaByLength[1].x));\n        _1468 = _1465;\n    }\n    else\n    {\n        _1468 = _1371;\n    }\n    vec4 _1497 = vec4(0.0);\n    if ((_1453 ? false : _1704) && (u_colorAlphaByLength[3].x >= a_lengthPercent))\n    {\n        vec4 _1494 = _1468;\n        _1494.w = mix(u_colorAlphaByLength[2].y, u_colorAlphaByLength[3].y, (a_lengthPercent - u_colorAlphaByLength[2].x) / (u_colorAlphaByLength[3].x - u_colorAlphaByLength[2].x));\n        _1497 = _1494;\n    }\n    else\n    {\n        _1497 = _1468;\n    }\n    bool _1133 = true && (u_colorRGBByLength[1].x >= a_lengthPercent);\n    vec4 _1372 = vec4(0.0);\n    if (_1133)\n    {\n        vec3 _1157 = mix(u_colorRGBByLength[0].yzw, u_colorRGBByLength[1].yzw, vec3((a_lengthPercent - u_colorRGBByLength[0].x) / (u_colorRGBByLength[1].x - u_colorRGBByLength[0].x)));\n        _1372 = vec4(_1157.x, _1157.y, _1157.z, _1497.w);\n    }\n    else\n    {\n        _1372 = _1497;\n    }\n    bool _1706 = _1133 ? false : true;\n    bool _1387 = _1706 && (u_colorRGBByLength[2].x >= a_lengthPercent);\n    vec4 _1406 = vec4(0.0);\n    if (_1387)\n    {\n        vec3 _1402 = mix(u_colorRGBByLength[1].yzw, u_colorRGBByLength[2].yzw, vec3((a_lengthPercent - u_colorRGBByLength[1].x) / (u_colorRGBByLength[2].x - u_colorRGBByLength[1].x)));\n        _1406 = vec4(_1402.x, _1402.y, _1402.z, _1372.w);\n    }\n    else\n    {\n        _1406 = _1372;\n    }\n    vec4 _1439 = vec4(0.0);\n    if ((_1387 ? false : _1706) && (u_colorRGBByLength[3].x >= a_lengthPercent))\n    {\n        vec3 _1435 = mix(u_colorRGBByLength[2].yzw, u_colorRGBByLength[3].yzw, vec3((a_lengthPercent - u_colorRGBByLength[2].x) / (u_colorRGBByLength[3].x - u_colorRGBByLength[2].x)));\n        _1439 = vec4(_1435.x, _1435.y, _1435.z, _1406.w);\n    }\n    else\n    {\n        _1439 = _1406;\n    }\n    vec3 _900 = normalize((a_nextDir * inversesqrt(max(9.9999997473787516355514526367188e-06, dot(a_nextDir, a_nextDir)))) + (a_prevDir * inversesqrt(max(9.9999997473787516355514526367188e-06, dot(a_prevDir, a_prevDir)))));\n    vec4 _1362 = vec4(0.0);\n    if (a_cornerInfo.x > 0.0)\n    {\n        float _909 = a_cornerInfo.y / a_cornerInfo.x;\n        _1362 = vec4(a_position + (normalize(cross(normalize((normalize(a_prevDir) * (1.0 - _909)) + (normalize(a_nextDir) * _909)), vec3(0.0, 0.0, 1.0)) * a_sign) * _1592), 1.0);\n    }\n    else\n    {\n        vec3 _1361 = vec3(0.0);\n        if (a_endCapInfo.x > 0.0)\n        {\n            float _951 = (a_endCapInfo.y / (a_endCapInfo.x - 1.0)) * 3.1415927410125732421875;\n            _1361 = (normalize(cross(_900, vec3(0.0, 0.0, 1.0))) * cos(_951)) + (_900 * ((-a_sign) * sin(_951)));\n        }\n        else\n        {\n            _1361 = cross(_900, vec3(0.0, 0.0, 1.0)) * a_sign;\n        }\n        _1362 = vec4(a_position + (normalize(_1361) * _1592), 1.0);\n    }\n    gl_Position = u_projection * (u_view * (u_world * _1362));\n    varying_TexCoord = (vec2(a_texCoord.x, a_texCoord.y - 1.0) * _MainTex_ST.xy) + vec2(_MainTex_ST.z, 1.0 - _MainTex_ST.w);\n    varying_Color = _1439;\n}\n\n","#version 100\n\nuniform mat4 u_view;\nuniform mat4 u_viewInverse;\nuniform mat4 u_vp;\nuniform mat4 u_projection;\nuniform mat4 u_lightSpaceMatrix;\nuniform vec4 u_fogInfos;\nuniform vec3 u_fogColor;\nuniform float u_gameTime;\nuniform float u_aspect;\nuniform vec3 u_ambientLight;\nuniform vec3 u_lightDir;\nuniform vec3 u_lightColor;\nuniform vec3 u_shadowColor;\nuniform float u_shadowStrength;\nuniform float u_shadowBias;\nuniform float u_lightWidthPCSS;\nuniform float u_blockSizePCSS;\nuniform vec4 u_csmFarBounds;\nuniform vec4 u_shadowTilingOffsets[4];\nuniform mat4 u_csmLightSpaceMatrices[4];\nuniform vec3 u_SH[9];\n\n\nuniform vec3 u_speedByLife[13];\nuniform vec3 u_speedLimitByLife[13];\nuniform vec3 u_rotationByLife[13];\nuniform vec3 u_sizeByLife[13];\nuniform vec4 u_colorRGBByLife[8];\nuniform vec2 u_colorAlphaByLife[9];\nuniform vec3 u_textureSheetAnimation[7];\nuniform vec3 u_noise[22];\nuniform vec4 u_common[2];\nuniform vec3 u_renderer[2];\nuniform float u_emitterShape;\nuniform vec4 u_bakedInfo;\nuniform vec4 u_modulesBakedDataTexInfo[5];\n\n\nuniform mat4 u_world;\nuniform vec4 u_lightMapScaleOffset;\nuniform float u_lightCountFA;\nuniform vec4 u_lightPosFA[4];\nuniform vec4 u_lightColorFA[4];\nuniform vec4 u_lightAttenFA[4];\nuniform vec4 u_spotDirFA[4];\n\n\nuniform vec4 _TintColor;\nuniform vec4 _MainTex_ST;\nuniform float _Bright;\n\n\nuniform highp sampler2D u_modulesBakedDataTex;\nuniform highp sampler2D u_permutationTexForNoise;\n\nattribute vec3 a_subCenter;\nattribute vec3 a_subPosition;\nattribute vec2 a_texCoord;\nattribute vec3 a_startSize;\nattribute vec3 a_startRotation;\nattribute vec4 a_startColor;\nattribute vec3 a_startSpeed;\nattribute float a_startTime;\nattribute float a_startLifeTime;\nattribute float a_randomSeed;\nattribute vec3 a_simulationWorldPos;\nattribute vec4 a_simulationWorldRot;\nvarying vec2 varying_TexCoord;\nvarying vec4 varying_Color;\n\nfloat _21785 = 0.0;\nvec4 _25258 = vec4(0.0);\nvec2 _35652 = vec2(0.0);\nvec4 _35653 = vec4(0.0);\nvec3 _35654 = vec3(0.0);\n\nvoid main()\n{\n    float _5789 = u_gameTime - a_startTime;\n    bool _5794 = u_bakedInfo.x > 0.0;\n    float _21768 = 0.0;\n    if (_5794)\n    {\n        float _5801 = u_bakedInfo.y + a_startTime;\n        float _5804 = (u_gameTime - _5801) / a_startLifeTime;\n        float _21769 = 0.0;\n        if ((_5804 < 0.0) && (u_bakedInfo.z > 0.0))\n        {\n            _21769 = (u_gameTime - (_5801 - u_bakedInfo.w)) / a_startLifeTime;\n        }\n        else\n        {\n            _21769 = _5804;\n        }\n        _21768 = _21769;\n    }\n    else\n    {\n        _21768 = (u_bakedInfo.x < 0.0) ? (-1.0) : (_5789 / a_startLifeTime);\n    }\n    vec4 _26195 = vec4(0.0);\n    vec2 _26196 = vec2(0.0);\n    vec4 _26198 = vec4(0.0);\n    if ((_21768 < 1.0) && (_21768 >= 0.0))\n    {\n        vec4 _5859 = a_startColor * vec4(0.0039215688593685626983642578125);\n        float _5905 = clamp(_5789, 0.0, a_startLifeTime);\n        float _21771 = 0.0;\n        float _21773 = 0.0;\n        if (_5794)\n        {\n            float _5919 = u_bakedInfo.y + a_startTime;\n            float _5920 = u_gameTime - _5919;\n            float _5931 = _5920 / a_startLifeTime;\n            float _21772 = 0.0;\n            float _21774 = 0.0;\n            if ((_5931 < 0.0) && (u_bakedInfo.z > 0.0))\n            {\n                float _5948 = u_gameTime - (_5919 - u_bakedInfo.w);\n                _21774 = _5948 / a_startLifeTime;\n                _21772 = clamp(_5948, 0.0, a_startLifeTime);\n            }\n            else\n            {\n                _21774 = _5931;\n                _21772 = clamp(_5920, 0.0, a_startLifeTime);\n            }\n            _21773 = _21774;\n            _21771 = _21772;\n        }\n        else\n        {\n            _21773 = clamp(_5905 / a_startLifeTime, 0.0, 1.0);\n            _21771 = _5905;\n        }\n        bool _5976 = u_modulesBakedDataTexInfo[0].w == 1.0;\n        float _21775 = 0.0;\n        if (_5976)\n        {\n            _21775 = clamp(((_21771 / u_modulesBakedDataTexInfo[0].z) + 0.5) * (1.0 / u_modulesBakedDataTexInfo[0].x), 0.0, 1.0);\n        }\n        else\n        {\n            _21775 = -1.0;\n        }\n        float _8767 = length(vec3(u_world[0].xyz));\n        float _8774 = length(vec3(u_world[1].xyz));\n        float _8781 = length(vec3(u_world[2].xyz));\n        mat4 _8799 = mat4(vec4(_8767, 0.0, 0.0, 0.0), vec4(0.0, _8774, 0.0, 0.0), vec4(0.0, 0.0, _8781, 0.0), vec4(0.0, 0.0, 0.0, 1.0));\n        mat4 _20947 = mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0));\n        _20947[0] = u_world[0] / vec4(_8767);\n        mat4 _20951 = _20947;\n        _20951[1] = u_world[1] / vec4(_8774);\n        mat4 _20955 = _20951;\n        _20955[2] = u_world[2] / vec4(_8781);\n        mat4 _20957 = _20955;\n        _20957[3].w = 1.0;\n        mat4 _20960 = mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0));\n        _20960[3] = u_world[3];\n        mat4 _20962 = _20960;\n        _20962[3].w = 1.0;\n        mat4 _23713 = mat4(vec4(0.0), vec4(0.0), vec4(0.0), vec4(0.0));\n        mat4 _24211 = mat4(vec4(0.0), vec4(0.0), vec4(0.0), vec4(0.0));\n        mat4 _24398 = mat4(vec4(0.0), vec4(0.0), vec4(0.0), vec4(0.0));\n        if (u_common[0].x == 1.0)\n        {\n            float _8887 = a_simulationWorldRot.x + a_simulationWorldRot.x;\n            float _8892 = a_simulationWorldRot.y + a_simulationWorldRot.y;\n            float _8897 = a_simulationWorldRot.z + a_simulationWorldRot.z;\n            float _8905 = a_simulationWorldRot.y * _8887;\n            float _8909 = a_simulationWorldRot.y * _8892;\n            float _8913 = a_simulationWorldRot.z * _8887;\n            float _8917 = a_simulationWorldRot.z * _8892;\n            float _8921 = a_simulationWorldRot.z * _8897;\n            float _8925 = a_simulationWorldRot.w * _8887;\n            float _8929 = a_simulationWorldRot.w * _8892;\n            float _8933 = a_simulationWorldRot.w * _8897;\n            float _8948 = 1.0 - (a_simulationWorldRot.x * _8887);\n            mat4 _8968 = mat4(vec4((1.0 - _8909) - _8921, _8905 + _8933, _8913 - _8929, 0.0), vec4(_8905 - _8933, _8948 - _8921, _8917 + _8925, 0.0), vec4(_8913 + _8929, _8917 - _8925, _8948 - _8909, 0.0), vec4(0.0, 0.0, 0.0, 1.0));\n            mat4 _20979 = _20962;\n            _20979[3] = vec4(a_simulationWorldPos, 1.0);\n            mat4 _20982 = _8968;\n            _20982[3] = vec4(a_simulationWorldPos.x, a_simulationWorldPos.y, a_simulationWorldPos.z, vec4(0.0, 0.0, 0.0, 1.0).w);\n            _24398 = _8968;\n            _24211 = _20979;\n            _23713 = _20982 * _8799;\n        }\n        else\n        {\n            _24398 = _20957;\n            _24211 = _20962;\n            _23713 = u_world;\n        }\n        float _6401 = 1.0 / u_modulesBakedDataTexInfo[0].y;\n        float _8974 = fract(sin(a_randomSeed + 0.100000001490116119384765625) * 43758.546875);\n        float _8980 = fract(sin(a_randomSeed + 0.20000000298023223876953125) * 43758.546875);\n        float _8986 = fract(sin(a_randomSeed + 0.4000000059604644775390625) * 43758.546875);\n        bool _6416 = u_noise[0].x == 1.0;\n        float _21984 = 0.0;\n        float _22017 = 0.0;\n        float _22050 = 0.0;\n        float _22417 = 0.0;\n        float _22477 = 0.0;\n        float _22536 = 0.0;\n        float _23176 = 0.0;\n        float _23323 = 0.0;\n        if (_6416)\n        {\n            float _6432 = u_noise[2].x * a_startLifeTime;\n            float _6451 = u_noise[6].x * a_startLifeTime;\n            float _6470 = u_noise[10].x * a_startLifeTime;\n            float _6489 = u_noise[14].x * a_startLifeTime;\n            float _6508 = u_noise[18].x * a_startLifeTime;\n            float _29502 = u_noise[3].x * a_startLifeTime;\n            float _29506 = mix(u_noise[3].y, u_noise[3].z, _8974);\n            float _29512 = u_noise[7].x * a_startLifeTime;\n            float _29516 = mix(u_noise[7].y, u_noise[7].z, _8980);\n            float _29522 = u_noise[11].x * a_startLifeTime;\n            float _29526 = mix(u_noise[11].y, u_noise[11].z, _8986);\n            float _29532 = u_noise[15].x * a_startLifeTime;\n            float _29536 = mix(u_noise[15].y, u_noise[15].z, _8986);\n            float _29542 = u_noise[19].x * a_startLifeTime;\n            float _29546 = mix(u_noise[19].y, u_noise[19].z, _8986);\n            float _29559 = u_noise[4].x * a_startLifeTime;\n            float _29563 = mix(u_noise[4].y, u_noise[4].z, _8974);\n            float _29569 = u_noise[8].x * a_startLifeTime;\n            float _29573 = mix(u_noise[8].y, u_noise[8].z, _8980);\n            float _29579 = u_noise[12].x * a_startLifeTime;\n            float _29583 = mix(u_noise[12].y, u_noise[12].z, _8986);\n            float _29589 = u_noise[16].x * a_startLifeTime;\n            float _29593 = mix(u_noise[16].y, u_noise[16].z, _8986);\n            float _29599 = u_noise[20].x * a_startLifeTime;\n            float _29603 = mix(u_noise[20].y, u_noise[20].z, _8986);\n            float _29616 = u_noise[5].x * a_startLifeTime;\n            float _29626 = u_noise[9].x * a_startLifeTime;\n            float _29636 = u_noise[13].x * a_startLifeTime;\n            float _29646 = u_noise[17].x * a_startLifeTime;\n            float _29656 = u_noise[21].x * a_startLifeTime;\n            bool _9020 = _29502 >= _21771;\n            float _26215 = 0.0;\n            if (_9020)\n            {\n                _26215 = mix(mix(u_noise[2].y, u_noise[2].z, _8974), _29506, (_21771 - _6432) / (_29502 - _6432));\n            }\n            else\n            {\n                _26215 = _21785;\n            }\n            bool _35658 = _9020 ? false : true;\n            bool _29458 = false;\n            float _29459 = 0.0;\n            if (_35658)\n            {\n                bool _29442 = _29559 >= _21771;\n                float _29456 = 0.0;\n                if (_29442)\n                {\n                    _29456 = mix(_29506, _29563, (_21771 - _29502) / (_29559 - _29502));\n                }\n                else\n                {\n                    _29456 = _26215;\n                }\n                _29458 = _29442 ? false : _35658;\n                _29459 = _29456;\n            }\n            else\n            {\n                _29458 = _35658;\n                _29459 = _26215;\n            }\n            float _29490 = 0.0;\n            if (_29458)\n            {\n                float _29487 = 0.0;\n                if (_29616 >= _21771)\n                {\n                    _29487 = mix(_29563, mix(u_noise[5].y, u_noise[5].z, _8974), (_21771 - _29559) / (_29616 - _29559));\n                }\n                else\n                {\n                    _29487 = _29459;\n                }\n                _29490 = _29487;\n            }\n            else\n            {\n                _29490 = _29459;\n            }\n            bool _9081 = _29512 >= _21771;\n            float _26219 = 0.0;\n            if (_9081)\n            {\n                _26219 = mix(mix(u_noise[6].y, u_noise[6].z, _8980), _29516, (_21771 - _6451) / (_29512 - _6451));\n            }\n            else\n            {\n                _26219 = _21785;\n            }\n            bool _35660 = _9081 ? false : true;\n            bool _29396 = false;\n            float _29397 = 0.0;\n            if (_35660)\n            {\n                bool _29380 = _29569 >= _21771;\n                float _29394 = 0.0;\n                if (_29380)\n                {\n                    _29394 = mix(_29516, _29573, (_21771 - _29512) / (_29569 - _29512));\n                }\n                else\n                {\n                    _29394 = _26219;\n                }\n                _29396 = _29380 ? false : _35660;\n                _29397 = _29394;\n            }\n            else\n            {\n                _29396 = _35660;\n                _29397 = _26219;\n            }\n            float _29428 = 0.0;\n            if (_29396)\n            {\n                float _29425 = 0.0;\n                if (_29626 >= _21771)\n                {\n                    _29425 = mix(_29573, mix(u_noise[9].y, u_noise[9].z, _8980), (_21771 - _29569) / (_29626 - _29569));\n                }\n                else\n                {\n                    _29425 = _29397;\n                }\n                _29428 = _29425;\n            }\n            else\n            {\n                _29428 = _29397;\n            }\n            bool _9142 = _29522 >= _21771;\n            float _26225 = 0.0;\n            if (_9142)\n            {\n                _26225 = mix(mix(u_noise[10].y, u_noise[10].z, _8986), _29526, (_21771 - _6470) / (_29522 - _6470));\n            }\n            else\n            {\n                _26225 = _21785;\n            }\n            bool _35662 = _9142 ? false : true;\n            bool _29334 = false;\n            float _29335 = 0.0;\n            if (_35662)\n            {\n                bool _29318 = _29579 >= _21771;\n                float _29332 = 0.0;\n                if (_29318)\n                {\n                    _29332 = mix(_29526, _29583, (_21771 - _29522) / (_29579 - _29522));\n                }\n                else\n                {\n                    _29332 = _26225;\n                }\n                _29334 = _29318 ? false : _35662;\n                _29335 = _29332;\n            }\n            else\n            {\n                _29334 = _35662;\n                _29335 = _26225;\n            }\n            float _29366 = 0.0;\n            if (_29334)\n            {\n                float _29363 = 0.0;\n                if (_29636 >= _21771)\n                {\n                    _29363 = mix(_29583, mix(u_noise[13].y, u_noise[13].z, _8986), (_21771 - _29579) / (_29636 - _29579));\n                }\n                else\n                {\n                    _29363 = _29335;\n                }\n                _29366 = _29363;\n            }\n            else\n            {\n                _29366 = _29335;\n            }\n            bool _9203 = _29532 >= _21771;\n            float _26233 = 0.0;\n            if (_9203)\n            {\n                _26233 = mix(mix(u_noise[14].y, u_noise[14].z, _8986), _29536, (_21771 - _6489) / (_29532 - _6489));\n            }\n            else\n            {\n                _26233 = _21785;\n            }\n            bool _35664 = _9203 ? false : true;\n            bool _29272 = false;\n            float _29273 = 0.0;\n            if (_35664)\n            {\n                bool _29256 = _29589 >= _21771;\n                float _29270 = 0.0;\n                if (_29256)\n                {\n                    _29270 = mix(_29536, _29593, (_21771 - _29532) / (_29589 - _29532));\n                }\n                else\n                {\n                    _29270 = _26233;\n                }\n                _29272 = _29256 ? false : _35664;\n                _29273 = _29270;\n            }\n            else\n            {\n                _29272 = _35664;\n                _29273 = _26233;\n            }\n            float _29304 = 0.0;\n            if (_29272)\n            {\n                float _29301 = 0.0;\n                if (_29646 >= _21771)\n                {\n                    _29301 = mix(_29593, mix(u_noise[17].y, u_noise[17].z, _8986), (_21771 - _29589) / (_29646 - _29589));\n                }\n                else\n                {\n                    _29301 = _29273;\n                }\n                _29304 = _29301;\n            }\n            else\n            {\n                _29304 = _29273;\n            }\n            bool _9264 = _29542 >= _21771;\n            float _26243 = 0.0;\n            if (_9264)\n            {\n                _26243 = mix(mix(u_noise[18].y, u_noise[18].z, _8986), _29546, (_21771 - _6508) / (_29542 - _6508));\n            }\n            else\n            {\n                _26243 = _21785;\n            }\n            bool _35666 = _9264 ? false : true;\n            bool _29210 = false;\n            float _29211 = 0.0;\n            if (_35666)\n            {\n                bool _29194 = _29599 >= _21771;\n                float _29208 = 0.0;\n                if (_29194)\n                {\n                    _29208 = mix(_29546, _29603, (_21771 - _29542) / (_29599 - _29542));\n                }\n                else\n                {\n                    _29208 = _26243;\n                }\n                _29210 = _29194 ? false : _35666;\n                _29211 = _29208;\n            }\n            else\n            {\n                _29210 = _35666;\n                _29211 = _26243;\n            }\n            float _29242 = 0.0;\n            if (_29210)\n            {\n                float _29239 = 0.0;\n                if (_29656 >= _21771)\n                {\n                    _29239 = mix(_29603, mix(u_noise[21].y, u_noise[21].z, _8986), (_21771 - _29599) / (_29656 - _29599));\n                }\n                else\n                {\n                    _29239 = _29211;\n                }\n                _29242 = _29239;\n            }\n            else\n            {\n                _29242 = _29211;\n            }\n            float _21985 = 0.0;\n            float _22018 = 0.0;\n            float _22051 = 0.0;\n            if (_5976 && (_21775 >= 0.0))\n            {\n                vec3 _21838 = vec3(0.0);\n                if (u_modulesBakedDataTexInfo[4].y >= 0.0)\n                {\n                    _21838 = texture2D(u_modulesBakedDataTex, vec2(_21775, (u_modulesBakedDataTexInfo[4].y + 0.5) * _6401)).xyz;\n                }\n                else\n                {\n                    _21838 = vec3(0.0);\n                }\n                vec3 _21840 = vec3(0.0);\n                if (u_modulesBakedDataTexInfo[4].z >= 0.0)\n                {\n                    _21840 = texture2D(u_modulesBakedDataTex, vec2(_21775, (u_modulesBakedDataTexInfo[4].z + 0.5) * _6401)).xyz;\n                }\n                else\n                {\n                    _21840 = _21838;\n                }\n                _22051 = mix(_21838.z, _21840.z, _8986);\n                _22018 = mix(_21838.y, _21840.y, _8980);\n                _21985 = mix(_21838.x, _21840.x, _8974);\n            }\n            else\n            {\n                _22051 = 0.0;\n                _22018 = 0.0;\n                _21985 = 0.0;\n            }\n            _23323 = _29304;\n            _23176 = _29242;\n            _22536 = _29366;\n            _22477 = _29428;\n            _22417 = _29490;\n            _22050 = _22051;\n            _22017 = _22018;\n            _21984 = _21985;\n        }\n        else\n        {\n            _23323 = 0.0;\n            _23176 = 0.0;\n            _22536 = 0.0;\n            _22477 = 0.0;\n            _22417 = 0.0;\n            _22050 = 0.0;\n            _22017 = 0.0;\n            _21984 = 0.0;\n        }\n        bool _6641 = _21775 >= 0.0;\n        bool _6642 = _5976 && _6641;\n        vec3 _22128 = vec3(0.0);\n        vec3 _22138 = vec3(0.0);\n        if (_6642 && (u_modulesBakedDataTexInfo[2].x >= 0.0))\n        {\n            float _9297 = fract(sin(a_randomSeed) * 43758.546875);\n            float _6666 = (u_modulesBakedDataTexInfo[2].x + 0.5) * _6401;\n            vec4 _6668 = texture2D(u_modulesBakedDataTex, vec2(_21775, _6666));\n            float _6676 = (u_modulesBakedDataTexInfo[2].y + 0.5) * _6401;\n            vec4 _6678 = texture2D(u_modulesBakedDataTex, vec2(_21775, _6676));\n            float _6686 = (u_modulesBakedDataTexInfo[2].z + 0.5) * _6401;\n            vec4 _6688 = texture2D(u_modulesBakedDataTex, vec2(_21775, _6686));\n            vec4 _6698 = texture2D(u_modulesBakedDataTex, vec2(_21773, _6666));\n            vec4 _6708 = texture2D(u_modulesBakedDataTex, vec2(_21773, _6676));\n            vec4 _6718 = texture2D(u_modulesBakedDataTex, vec2(_21773, _6686));\n            vec3 _21038 = _35654;\n            _21038.x = mix(_6668.z, _6668.w, _9297) + _21984;\n            vec3 _21041 = _21038;\n            _21041.y = mix(_6678.z, _6678.w, _9297) + _22017;\n            vec3 _21044 = _21041;\n            _21044.z = mix(_6688.z, _6688.w, _9297) + _22050;\n            _22138 = a_subCenter + _21044;\n            _22128 = vec3(mix(_6698.x, _6698.y, _9297), mix(_6708.x, _6708.y, _9297), mix(_6718.x, _6718.y, _9297));\n        }\n        else\n        {\n            float _9303 = fract(sin(a_randomSeed) * 43758.546875);\n            float _9309 = fract(sin(a_randomSeed - 0.100000001490116119384765625) * 43758.546875);\n            float _6806 = 0.100000001490116119384765625 * a_startLifeTime;\n            float _6810 = 0.300000011920928955078125 * a_startLifeTime;\n            vec2 _6842 = vec2(0.0, a_startSpeed.x);\n            float _6845 = 0.3300000131130218505859375 * a_startLifeTime;\n            vec2 _6848 = vec2(_6845, a_startSpeed.x);\n            float _6851 = 0.660000026226043701171875 * a_startLifeTime;\n            vec2 _6854 = vec2(_6851, a_startSpeed.x);\n            vec2 _6859 = vec2(a_startLifeTime, a_startSpeed.x);\n            vec2 _6863 = vec2(0.0, a_startSpeed.y);\n            vec2 _6869 = vec2(_6845, a_startSpeed.y);\n            vec2 _6875 = vec2(_6851, a_startSpeed.y);\n            vec2 _6880 = vec2(a_startLifeTime, a_startSpeed.y);\n            vec2 _6884 = vec2(0.0, a_startSpeed.z);\n            vec2 _6890 = vec2(_6845, a_startSpeed.z);\n            vec2 _6896 = vec2(_6851, a_startSpeed.z);\n            vec2 _6901 = vec2(a_startLifeTime, a_startSpeed.z);\n            vec2 _30884 = vec2(0.0);\n            vec2 _30922 = vec2(0.0);\n            vec2 _30923 = vec2(0.0);\n            vec2 _30924 = vec2(0.0);\n            vec2 _30962 = vec2(0.0);\n            vec2 _30963 = vec2(0.0);\n            vec2 _30964 = vec2(0.0);\n            vec2 _31002 = vec2(0.0);\n            vec2 _31003 = vec2(0.0);\n            vec2 _31004 = vec2(0.0);\n            vec2 _31042 = vec2(0.0);\n            vec2 _31043 = vec2(0.0);\n            if (u_speedByLife[0].x > 0.0)\n            {\n                vec2 _30308 = _6842;\n                _30308.x = u_speedByLife[1].x * a_startLifeTime;\n                vec2 _30310 = _30308;\n                _30310.y = mix(u_speedByLife[1].y, u_speedByLife[1].z, _9309) + a_startSpeed.x;\n                vec2 _30312 = _6863;\n                _30312.x = u_speedByLife[5].x * a_startLifeTime;\n                vec2 _30314 = _30312;\n                _30314.y = mix(u_speedByLife[5].y, u_speedByLife[5].z, _8980) + a_startSpeed.y;\n                vec2 _30316 = _6884;\n                _30316.x = u_speedByLife[9].x * a_startLifeTime;\n                vec2 _30318 = _30316;\n                _30318.y = mix(u_speedByLife[9].y, u_speedByLife[9].z, _8986) + a_startSpeed.z;\n                vec2 _30320 = _6848;\n                _30320.x = u_speedByLife[2].x * a_startLifeTime;\n                vec2 _30322 = _30320;\n                _30322.y = mix(u_speedByLife[2].y, u_speedByLife[2].z, _9309) + a_startSpeed.x;\n                vec2 _30324 = _6869;\n                _30324.x = u_speedByLife[6].x * a_startLifeTime;\n                vec2 _30326 = _30324;\n                _30326.y = mix(u_speedByLife[6].y, u_speedByLife[6].z, _8980) + a_startSpeed.y;\n                vec2 _30328 = _6890;\n                _30328.x = u_speedByLife[10].x * a_startLifeTime;\n                vec2 _30330 = _30328;\n                _30330.y = mix(u_speedByLife[10].y, u_speedByLife[10].z, _8986) + a_startSpeed.z;\n                vec2 _30332 = _6854;\n                _30332.x = u_speedByLife[3].x * a_startLifeTime;\n                vec2 _30334 = _30332;\n                _30334.y = mix(u_speedByLife[3].y, u_speedByLife[3].z, _9309) + a_startSpeed.x;\n                vec2 _30336 = _6875;\n                _30336.x = u_speedByLife[7].x * a_startLifeTime;\n                vec2 _30338 = _30336;\n                _30338.y = mix(u_speedByLife[7].y, u_speedByLife[7].z, _8980) + a_startSpeed.y;\n                vec2 _30340 = _6896;\n                _30340.x = u_speedByLife[11].x * a_startLifeTime;\n                vec2 _30342 = _30340;\n                _30342.y = mix(u_speedByLife[11].y, u_speedByLife[11].z, _8986) + a_startSpeed.z;\n                vec2 _30344 = _6859;\n                _30344.x = u_speedByLife[4].x * a_startLifeTime;\n                vec2 _30346 = _30344;\n                _30346.y = mix(u_speedByLife[4].y, u_speedByLife[4].z, _9309) + a_startSpeed.x;\n                vec2 _30348 = _6880;\n                _30348.x = u_speedByLife[8].x * a_startLifeTime;\n                vec2 _30350 = _30348;\n                _30350.y = mix(u_speedByLife[8].y, u_speedByLife[8].z, _8980) + a_startSpeed.y;\n                vec2 _30352 = _6901;\n                _30352.x = u_speedByLife[12].x * a_startLifeTime;\n                vec2 _30354 = _30352;\n                _30354.y = mix(u_speedByLife[12].y, u_speedByLife[12].z, _8986) + a_startSpeed.z;\n                _31043 = _30354;\n                _31042 = _30350;\n                _31004 = _30346;\n                _31003 = _30342;\n                _31002 = _30338;\n                _30964 = _30334;\n                _30963 = _30330;\n                _30962 = _30326;\n                _30924 = _30322;\n                _30923 = _30318;\n                _30922 = _30314;\n                _30884 = _30310;\n            }\n            else\n            {\n                _31043 = _6901;\n                _31042 = _6880;\n                _31004 = _6859;\n                _31003 = _6896;\n                _31002 = _6875;\n                _30964 = _6854;\n                _30963 = _6890;\n                _30962 = _6869;\n                _30924 = _6848;\n                _30923 = _6884;\n                _30922 = _6863;\n                _30884 = _6842;\n            }\n            vec2 _31124 = vec2(0.0);\n            vec2 _31128 = vec2(0.0);\n            vec2 _31132 = vec2(0.0);\n            vec2 _31136 = vec2(0.0);\n            vec2 _31143 = vec2(0.0);\n            vec2 _31151 = vec2(0.0);\n            vec2 _31159 = vec2(0.0);\n            vec2 _31167 = vec2(0.0);\n            vec2 _31178 = vec2(0.0);\n            vec2 _31190 = vec2(0.0);\n            vec2 _31202 = vec2(0.0);\n            vec2 _31214 = vec2(0.0);\n            if (u_speedLimitByLife[0].x > 0.0)\n            {\n                vec2 _31125 = vec2(0.0);\n                vec2 _31129 = vec2(0.0);\n                vec2 _31133 = vec2(0.0);\n                vec2 _31137 = vec2(0.0);\n                vec2 _31144 = vec2(0.0);\n                vec2 _31152 = vec2(0.0);\n                vec2 _31160 = vec2(0.0);\n                vec2 _31168 = vec2(0.0);\n                vec2 _31179 = vec2(0.0);\n                vec2 _31191 = vec2(0.0);\n                vec2 _31203 = vec2(0.0);\n                vec2 _31215 = vec2(0.0);\n                if (u_speedLimitByLife[0].z > 0.0)\n                {\n                    float _9347 = a_startLifeTime * 5.0;\n                    float _9352 = a_startLifeTime * 15.00000095367431640625;\n                    float _9357 = a_startLifeTime * 50.0;\n                    float _9362 = abs(_30884.y);\n                    float _9376 = (((mix(u_speedLimitByLife[1].y, u_speedLimitByLife[1].z, _9309) + mix(u_speedLimitByLife[2].y, u_speedLimitByLife[2].z, _9309)) + mix(u_speedLimitByLife[3].y, u_speedLimitByLife[3].z, _9309)) + mix(u_speedLimitByLife[4].y, u_speedLimitByLife[4].z, _9309)) * 0.25;\n                    vec4 _31073 = vec4(0.0);\n                    if (_9362 > _9376)\n                    {\n                        float _9389 = _9362 - _9376;\n                        float _9391 = 1.0 - u_speedLimitByLife[0].y;\n                        vec4 _30512 = _35653;\n                        _30512.x = (_9376 + (_9389 * pow(_9391, 1.0))) / _9362;\n                        vec4 _30514 = _30512;\n                        _30514.y = (_9376 + (_9389 * pow(_9391, _9347))) / _9362;\n                        vec4 _30516 = _30514;\n                        _30516.z = (_9376 + (_9389 * pow(_9391, _9352))) / _9362;\n                        vec4 _30518 = _30516;\n                        _30518.w = (_9376 + (_9389 * pow(_9391, _9357))) / _9362;\n                        _31073 = _30518;\n                    }\n                    else\n                    {\n                        _31073 = vec4(1.0);\n                    }\n                    vec2 _30521 = _30884;\n                    _30521.x = 0.0;\n                    vec2 _30525 = _30521;\n                    _30525.y = _30884.y * _31073.x;\n                    vec2 _30528 = _30924;\n                    _30528.x = _6806;\n                    vec2 _30532 = _30528;\n                    _30532.y = _30924.y * _31073.y;\n                    vec2 _30535 = _30964;\n                    _30535.x = _6810;\n                    vec2 _30539 = _30535;\n                    _30539.y = _30964.y * _31073.z;\n                    vec2 _30542 = _31004;\n                    _30542.x = a_startLifeTime;\n                    vec2 _30546 = _30542;\n                    _30546.y = _31004.y * _31073.w;\n                    float _9454 = abs(_30922.y);\n                    float _9468 = (((mix(u_speedLimitByLife[5].y, u_speedLimitByLife[5].z, _8980) + mix(u_speedLimitByLife[6].y, u_speedLimitByLife[6].z, _8980)) + mix(u_speedLimitByLife[7].y, u_speedLimitByLife[7].z, _8980)) + mix(u_speedLimitByLife[8].y, u_speedLimitByLife[8].z, _8980)) * 0.25;\n                    vec4 _31090 = vec4(0.0);\n                    if (_9454 > _9468)\n                    {\n                        float _9481 = _9454 - _9468;\n                        float _9483 = 1.0 - u_speedLimitByLife[0].y;\n                        vec4 _30548 = _35653;\n                        _30548.x = (_9468 + (_9481 * pow(_9483, 1.0))) / _9454;\n                        vec4 _30550 = _30548;\n                        _30550.y = (_9468 + (_9481 * pow(_9483, _9347))) / _9454;\n                        vec4 _30552 = _30550;\n                        _30552.z = (_9468 + (_9481 * pow(_9483, _9352))) / _9454;\n                        vec4 _30554 = _30552;\n                        _30554.w = (_9468 + (_9481 * pow(_9483, _9357))) / _9454;\n                        _31090 = _30554;\n                    }\n                    else\n                    {\n                        _31090 = vec4(1.0);\n                    }\n                    vec2 _30557 = _30922;\n                    _30557.x = 0.0;\n                    vec2 _30561 = _30557;\n                    _30561.y = _30922.y * _31090.x;\n                    vec2 _30564 = _30962;\n                    _30564.x = _6806;\n                    vec2 _30568 = _30564;\n                    _30568.y = _30962.y * _31090.y;\n                    vec2 _30571 = _31002;\n                    _30571.x = _6810;\n                    vec2 _30575 = _30571;\n                    _30575.y = _31002.y * _31090.z;\n                    vec2 _30578 = _31042;\n                    _30578.x = a_startLifeTime;\n                    vec2 _30582 = _30578;\n                    _30582.y = _31042.y * _31090.w;\n                    float _9546 = abs(_30923.y);\n                    float _9560 = (((mix(u_speedLimitByLife[9].y, u_speedLimitByLife[9].z, _8986) + mix(u_speedLimitByLife[10].y, u_speedLimitByLife[10].z, _8986)) + mix(u_speedLimitByLife[11].y, u_speedLimitByLife[11].z, _8986)) + mix(u_speedLimitByLife[12].y, u_speedLimitByLife[12].z, _8986)) * 0.25;\n                    vec4 _31115 = vec4(0.0);\n                    if (_9546 > _9560)\n                    {\n                        float _9573 = _9546 - _9560;\n                        float _9575 = 1.0 - u_speedLimitByLife[0].y;\n                        vec4 _30584 = _35653;\n                        _30584.x = (_9560 + (_9573 * pow(_9575, 1.0))) / _9546;\n                        vec4 _30586 = _30584;\n                        _30586.y = (_9560 + (_9573 * pow(_9575, _9347))) / _9546;\n                        vec4 _30588 = _30586;\n                        _30588.z = (_9560 + (_9573 * pow(_9575, _9352))) / _9546;\n                        vec4 _30590 = _30588;\n                        _30590.w = (_9560 + (_9573 * pow(_9575, _9357))) / _9546;\n                        _31115 = _30590;\n                    }\n                    else\n                    {\n                        _31115 = vec4(1.0);\n                    }\n                    vec2 _30593 = _30923;\n                    _30593.x = 0.0;\n                    vec2 _30597 = _30593;\n                    _30597.y = _30923.y * _31115.x;\n                    vec2 _30600 = _30963;\n                    _30600.x = _6806;\n                    vec2 _30604 = _30600;\n                    _30604.y = _30963.y * _31115.y;\n                    vec2 _30607 = _31003;\n                    _30607.x = _6810;\n                    vec2 _30611 = _30607;\n                    _30611.y = _31003.y * _31115.z;\n                    vec2 _30614 = _31043;\n                    _30614.x = a_startLifeTime;\n                    vec2 _30618 = _30614;\n                    _30618.y = _31043.y * _31115.w;\n                    _31215 = _30618;\n                    _31203 = _30611;\n                    _31191 = _30604;\n                    _31179 = _30597;\n                    _31168 = _30582;\n                    _31160 = _30575;\n                    _31152 = _30568;\n                    _31144 = _30561;\n                    _31137 = _30546;\n                    _31133 = _30539;\n                    _31129 = _30532;\n                    _31125 = _30525;\n                }\n                else\n                {\n                    float _9638 = abs(length(vec3(_30884.y, _30922.y, _30923.y)));\n                    float _9652 = (((mix(u_speedLimitByLife[1].y, u_speedLimitByLife[1].z, _9303) + mix(u_speedLimitByLife[2].y, u_speedLimitByLife[2].z, _9303)) + mix(u_speedLimitByLife[3].y, u_speedLimitByLife[3].z, _9303)) + mix(u_speedLimitByLife[4].y, u_speedLimitByLife[4].z, _9303)) * 0.25;\n                    vec4 _31048 = vec4(0.0);\n                    if (_9638 > _9652)\n                    {\n                        float _9665 = _9638 - _9652;\n                        float _9667 = 1.0 - u_speedLimitByLife[0].y;\n                        vec4 _30396 = _35653;\n                        _30396.x = (_9652 + (_9665 * pow(_9667, 1.0))) / _9638;\n                        vec4 _30398 = _30396;\n                        _30398.y = (_9652 + (_9665 * pow(_9667, a_startLifeTime * 5.0))) / _9638;\n                        vec4 _30400 = _30398;\n                        _30400.z = (_9652 + (_9665 * pow(_9667, a_startLifeTime * 15.00000095367431640625))) / _9638;\n                        vec4 _30402 = _30400;\n                        _30402.w = (_9652 + (_9665 * pow(_9667, a_startLifeTime * 50.0))) / _9638;\n                        _31048 = _30402;\n                    }\n                    else\n                    {\n                        _31048 = vec4(1.0);\n                    }\n                    vec2 _30405 = _30884;\n                    _30405.x = 0.0;\n                    vec2 _30409 = _30405;\n                    _30409.y = _30884.y * _31048.x;\n                    vec2 _30412 = _30922;\n                    _30412.x = 0.0;\n                    vec2 _30416 = _30412;\n                    _30416.y = _30922.y * _31048.x;\n                    vec2 _30419 = _30923;\n                    _30419.x = 0.0;\n                    vec2 _30423 = _30419;\n                    _30423.y = _30923.y * _31048.x;\n                    vec2 _30426 = _30924;\n                    _30426.x = _6806;\n                    vec2 _30430 = _30426;\n                    _30430.y = _30924.y * _31048.y;\n                    vec2 _30433 = _30962;\n                    _30433.x = _6806;\n                    vec2 _30437 = _30433;\n                    _30437.y = _30962.y * _31048.y;\n                    vec2 _30440 = _30963;\n                    _30440.x = _6806;\n                    vec2 _30444 = _30440;\n                    _30444.y = _30963.y * _31048.y;\n                    vec2 _30447 = _30964;\n                    _30447.x = _6810;\n                    vec2 _30451 = _30447;\n                    _30451.y = _30964.y * _31048.z;\n                    vec2 _30454 = _31002;\n                    _30454.x = _6810;\n                    vec2 _30458 = _30454;\n                    _30458.y = _31002.y * _31048.z;\n                    vec2 _30461 = _31003;\n                    _30461.x = _6810;\n                    vec2 _30465 = _30461;\n                    _30465.y = _31003.y * _31048.z;\n                    vec2 _30468 = _31004;\n                    _30468.x = a_startLifeTime;\n                    vec2 _30472 = _30468;\n                    _30472.y = _31004.y * _31048.w;\n                    vec2 _30475 = _31042;\n                    _30475.x = a_startLifeTime;\n                    vec2 _30479 = _30475;\n                    _30479.y = _31042.y * _31048.w;\n                    vec2 _30482 = _31043;\n                    _30482.x = a_startLifeTime;\n                    vec2 _30486 = _30482;\n                    _30486.y = _31043.y * _31048.w;\n                    _31215 = _30486;\n                    _31203 = _30465;\n                    _31191 = _30444;\n                    _31179 = _30423;\n                    _31168 = _30479;\n                    _31160 = _30458;\n                    _31152 = _30437;\n                    _31144 = _30416;\n                    _31137 = _30472;\n                    _31133 = _30451;\n                    _31129 = _30430;\n                    _31125 = _30409;\n                }\n                _31214 = _31215;\n                _31202 = _31203;\n                _31190 = _31191;\n                _31178 = _31179;\n                _31167 = _31168;\n                _31159 = _31160;\n                _31151 = _31152;\n                _31143 = _31144;\n                _31136 = _31137;\n                _31132 = _31133;\n                _31128 = _31129;\n                _31124 = _31125;\n            }\n            else\n            {\n                _31214 = _31043;\n                _31202 = _31003;\n                _31190 = _30963;\n                _31178 = _30923;\n                _31167 = _31042;\n                _31159 = _31002;\n                _31151 = _30962;\n                _31143 = _30922;\n                _31136 = _31004;\n                _31132 = _30964;\n                _31128 = _30924;\n                _31124 = _30884;\n            }\n            bool _9723 = _31128.x >= _21771;\n            float _26255 = 0.0;\n            if (_9723)\n            {\n                _26255 = mix(_31124.y, _31128.y, (_21771 - _31124.x) / (_31128.x - _31124.x));\n            }\n            else\n            {\n                _26255 = _21785;\n            }\n            bool _35668 = _9723 ? false : true;\n            bool _28398 = false;\n            float _28399 = 0.0;\n            if (_35668)\n            {\n                bool _28382 = _31132.x >= _21771;\n                float _28396 = 0.0;\n                if (_28382)\n                {\n                    _28396 = mix(_31128.y, _31132.y, (_21771 - _31128.x) / (_31132.x - _31128.x));\n                }\n                else\n                {\n                    _28396 = _26255;\n                }\n                _28398 = _28382 ? false : _35668;\n                _28399 = _28396;\n            }\n            else\n            {\n                _28398 = _35668;\n                _28399 = _26255;\n            }\n            float _28430 = 0.0;\n            if (_28398)\n            {\n                float _28427 = 0.0;\n                if (_31136.x >= _21771)\n                {\n                    _28427 = mix(_31132.y, _31136.y, (_21771 - _31132.x) / (_31136.x - _31132.x));\n                }\n                else\n                {\n                    _28427 = _28399;\n                }\n                _28430 = _28427;\n            }\n            else\n            {\n                _28430 = _28399;\n            }\n            bool _9784 = _31151.x >= _21771;\n            float _26269 = 0.0;\n            if (_9784)\n            {\n                _26269 = mix(_31143.y, _31151.y, (_21771 - _31143.x) / (_31151.x - _31143.x));\n            }\n            else\n            {\n                _26269 = _21785;\n            }\n            bool _35670 = _9784 ? false : true;\n            bool _28336 = false;\n            float _28337 = 0.0;\n            if (_35670)\n            {\n                bool _28320 = _31159.x >= _21771;\n                float _28334 = 0.0;\n                if (_28320)\n                {\n                    _28334 = mix(_31151.y, _31159.y, (_21771 - _31151.x) / (_31159.x - _31151.x));\n                }\n                else\n                {\n                    _28334 = _26269;\n                }\n                _28336 = _28320 ? false : _35670;\n                _28337 = _28334;\n            }\n            else\n            {\n                _28336 = _35670;\n                _28337 = _26269;\n            }\n            float _28368 = 0.0;\n            if (_28336)\n            {\n                float _28365 = 0.0;\n                if (_31167.x >= _21771)\n                {\n                    _28365 = mix(_31159.y, _31167.y, (_21771 - _31159.x) / (_31167.x - _31159.x));\n                }\n                else\n                {\n                    _28365 = _28337;\n                }\n                _28368 = _28365;\n            }\n            else\n            {\n                _28368 = _28337;\n            }\n            bool _9845 = _31190.x >= _21771;\n            float _26285 = 0.0;\n            if (_9845)\n            {\n                _26285 = mix(_31178.y, _31190.y, (_21771 - _31178.x) / (_31190.x - _31178.x));\n            }\n            else\n            {\n                _26285 = _21785;\n            }\n            bool _35672 = _9845 ? false : true;\n            bool _28274 = false;\n            float _28275 = 0.0;\n            if (_35672)\n            {\n                bool _28258 = _31202.x >= _21771;\n                float _28272 = 0.0;\n                if (_28258)\n                {\n                    _28272 = mix(_31190.y, _31202.y, (_21771 - _31190.x) / (_31202.x - _31190.x));\n                }\n                else\n                {\n                    _28272 = _26285;\n                }\n                _28274 = _28258 ? false : _35672;\n                _28275 = _28272;\n            }\n            else\n            {\n                _28274 = _35672;\n                _28275 = _26285;\n            }\n            float _28306 = 0.0;\n            if (_28274)\n            {\n                float _28303 = 0.0;\n                if (_31214.x >= _21771)\n                {\n                    _28303 = mix(_31202.y, _31214.y, (_21771 - _31202.x) / (_31214.x - _31202.x));\n                }\n                else\n                {\n                    _28303 = _28275;\n                }\n                _28306 = _28303;\n            }\n            else\n            {\n                _28306 = _28275;\n            }\n            float _26287 = 0.0;\n            if (_9723)\n            {\n                float _9919 = _21771 - _31124.x;\n                _26287 = ((_31124.y + mix(_31124.y, _31128.y, _9919 / (_31128.x - _31124.x))) * 0.5) * _9919;\n            }\n            else\n            {\n                _26287 = ((_31124.y + _31128.y) * 0.5) * (_31128.x - _31124.x);\n            }\n            bool _28199 = false;\n            float _28200 = 0.0;\n            if (_35668)\n            {\n                bool _28174 = _31132.x >= _21771;\n                float _28197 = 0.0;\n                if (_28174)\n                {\n                    float _28185 = _21771 - _31128.x;\n                    _28197 = _26287 + (((_31128.y + mix(_31128.y, _31132.y, _28185 / (_31132.x - _31128.x))) * 0.5) * _28185);\n                }\n                else\n                {\n                    _28197 = _26287 + (((_31128.y + _31132.y) * 0.5) * (_31132.x - _31128.x));\n                }\n                _28199 = _28174 ? false : _35668;\n                _28200 = _28197;\n            }\n            else\n            {\n                _28199 = _35668;\n                _28200 = _26287;\n            }\n            float _28244 = 0.0;\n            if (_28199)\n            {\n                float _28241 = 0.0;\n                if (_31136.x >= _21771)\n                {\n                    float _28229 = _21771 - _31132.x;\n                    _28241 = _28200 + (((_31132.y + mix(_31132.y, _31136.y, _28229 / (_31136.x - _31132.x))) * 0.5) * _28229);\n                }\n                else\n                {\n                    _28241 = _28200 + (((_31132.y + _31136.y) * 0.5) * (_31136.x - _31132.x));\n                }\n                _28244 = _28241;\n            }\n            else\n            {\n                _28244 = _28200;\n            }\n            float _26289 = 0.0;\n            if (_9784)\n            {\n                float _10004 = _21771 - _31143.x;\n                _26289 = ((_31143.y + mix(_31143.y, _31151.y, _10004 / (_31151.x - _31143.x))) * 0.5) * _10004;\n            }\n            else\n            {\n                _26289 = ((_31143.y + _31151.y) * 0.5) * (_31151.x - _31143.x);\n            }\n            bool _28111 = false;\n            float _28112 = 0.0;\n            if (_35670)\n            {\n                bool _28086 = _31159.x >= _21771;\n                float _28109 = 0.0;\n                if (_28086)\n                {\n                    float _28097 = _21771 - _31151.x;\n                    _28109 = _26289 + (((_31151.y + mix(_31151.y, _31159.y, _28097 / (_31159.x - _31151.x))) * 0.5) * _28097);\n                }\n                else\n                {\n                    _28109 = _26289 + (((_31151.y + _31159.y) * 0.5) * (_31159.x - _31151.x));\n                }\n                _28111 = _28086 ? false : _35670;\n                _28112 = _28109;\n            }\n            else\n            {\n                _28111 = _35670;\n                _28112 = _26289;\n            }\n            float _28156 = 0.0;\n            if (_28111)\n            {\n                float _28153 = 0.0;\n                if (_31167.x >= _21771)\n                {\n                    float _28141 = _21771 - _31159.x;\n                    _28153 = _28112 + (((_31159.y + mix(_31159.y, _31167.y, _28141 / (_31167.x - _31159.x))) * 0.5) * _28141);\n                }\n                else\n                {\n                    _28153 = _28112 + (((_31159.y + _31167.y) * 0.5) * (_31167.x - _31159.x));\n                }\n                _28156 = _28153;\n            }\n            else\n            {\n                _28156 = _28112;\n            }\n            float _26291 = 0.0;\n            if (_9845)\n            {\n                float _10089 = _21771 - _31178.x;\n                _26291 = ((_31178.y + mix(_31178.y, _31190.y, _10089 / (_31190.x - _31178.x))) * 0.5) * _10089;\n            }\n            else\n            {\n                _26291 = ((_31178.y + _31190.y) * 0.5) * (_31190.x - _31178.x);\n            }\n            bool _28023 = false;\n            float _28024 = 0.0;\n            if (_35672)\n            {\n                bool _27998 = _31202.x >= _21771;\n                float _28021 = 0.0;\n                if (_27998)\n                {\n                    float _28009 = _21771 - _31190.x;\n                    _28021 = _26291 + (((_31190.y + mix(_31190.y, _31202.y, _28009 / (_31202.x - _31190.x))) * 0.5) * _28009);\n                }\n                else\n                {\n                    _28021 = _26291 + (((_31190.y + _31202.y) * 0.5) * (_31202.x - _31190.x));\n                }\n                _28023 = _27998 ? false : _35672;\n                _28024 = _28021;\n            }\n            else\n            {\n                _28023 = _35672;\n                _28024 = _26291;\n            }\n            float _28068 = 0.0;\n            if (_28023)\n            {\n                float _28065 = 0.0;\n                if (_31214.x >= _21771)\n                {\n                    float _28053 = _21771 - _31202.x;\n                    _28065 = _28024 + (((_31202.y + mix(_31202.y, _31214.y, _28053 / (_31214.x - _31202.x))) * 0.5) * _28053);\n                }\n                else\n                {\n                    _28065 = _28024 + (((_31202.y + _31214.y) * 0.5) * (_31214.x - _31202.x));\n                }\n                _28068 = _28065;\n            }\n            else\n            {\n                _28068 = _28024;\n            }\n            vec3 _21141 = _35654;\n            _21141.x = _28244 + _21984;\n            vec3 _21144 = _21141;\n            _21144.y = _28156 + _22017;\n            vec3 _21147 = _21144;\n            _21147.z = _28068 + _22050;\n            _22138 = a_subCenter + _21147;\n            _22128 = vec3(_28430, _28368, _28306);\n        }\n        float _7310 = _22128.x * (-1.0);\n        vec3 _21150 = _22128;\n        _21150.x = _7310;\n        float _7314 = _22138.x * (-1.0);\n        vec3 _23075 = vec3(0.0);\n        if (u_sizeByLife[0].x > 0.0)\n        {\n            float _10133 = fract(sin(a_randomSeed - 0.100000001490116119384765625) * 43758.546875);\n            float _22326 = 0.0;\n            float _22334 = 0.0;\n            float _22339 = 0.0;\n            if (_6642)\n            {\n                float _22327 = 0.0;\n                float _22335 = 0.0;\n                float _22340 = 0.0;\n                if (u_sizeByLife[0].y > 0.0)\n                {\n                    vec4 _7352 = texture2D(u_modulesBakedDataTex, vec2(_21773, (u_modulesBakedDataTexInfo[1].x + 0.5) * _6401));\n                    vec4 _7362 = texture2D(u_modulesBakedDataTex, vec2(_21773, (u_modulesBakedDataTexInfo[1].y + 0.5) * _6401));\n                    vec4 _7372 = texture2D(u_modulesBakedDataTex, vec2(_21773, (u_modulesBakedDataTexInfo[1].z + 0.5) * _6401));\n                    _22340 = mix(_7372.x, _7372.y, _10133);\n                    _22335 = mix(_7362.x, _7362.y, _10133);\n                    _22327 = mix(_7352.x, _7352.y, _10133);\n                }\n                else\n                {\n                    vec4 _7410 = texture2D(u_modulesBakedDataTex, vec2(_21773, (u_modulesBakedDataTexInfo[1].x + 0.5) * _6401));\n                    float _7419 = mix(_7410.x, _7410.y, _10133);\n                    _22340 = _7419;\n                    _22335 = _7419;\n                    _22327 = _7419;\n                }\n                _22339 = _22340;\n                _22334 = _22335;\n                _22326 = _22327;\n            }\n            else\n            {\n                float _7438 = u_sizeByLife[1].x * a_startLifeTime;\n                float _7446 = 1.0 - _10133;\n                float _7461 = u_sizeByLife[5].x * a_startLifeTime;\n                float _7484 = u_sizeByLife[9].x * a_startLifeTime;\n                float _27854 = u_sizeByLife[2].x * a_startLifeTime;\n                float _27861 = (_10133 * u_sizeByLife[2].y) + (_7446 * u_sizeByLife[2].z);\n                float _27867 = u_sizeByLife[6].x * a_startLifeTime;\n                float _27874 = (_10133 * u_sizeByLife[6].y) + (_7446 * u_sizeByLife[6].z);\n                float _27880 = u_sizeByLife[10].x * a_startLifeTime;\n                float _27887 = (_10133 * u_sizeByLife[10].y) + (_7446 * u_sizeByLife[10].z);\n                float _27900 = u_sizeByLife[3].x * a_startLifeTime;\n                float _27907 = (_10133 * u_sizeByLife[3].y) + (_7446 * u_sizeByLife[3].z);\n                float _27913 = u_sizeByLife[7].x * a_startLifeTime;\n                float _27920 = (_10133 * u_sizeByLife[7].y) + (_7446 * u_sizeByLife[7].z);\n                float _27926 = u_sizeByLife[11].x * a_startLifeTime;\n                float _27933 = (_10133 * u_sizeByLife[11].y) + (_7446 * u_sizeByLife[11].z);\n                float _27946 = u_sizeByLife[4].x * a_startLifeTime;\n                float _27959 = u_sizeByLife[8].x * a_startLifeTime;\n                float _27972 = u_sizeByLife[12].x * a_startLifeTime;\n                bool _10167 = _27854 >= _21771;\n                float _26403 = 0.0;\n                if (_10167)\n                {\n                    _26403 = mix((_10133 * u_sizeByLife[1].y) + (_7446 * u_sizeByLife[1].z), _27861, (_21771 - _7438) / (_27854 - _7438));\n                }\n                else\n                {\n                    _26403 = _21785;\n                }\n                bool _35680 = _10167 ? false : true;\n                bool _27810 = false;\n                float _27811 = 0.0;\n                if (_35680)\n                {\n                    bool _27794 = _27900 >= _21771;\n                    float _27808 = 0.0;\n                    if (_27794)\n                    {\n                        _27808 = mix(_27861, _27907, (_21771 - _27854) / (_27900 - _27854));\n                    }\n                    else\n                    {\n                        _27808 = _26403;\n                    }\n                    _27810 = _27794 ? false : _35680;\n                    _27811 = _27808;\n                }\n                else\n                {\n                    _27810 = _35680;\n                    _27811 = _26403;\n                }\n                float _27842 = 0.0;\n                if (_27810)\n                {\n                    float _27839 = 0.0;\n                    if (_27946 >= _21771)\n                    {\n                        _27839 = mix(_27907, (_10133 * u_sizeByLife[4].y) + (_7446 * u_sizeByLife[4].z), (_21771 - _27900) / (_27946 - _27900));\n                    }\n                    else\n                    {\n                        _27839 = _27811;\n                    }\n                    _27842 = _27839;\n                }\n                else\n                {\n                    _27842 = _27811;\n                }\n                bool _10228 = _27867 >= _21771;\n                float _26417 = 0.0;\n                if (_10228)\n                {\n                    _26417 = mix((_10133 * u_sizeByLife[5].y) + (_7446 * u_sizeByLife[5].z), _27874, (_21771 - _7461) / (_27867 - _7461));\n                }\n                else\n                {\n                    _26417 = _21785;\n                }\n                bool _35682 = _10228 ? false : true;\n                bool _27748 = false;\n                float _27749 = 0.0;\n                if (_35682)\n                {\n                    bool _27732 = _27913 >= _21771;\n                    float _27746 = 0.0;\n                    if (_27732)\n                    {\n                        _27746 = mix(_27874, _27920, (_21771 - _27867) / (_27913 - _27867));\n                    }\n                    else\n                    {\n                        _27746 = _26417;\n                    }\n                    _27748 = _27732 ? false : _35682;\n                    _27749 = _27746;\n                }\n                else\n                {\n                    _27748 = _35682;\n                    _27749 = _26417;\n                }\n                float _27780 = 0.0;\n                if (_27748)\n                {\n                    float _27777 = 0.0;\n                    if (_27959 >= _21771)\n                    {\n                        _27777 = mix(_27920, (_10133 * u_sizeByLife[8].y) + (_7446 * u_sizeByLife[8].z), (_21771 - _27913) / (_27959 - _27913));\n                    }\n                    else\n                    {\n                        _27777 = _27749;\n                    }\n                    _27780 = _27777;\n                }\n                else\n                {\n                    _27780 = _27749;\n                }\n                bool _10289 = _27880 >= _21771;\n                float _26433 = 0.0;\n                if (_10289)\n                {\n                    _26433 = mix((_10133 * u_sizeByLife[9].y) + (_7446 * u_sizeByLife[9].z), _27887, (_21771 - _7484) / (_27880 - _7484));\n                }\n                else\n                {\n                    _26433 = _21785;\n                }\n                bool _35684 = _10289 ? false : true;\n                bool _27686 = false;\n                float _27687 = 0.0;\n                if (_35684)\n                {\n                    bool _27670 = _27926 >= _21771;\n                    float _27684 = 0.0;\n                    if (_27670)\n                    {\n                        _27684 = mix(_27887, _27933, (_21771 - _27880) / (_27926 - _27880));\n                    }\n                    else\n                    {\n                        _27684 = _26433;\n                    }\n                    _27686 = _27670 ? false : _35684;\n                    _27687 = _27684;\n                }\n                else\n                {\n                    _27686 = _35684;\n                    _27687 = _26433;\n                }\n                float _27718 = 0.0;\n                if (_27686)\n                {\n                    float _27715 = 0.0;\n                    if (_27972 >= _21771)\n                    {\n                        _27715 = mix(_27933, (_10133 * u_sizeByLife[12].y) + (_7446 * u_sizeByLife[12].z), (_21771 - _27926) / (_27972 - _27926));\n                    }\n                    else\n                    {\n                        _27715 = _27687;\n                    }\n                    _27718 = _27715;\n                }\n                else\n                {\n                    _27718 = _27687;\n                }\n                _22339 = _27718;\n                _22334 = _27780;\n                _22326 = _27842;\n            }\n            float _7534 = max(_22326, 0.0);\n            float _7536 = max(_22334, 0.0);\n            float _7538 = max(_22339, 0.0);\n            vec3 _23076 = vec3(0.0);\n            if (u_renderer[0].x == 1.0)\n            {\n                vec3 _21185 = _35654;\n                _21185.x = a_startSize.x * _7536;\n                vec3 _21188 = _21185;\n                _21188.y = a_startSize.y * _7534;\n                vec3 _21191 = _21188;\n                _21191.z = a_startSize.z * _7538;\n                _23076 = _21191;\n            }\n            else\n            {\n                vec3 _21194 = _35654;\n                _21194.x = a_startSize.x * _7534;\n                vec3 _21197 = _21194;\n                _21197.y = a_startSize.y * _7536;\n                vec3 _21200 = _21197;\n                _21200.z = a_startSize.z * _7538;\n                _23076 = _21200;\n            }\n            _23075 = _23076;\n        }\n        else\n        {\n            _23075 = a_startSize;\n        }\n        vec3 _23499 = vec3(0.0);\n        vec3 _24582 = vec3(0.0);\n        if (_6416)\n        {\n            float _10500 = _7314 * u_noise[0].z;\n            float _10503 = (_22138.y + 9.9999997473787516355514526367188e-06) * u_noise[0].z;\n            float _10506 = _22138.z * u_noise[0].z;\n            float _10599 = floor(mod(_10500, 256.0));\n            float _10602 = floor(mod(_10503, 256.0));\n            float _10605 = floor(mod(_10506, 256.0));\n            float _10609 = _10500 - floor(_10500);\n            float _10613 = _10503 - floor(_10503);\n            float _10617 = _10506 - floor(_10506);\n            float _10795 = ((_10609 * _10609) * _10609) * ((_10609 * ((_10609 * 6.0) - 15.0)) + 10.0);\n            float _10809 = ((_10613 * _10613) * _10613) * ((_10613 * ((_10613 * 6.0) - 15.0)) + 10.0);\n            float _10823 = ((_10617 * _10617) * _10617) * ((_10617 * ((_10617 * 6.0) - 15.0)) + 10.0);\n            vec2 _10831 = vec2(_10599 * 0.00390625, 0.5);\n            float _10856 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10831).x * 256.0) + _10602) * 0.00390625, 0.5)).x * 256.0) + _10605) * 0.00390625, 0.5)).x * 256.0;\n            float _10871 = _10602 + 1.0;\n            float _10894 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10831).x * 256.0) + _10871) * 0.00390625, 0.5)).x * 256.0) + _10605) * 0.00390625, 0.5)).x * 256.0;\n            float _10920 = _10605 + 1.0;\n            float _10932 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10831).x * 256.0) + _10602) * 0.00390625, 0.5)).x * 256.0) + _10920) * 0.00390625, 0.5)).x * 256.0;\n            float _10975 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10831).x * 256.0) + _10871) * 0.00390625, 0.5)).x * 256.0) + _10920) * 0.00390625, 0.5)).x * 256.0;\n            vec2 _10988 = vec2((_10599 + 1.0) * 0.00390625, 0.5);\n            float _11013 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10988).x * 256.0) + _10602) * 0.00390625, 0.5)).x * 256.0) + _10605) * 0.00390625, 0.5)).x * 256.0;\n            float _11056 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10988).x * 256.0) + _10871) * 0.00390625, 0.5)).x * 256.0) + _10605) * 0.00390625, 0.5)).x * 256.0;\n            float _11099 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10988).x * 256.0) + _10602) * 0.00390625, 0.5)).x * 256.0) + _10920) * 0.00390625, 0.5)).x * 256.0;\n            float _11147 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10988).x * 256.0) + _10871) * 0.00390625, 0.5)).x * 256.0) + _10920) * 0.00390625, 0.5)).x * 256.0;\n            int _11165 = int(floor(mod(_10856, 16.0)));\n            float _11170 = (_11165 < 8) ? _10609 : _10613;\n            float _22592 = 0.0;\n            if (_11165 < 4)\n            {\n                _22592 = _10613;\n            }\n            else\n            {\n                _22592 = ((_11165 == 12) || (_11165 == 14)) ? _10609 : _10617;\n            }\n            float _10707 = _10609 - 1.0;\n            int _11221 = int(floor(mod(_11013, 16.0)));\n            float _11226 = (_11221 < 8) ? _10707 : _10613;\n            float _22594 = 0.0;\n            if (_11221 < 4)\n            {\n                _22594 = _10613;\n            }\n            else\n            {\n                _22594 = ((_11221 == 12) || (_11221 == 14)) ? _10707 : _10617;\n            }\n            float _10717 = _10613 - 1.0;\n            int _11277 = int(floor(mod(_10894, 16.0)));\n            float _11282 = (_11277 < 8) ? _10609 : _10717;\n            float _22596 = 0.0;\n            if (_11277 < 4)\n            {\n                _22596 = _10717;\n            }\n            else\n            {\n                _22596 = ((_11277 == 12) || (_11277 == 14)) ? _10609 : _10617;\n            }\n            int _11333 = int(floor(mod(_11056, 16.0)));\n            float _11338 = (_11333 < 8) ? _10707 : _10717;\n            float _22598 = 0.0;\n            if (_11333 < 4)\n            {\n                _22598 = _10717;\n            }\n            else\n            {\n                _22598 = ((_11333 == 12) || (_11333 == 14)) ? _10707 : _10617;\n            }\n            float _10739 = _10617 - 1.0;\n            int _11389 = int(floor(mod(_10932, 16.0)));\n            float _11394 = (_11389 < 8) ? _10609 : _10613;\n            float _22604 = 0.0;\n            if (_11389 < 4)\n            {\n                _22604 = _10613;\n            }\n            else\n            {\n                _22604 = ((_11389 == 12) || (_11389 == 14)) ? _10609 : _10739;\n            }\n            int _11445 = int(floor(mod(_11099, 16.0)));\n            float _11450 = (_11445 < 8) ? _10707 : _10613;\n            float _22606 = 0.0;\n            if (_11445 < 4)\n            {\n                _22606 = _10613;\n            }\n            else\n            {\n                _22606 = ((_11445 == 12) || (_11445 == 14)) ? _10707 : _10739;\n            }\n            int _11501 = int(floor(mod(_10975, 16.0)));\n            float _11506 = (_11501 < 8) ? _10609 : _10717;\n            float _22608 = 0.0;\n            if (_11501 < 4)\n            {\n                _22608 = _10717;\n            }\n            else\n            {\n                _22608 = ((_11501 == 12) || (_11501 == 14)) ? _10609 : _10739;\n            }\n            int _11557 = int(floor(mod(_11147, 16.0)));\n            float _11562 = (_11557 < 8) ? _10707 : _10717;\n            float _22610 = 0.0;\n            if (_11557 < 4)\n            {\n                _22610 = _10717;\n            }\n            else\n            {\n                _22610 = ((_11557 == 12) || (_11557 == 14)) ? _10707 : _10739;\n            }\n            float _10781 = (mix(mix(mix(((int(mod(_10856, 2.0)) == 0) ? _11170 : (-_11170)) + ((int(mod(_10856, 3.0)) == 0) ? _22592 : (-_22592)), ((int(mod(_11013, 2.0)) == 0) ? _11226 : (-_11226)) + ((int(mod(_11013, 3.0)) == 0) ? _22594 : (-_22594)), _10795), mix(((int(mod(_10894, 2.0)) == 0) ? _11282 : (-_11282)) + ((int(mod(_10894, 3.0)) == 0) ? _22596 : (-_22596)), ((int(mod(_11056, 2.0)) == 0) ? _11338 : (-_11338)) + ((int(mod(_11056, 3.0)) == 0) ? _22598 : (-_22598)), _10795), _10809), mix(mix(((int(mod(_10932, 2.0)) == 0) ? _11394 : (-_11394)) + ((int(mod(_10932, 3.0)) == 0) ? _22604 : (-_22604)), ((int(mod(_11099, 2.0)) == 0) ? _11450 : (-_11450)) + ((int(mod(_11099, 3.0)) == 0) ? _22606 : (-_22606)), _10795), mix(((int(mod(_10975, 2.0)) == 0) ? _11506 : (-_11506)) + ((int(mod(_10975, 3.0)) == 0) ? _22608 : (-_22608)), ((int(mod(_11147, 2.0)) == 0) ? _11562 : (-_11562)) + ((int(mod(_11147, 3.0)) == 0) ? _22610 : (-_22610)), _10795), _10809), _10823) + 1.0) * 0.5;\n            float _11610 = (_22138.y - 9.9999997473787516355514526367188e-06) * u_noise[0].z;\n            float _11709 = floor(mod(_11610, 256.0));\n            float _11720 = _11610 - floor(_11610);\n            float _11916 = ((_11720 * _11720) * _11720) * ((_11720 * ((_11720 * 6.0) - 15.0)) + 10.0);\n            float _11963 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10831).x * 256.0) + _11709) * 0.00390625, 0.5)).x * 256.0) + _10605) * 0.00390625, 0.5)).x * 256.0;\n            float _11978 = _11709 + 1.0;\n            float _12001 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10831).x * 256.0) + _11978) * 0.00390625, 0.5)).x * 256.0) + _10605) * 0.00390625, 0.5)).x * 256.0;\n            float _12039 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10831).x * 256.0) + _11709) * 0.00390625, 0.5)).x * 256.0) + _10920) * 0.00390625, 0.5)).x * 256.0;\n            float _12082 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10831).x * 256.0) + _11978) * 0.00390625, 0.5)).x * 256.0) + _10920) * 0.00390625, 0.5)).x * 256.0;\n            float _12120 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10988).x * 256.0) + _11709) * 0.00390625, 0.5)).x * 256.0) + _10605) * 0.00390625, 0.5)).x * 256.0;\n            float _12163 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10988).x * 256.0) + _11978) * 0.00390625, 0.5)).x * 256.0) + _10605) * 0.00390625, 0.5)).x * 256.0;\n            float _12206 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10988).x * 256.0) + _11709) * 0.00390625, 0.5)).x * 256.0) + _10920) * 0.00390625, 0.5)).x * 256.0;\n            float _12254 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10988).x * 256.0) + _11978) * 0.00390625, 0.5)).x * 256.0) + _10920) * 0.00390625, 0.5)).x * 256.0;\n            int _12272 = int(floor(mod(_11963, 16.0)));\n            float _12277 = (_12272 < 8) ? _10609 : _11720;\n            float _22648 = 0.0;\n            if (_12272 < 4)\n            {\n                _22648 = _11720;\n            }\n            else\n            {\n                _22648 = ((_12272 == 12) || (_12272 == 14)) ? _10609 : _10617;\n            }\n            int _12328 = int(floor(mod(_12120, 16.0)));\n            float _12333 = (_12328 < 8) ? _10707 : _11720;\n            float _22650 = 0.0;\n            if (_12328 < 4)\n            {\n                _22650 = _11720;\n            }\n            else\n            {\n                _22650 = ((_12328 == 12) || (_12328 == 14)) ? _10707 : _10617;\n            }\n            float _11824 = _11720 - 1.0;\n            int _12384 = int(floor(mod(_12001, 16.0)));\n            float _12389 = (_12384 < 8) ? _10609 : _11824;\n            float _22652 = 0.0;\n            if (_12384 < 4)\n            {\n                _22652 = _11824;\n            }\n            else\n            {\n                _22652 = ((_12384 == 12) || (_12384 == 14)) ? _10609 : _10617;\n            }\n            int _12440 = int(floor(mod(_12163, 16.0)));\n            float _12445 = (_12440 < 8) ? _10707 : _11824;\n            float _22654 = 0.0;\n            if (_12440 < 4)\n            {\n                _22654 = _11824;\n            }\n            else\n            {\n                _22654 = ((_12440 == 12) || (_12440 == 14)) ? _10707 : _10617;\n            }\n            int _12496 = int(floor(mod(_12039, 16.0)));\n            float _12501 = (_12496 < 8) ? _10609 : _11720;\n            float _22660 = 0.0;\n            if (_12496 < 4)\n            {\n                _22660 = _11720;\n            }\n            else\n            {\n                _22660 = ((_12496 == 12) || (_12496 == 14)) ? _10609 : _10739;\n            }\n            int _12552 = int(floor(mod(_12206, 16.0)));\n            float _12557 = (_12552 < 8) ? _10707 : _11720;\n            float _22662 = 0.0;\n            if (_12552 < 4)\n            {\n                _22662 = _11720;\n            }\n            else\n            {\n                _22662 = ((_12552 == 12) || (_12552 == 14)) ? _10707 : _10739;\n            }\n            int _12608 = int(floor(mod(_12082, 16.0)));\n            float _12613 = (_12608 < 8) ? _10609 : _11824;\n            float _22664 = 0.0;\n            if (_12608 < 4)\n            {\n                _22664 = _11824;\n            }\n            else\n            {\n                _22664 = ((_12608 == 12) || (_12608 == 14)) ? _10609 : _10739;\n            }\n            int _12664 = int(floor(mod(_12254, 16.0)));\n            float _12669 = (_12664 < 8) ? _10707 : _11824;\n            float _22666 = 0.0;\n            if (_12664 < 4)\n            {\n                _22666 = _11824;\n            }\n            else\n            {\n                _22666 = ((_12664 == 12) || (_12664 == 14)) ? _10707 : _10739;\n            }\n            float _11888 = (mix(mix(mix(((int(mod(_11963, 2.0)) == 0) ? _12277 : (-_12277)) + ((int(mod(_11963, 3.0)) == 0) ? _22648 : (-_22648)), ((int(mod(_12120, 2.0)) == 0) ? _12333 : (-_12333)) + ((int(mod(_12120, 3.0)) == 0) ? _22650 : (-_22650)), _10795), mix(((int(mod(_12001, 2.0)) == 0) ? _12389 : (-_12389)) + ((int(mod(_12001, 3.0)) == 0) ? _22652 : (-_22652)), ((int(mod(_12163, 2.0)) == 0) ? _12445 : (-_12445)) + ((int(mod(_12163, 3.0)) == 0) ? _22654 : (-_22654)), _10795), _11916), mix(mix(((int(mod(_12039, 2.0)) == 0) ? _12501 : (-_12501)) + ((int(mod(_12039, 3.0)) == 0) ? _22660 : (-_22660)), ((int(mod(_12206, 2.0)) == 0) ? _12557 : (-_12557)) + ((int(mod(_12206, 3.0)) == 0) ? _22662 : (-_22662)), _10795), mix(((int(mod(_12082, 2.0)) == 0) ? _12613 : (-_12613)) + ((int(mod(_12082, 3.0)) == 0) ? _22664 : (-_22664)), ((int(mod(_12254, 2.0)) == 0) ? _12669 : (-_12669)) + ((int(mod(_12254, 3.0)) == 0) ? _22666 : (-_22666)), _10795), _11916), _10823) + 1.0) * 0.5;\n            float _12717 = _22138.y * u_noise[0].z;\n            float _12720 = (_22138.z + 9.9999997473787516355514526367188e-06) * u_noise[0].z;\n            float _12816 = floor(mod(_12717, 256.0));\n            float _12819 = floor(mod(_12720, 256.0));\n            float _12827 = _12717 - floor(_12717);\n            float _12831 = _12720 - floor(_12720);\n            float _13023 = ((_12827 * _12827) * _12827) * ((_12827 * ((_12827 * 6.0) - 15.0)) + 10.0);\n            float _13070 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10831).x * 256.0) + _12816) * 0.00390625, 0.5)).x * 256.0) + _12819) * 0.00390625, 0.5)).x * 256.0;\n            float _13085 = _12816 + 1.0;\n            float _13108 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10831).x * 256.0) + _13085) * 0.00390625, 0.5)).x * 256.0) + _12819) * 0.00390625, 0.5)).x * 256.0;\n            float _13134 = _12819 + 1.0;\n            float _13146 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10831).x * 256.0) + _12816) * 0.00390625, 0.5)).x * 256.0) + _13134) * 0.00390625, 0.5)).x * 256.0;\n            float _13189 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10831).x * 256.0) + _13085) * 0.00390625, 0.5)).x * 256.0) + _13134) * 0.00390625, 0.5)).x * 256.0;\n            float _13227 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10988).x * 256.0) + _12816) * 0.00390625, 0.5)).x * 256.0) + _12819) * 0.00390625, 0.5)).x * 256.0;\n            float _13270 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10988).x * 256.0) + _13085) * 0.00390625, 0.5)).x * 256.0) + _12819) * 0.00390625, 0.5)).x * 256.0;\n            float _13313 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10988).x * 256.0) + _12816) * 0.00390625, 0.5)).x * 256.0) + _13134) * 0.00390625, 0.5)).x * 256.0;\n            float _13361 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10988).x * 256.0) + _13085) * 0.00390625, 0.5)).x * 256.0) + _13134) * 0.00390625, 0.5)).x * 256.0;\n            int _13379 = int(floor(mod(_13070, 16.0)));\n            float _13384 = (_13379 < 8) ? _10609 : _12827;\n            float _22704 = 0.0;\n            if (_13379 < 4)\n            {\n                _22704 = _12827;\n            }\n            else\n            {\n                _22704 = ((_13379 == 12) || (_13379 == 14)) ? _10609 : _12831;\n            }\n            int _13435 = int(floor(mod(_13227, 16.0)));\n            float _13440 = (_13435 < 8) ? _10707 : _12827;\n            float _22706 = 0.0;\n            if (_13435 < 4)\n            {\n                _22706 = _12827;\n            }\n            else\n            {\n                _22706 = ((_13435 == 12) || (_13435 == 14)) ? _10707 : _12831;\n            }\n            float _12931 = _12827 - 1.0;\n            int _13491 = int(floor(mod(_13108, 16.0)));\n            float _13496 = (_13491 < 8) ? _10609 : _12931;\n            float _22708 = 0.0;\n            if (_13491 < 4)\n            {\n                _22708 = _12931;\n            }\n            else\n            {\n                _22708 = ((_13491 == 12) || (_13491 == 14)) ? _10609 : _12831;\n            }\n            int _13547 = int(floor(mod(_13270, 16.0)));\n            float _13552 = (_13547 < 8) ? _10707 : _12931;\n            float _22710 = 0.0;\n            if (_13547 < 4)\n            {\n                _22710 = _12931;\n            }\n            else\n            {\n                _22710 = ((_13547 == 12) || (_13547 == 14)) ? _10707 : _12831;\n            }\n            float _12953 = _12831 - 1.0;\n            int _13603 = int(floor(mod(_13146, 16.0)));\n            float _13608 = (_13603 < 8) ? _10609 : _12827;\n            float _22716 = 0.0;\n            if (_13603 < 4)\n            {\n                _22716 = _12827;\n            }\n            else\n            {\n                _22716 = ((_13603 == 12) || (_13603 == 14)) ? _10609 : _12953;\n            }\n            int _13659 = int(floor(mod(_13313, 16.0)));\n            float _13664 = (_13659 < 8) ? _10707 : _12827;\n            float _22718 = 0.0;\n            if (_13659 < 4)\n            {\n                _22718 = _12827;\n            }\n            else\n            {\n                _22718 = ((_13659 == 12) || (_13659 == 14)) ? _10707 : _12953;\n            }\n            int _13715 = int(floor(mod(_13189, 16.0)));\n            float _13720 = (_13715 < 8) ? _10609 : _12931;\n            float _22720 = 0.0;\n            if (_13715 < 4)\n            {\n                _22720 = _12931;\n            }\n            else\n            {\n                _22720 = ((_13715 == 12) || (_13715 == 14)) ? _10609 : _12953;\n            }\n            int _13771 = int(floor(mod(_13361, 16.0)));\n            float _13776 = (_13771 < 8) ? _10707 : _12931;\n            float _22722 = 0.0;\n            if (_13771 < 4)\n            {\n                _22722 = _12931;\n            }\n            else\n            {\n                _22722 = ((_13771 == 12) || (_13771 == 14)) ? _10707 : _12953;\n            }\n            float _12995 = (mix(mix(mix(((int(mod(_13070, 2.0)) == 0) ? _13384 : (-_13384)) + ((int(mod(_13070, 3.0)) == 0) ? _22704 : (-_22704)), ((int(mod(_13227, 2.0)) == 0) ? _13440 : (-_13440)) + ((int(mod(_13227, 3.0)) == 0) ? _22706 : (-_22706)), _10795), mix(((int(mod(_13108, 2.0)) == 0) ? _13496 : (-_13496)) + ((int(mod(_13108, 3.0)) == 0) ? _22708 : (-_22708)), ((int(mod(_13270, 2.0)) == 0) ? _13552 : (-_13552)) + ((int(mod(_13270, 3.0)) == 0) ? _22710 : (-_22710)), _10795), _13023), mix(mix(((int(mod(_13146, 2.0)) == 0) ? _13608 : (-_13608)) + ((int(mod(_13146, 3.0)) == 0) ? _22716 : (-_22716)), ((int(mod(_13313, 2.0)) == 0) ? _13664 : (-_13664)) + ((int(mod(_13313, 3.0)) == 0) ? _22718 : (-_22718)), _10795), mix(((int(mod(_13189, 2.0)) == 0) ? _13720 : (-_13720)) + ((int(mod(_13189, 3.0)) == 0) ? _22720 : (-_22720)), ((int(mod(_13361, 2.0)) == 0) ? _13776 : (-_13776)) + ((int(mod(_13361, 3.0)) == 0) ? _22722 : (-_22722)), _10795), _13023), ((_12831 * _12831) * _12831) * ((_12831 * ((_12831 * 6.0) - 15.0)) + 10.0)) + 1.0) * 0.5;\n            float _13827 = (_22138.z - 9.9999997473787516355514526367188e-06) * u_noise[0].z;\n            float _13926 = floor(mod(_13827, 256.0));\n            float _13938 = _13827 - floor(_13827);\n            float _14177 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10831).x * 256.0) + _12816) * 0.00390625, 0.5)).x * 256.0) + _13926) * 0.00390625, 0.5)).x * 256.0;\n            float _14215 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10831).x * 256.0) + _13085) * 0.00390625, 0.5)).x * 256.0) + _13926) * 0.00390625, 0.5)).x * 256.0;\n            float _14241 = _13926 + 1.0;\n            float _14253 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10831).x * 256.0) + _12816) * 0.00390625, 0.5)).x * 256.0) + _14241) * 0.00390625, 0.5)).x * 256.0;\n            float _14296 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10831).x * 256.0) + _13085) * 0.00390625, 0.5)).x * 256.0) + _14241) * 0.00390625, 0.5)).x * 256.0;\n            float _14334 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10988).x * 256.0) + _12816) * 0.00390625, 0.5)).x * 256.0) + _13926) * 0.00390625, 0.5)).x * 256.0;\n            float _14377 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10988).x * 256.0) + _13085) * 0.00390625, 0.5)).x * 256.0) + _13926) * 0.00390625, 0.5)).x * 256.0;\n            float _14420 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10988).x * 256.0) + _12816) * 0.00390625, 0.5)).x * 256.0) + _14241) * 0.00390625, 0.5)).x * 256.0;\n            float _14468 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _10988).x * 256.0) + _13085) * 0.00390625, 0.5)).x * 256.0) + _14241) * 0.00390625, 0.5)).x * 256.0;\n            int _14486 = int(floor(mod(_14177, 16.0)));\n            float _14491 = (_14486 < 8) ? _10609 : _12827;\n            float _22760 = 0.0;\n            if (_14486 < 4)\n            {\n                _22760 = _12827;\n            }\n            else\n            {\n                _22760 = ((_14486 == 12) || (_14486 == 14)) ? _10609 : _13938;\n            }\n            int _14542 = int(floor(mod(_14334, 16.0)));\n            float _14547 = (_14542 < 8) ? _10707 : _12827;\n            float _22762 = 0.0;\n            if (_14542 < 4)\n            {\n                _22762 = _12827;\n            }\n            else\n            {\n                _22762 = ((_14542 == 12) || (_14542 == 14)) ? _10707 : _13938;\n            }\n            int _14598 = int(floor(mod(_14215, 16.0)));\n            float _14603 = (_14598 < 8) ? _10609 : _12931;\n            float _22764 = 0.0;\n            if (_14598 < 4)\n            {\n                _22764 = _12931;\n            }\n            else\n            {\n                _22764 = ((_14598 == 12) || (_14598 == 14)) ? _10609 : _13938;\n            }\n            int _14654 = int(floor(mod(_14377, 16.0)));\n            float _14659 = (_14654 < 8) ? _10707 : _12931;\n            float _22766 = 0.0;\n            if (_14654 < 4)\n            {\n                _22766 = _12931;\n            }\n            else\n            {\n                _22766 = ((_14654 == 12) || (_14654 == 14)) ? _10707 : _13938;\n            }\n            float _14060 = _13938 - 1.0;\n            int _14710 = int(floor(mod(_14253, 16.0)));\n            float _14715 = (_14710 < 8) ? _10609 : _12827;\n            float _22772 = 0.0;\n            if (_14710 < 4)\n            {\n                _22772 = _12827;\n            }\n            else\n            {\n                _22772 = ((_14710 == 12) || (_14710 == 14)) ? _10609 : _14060;\n            }\n            int _14766 = int(floor(mod(_14420, 16.0)));\n            float _14771 = (_14766 < 8) ? _10707 : _12827;\n            float _22774 = 0.0;\n            if (_14766 < 4)\n            {\n                _22774 = _12827;\n            }\n            else\n            {\n                _22774 = ((_14766 == 12) || (_14766 == 14)) ? _10707 : _14060;\n            }\n            int _14822 = int(floor(mod(_14296, 16.0)));\n            float _14827 = (_14822 < 8) ? _10609 : _12931;\n            float _22776 = 0.0;\n            if (_14822 < 4)\n            {\n                _22776 = _12931;\n            }\n            else\n            {\n                _22776 = ((_14822 == 12) || (_14822 == 14)) ? _10609 : _14060;\n            }\n            int _14878 = int(floor(mod(_14468, 16.0)));\n            float _14883 = (_14878 < 8) ? _10707 : _12931;\n            float _22778 = 0.0;\n            if (_14878 < 4)\n            {\n                _22778 = _12931;\n            }\n            else\n            {\n                _22778 = ((_14878 == 12) || (_14878 == 14)) ? _10707 : _14060;\n            }\n            float _14102 = (mix(mix(mix(((int(mod(_14177, 2.0)) == 0) ? _14491 : (-_14491)) + ((int(mod(_14177, 3.0)) == 0) ? _22760 : (-_22760)), ((int(mod(_14334, 2.0)) == 0) ? _14547 : (-_14547)) + ((int(mod(_14334, 3.0)) == 0) ? _22762 : (-_22762)), _10795), mix(((int(mod(_14215, 2.0)) == 0) ? _14603 : (-_14603)) + ((int(mod(_14215, 3.0)) == 0) ? _22764 : (-_22764)), ((int(mod(_14377, 2.0)) == 0) ? _14659 : (-_14659)) + ((int(mod(_14377, 3.0)) == 0) ? _22766 : (-_22766)), _10795), _13023), mix(mix(((int(mod(_14253, 2.0)) == 0) ? _14715 : (-_14715)) + ((int(mod(_14253, 3.0)) == 0) ? _22772 : (-_22772)), ((int(mod(_14420, 2.0)) == 0) ? _14771 : (-_14771)) + ((int(mod(_14420, 3.0)) == 0) ? _22774 : (-_22774)), _10795), mix(((int(mod(_14296, 2.0)) == 0) ? _14827 : (-_14827)) + ((int(mod(_14296, 3.0)) == 0) ? _22776 : (-_22776)), ((int(mod(_14468, 2.0)) == 0) ? _14883 : (-_14883)) + ((int(mod(_14468, 3.0)) == 0) ? _22778 : (-_22778)), _10795), _13023), ((_13938 * _13938) * _13938) * ((_13938 * ((_13938 * 6.0) - 15.0)) + 10.0)) + 1.0) * 0.5;\n            float _14928 = (_7314 + 9.9999997473787516355514526367188e-06) * u_noise[0].z;\n            float _15027 = floor(mod(_14928, 256.0));\n            float _15037 = _14928 - floor(_14928);\n            float _15223 = ((_15037 * _15037) * _15037) * ((_15037 * ((_15037 * 6.0) - 15.0)) + 10.0);\n            vec2 _15259 = vec2(_15027 * 0.00390625, 0.5);\n            float _15284 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _15259).x * 256.0) + _12816) * 0.00390625, 0.5)).x * 256.0) + _10605) * 0.00390625, 0.5)).x * 256.0;\n            float _15322 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _15259).x * 256.0) + _13085) * 0.00390625, 0.5)).x * 256.0) + _10605) * 0.00390625, 0.5)).x * 256.0;\n            float _15360 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _15259).x * 256.0) + _12816) * 0.00390625, 0.5)).x * 256.0) + _10920) * 0.00390625, 0.5)).x * 256.0;\n            float _15403 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _15259).x * 256.0) + _13085) * 0.00390625, 0.5)).x * 256.0) + _10920) * 0.00390625, 0.5)).x * 256.0;\n            vec2 _15416 = vec2((_15027 + 1.0) * 0.00390625, 0.5);\n            float _15441 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _15416).x * 256.0) + _12816) * 0.00390625, 0.5)).x * 256.0) + _10605) * 0.00390625, 0.5)).x * 256.0;\n            float _15484 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _15416).x * 256.0) + _13085) * 0.00390625, 0.5)).x * 256.0) + _10605) * 0.00390625, 0.5)).x * 256.0;\n            float _15527 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _15416).x * 256.0) + _12816) * 0.00390625, 0.5)).x * 256.0) + _10920) * 0.00390625, 0.5)).x * 256.0;\n            float _15575 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _15416).x * 256.0) + _13085) * 0.00390625, 0.5)).x * 256.0) + _10920) * 0.00390625, 0.5)).x * 256.0;\n            int _15593 = int(floor(mod(_15284, 16.0)));\n            float _15598 = (_15593 < 8) ? _15037 : _12827;\n            float _22816 = 0.0;\n            if (_15593 < 4)\n            {\n                _22816 = _12827;\n            }\n            else\n            {\n                _22816 = ((_15593 == 12) || (_15593 == 14)) ? _15037 : _10617;\n            }\n            float _15135 = _15037 - 1.0;\n            int _15649 = int(floor(mod(_15441, 16.0)));\n            float _15654 = (_15649 < 8) ? _15135 : _12827;\n            float _22818 = 0.0;\n            if (_15649 < 4)\n            {\n                _22818 = _12827;\n            }\n            else\n            {\n                _22818 = ((_15649 == 12) || (_15649 == 14)) ? _15135 : _10617;\n            }\n            int _15705 = int(floor(mod(_15322, 16.0)));\n            float _15710 = (_15705 < 8) ? _15037 : _12931;\n            float _22820 = 0.0;\n            if (_15705 < 4)\n            {\n                _22820 = _12931;\n            }\n            else\n            {\n                _22820 = ((_15705 == 12) || (_15705 == 14)) ? _15037 : _10617;\n            }\n            int _15761 = int(floor(mod(_15484, 16.0)));\n            float _15766 = (_15761 < 8) ? _15135 : _12931;\n            float _22822 = 0.0;\n            if (_15761 < 4)\n            {\n                _22822 = _12931;\n            }\n            else\n            {\n                _22822 = ((_15761 == 12) || (_15761 == 14)) ? _15135 : _10617;\n            }\n            int _15817 = int(floor(mod(_15360, 16.0)));\n            float _15822 = (_15817 < 8) ? _15037 : _12827;\n            float _22828 = 0.0;\n            if (_15817 < 4)\n            {\n                _22828 = _12827;\n            }\n            else\n            {\n                _22828 = ((_15817 == 12) || (_15817 == 14)) ? _15037 : _10739;\n            }\n            int _15873 = int(floor(mod(_15527, 16.0)));\n            float _15878 = (_15873 < 8) ? _15135 : _12827;\n            float _22830 = 0.0;\n            if (_15873 < 4)\n            {\n                _22830 = _12827;\n            }\n            else\n            {\n                _22830 = ((_15873 == 12) || (_15873 == 14)) ? _15135 : _10739;\n            }\n            int _15929 = int(floor(mod(_15403, 16.0)));\n            float _15934 = (_15929 < 8) ? _15037 : _12931;\n            float _22832 = 0.0;\n            if (_15929 < 4)\n            {\n                _22832 = _12931;\n            }\n            else\n            {\n                _22832 = ((_15929 == 12) || (_15929 == 14)) ? _15037 : _10739;\n            }\n            int _15985 = int(floor(mod(_15575, 16.0)));\n            float _15990 = (_15985 < 8) ? _15135 : _12931;\n            float _22834 = 0.0;\n            if (_15985 < 4)\n            {\n                _22834 = _12931;\n            }\n            else\n            {\n                _22834 = ((_15985 == 12) || (_15985 == 14)) ? _15135 : _10739;\n            }\n            float _15209 = (mix(mix(mix(((int(mod(_15284, 2.0)) == 0) ? _15598 : (-_15598)) + ((int(mod(_15284, 3.0)) == 0) ? _22816 : (-_22816)), ((int(mod(_15441, 2.0)) == 0) ? _15654 : (-_15654)) + ((int(mod(_15441, 3.0)) == 0) ? _22818 : (-_22818)), _15223), mix(((int(mod(_15322, 2.0)) == 0) ? _15710 : (-_15710)) + ((int(mod(_15322, 3.0)) == 0) ? _22820 : (-_22820)), ((int(mod(_15484, 2.0)) == 0) ? _15766 : (-_15766)) + ((int(mod(_15484, 3.0)) == 0) ? _22822 : (-_22822)), _15223), _13023), mix(mix(((int(mod(_15360, 2.0)) == 0) ? _15822 : (-_15822)) + ((int(mod(_15360, 3.0)) == 0) ? _22828 : (-_22828)), ((int(mod(_15527, 2.0)) == 0) ? _15878 : (-_15878)) + ((int(mod(_15527, 3.0)) == 0) ? _22830 : (-_22830)), _15223), mix(((int(mod(_15403, 2.0)) == 0) ? _15934 : (-_15934)) + ((int(mod(_15403, 3.0)) == 0) ? _22832 : (-_22832)), ((int(mod(_15575, 2.0)) == 0) ? _15990 : (-_15990)) + ((int(mod(_15575, 3.0)) == 0) ? _22834 : (-_22834)), _15223), _13023), _10823) + 1.0) * 0.5;\n            float _16035 = (_7314 - 9.9999997473787516355514526367188e-06) * u_noise[0].z;\n            float _16134 = floor(mod(_16035, 256.0));\n            float _16144 = _16035 - floor(_16035);\n            float _16330 = ((_16144 * _16144) * _16144) * ((_16144 * ((_16144 * 6.0) - 15.0)) + 10.0);\n            vec2 _16366 = vec2(_16134 * 0.00390625, 0.5);\n            float _16391 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _16366).x * 256.0) + _12816) * 0.00390625, 0.5)).x * 256.0) + _10605) * 0.00390625, 0.5)).x * 256.0;\n            float _16429 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _16366).x * 256.0) + _13085) * 0.00390625, 0.5)).x * 256.0) + _10605) * 0.00390625, 0.5)).x * 256.0;\n            float _16467 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _16366).x * 256.0) + _12816) * 0.00390625, 0.5)).x * 256.0) + _10920) * 0.00390625, 0.5)).x * 256.0;\n            float _16510 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _16366).x * 256.0) + _13085) * 0.00390625, 0.5)).x * 256.0) + _10920) * 0.00390625, 0.5)).x * 256.0;\n            vec2 _16523 = vec2((_16134 + 1.0) * 0.00390625, 0.5);\n            float _16548 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _16523).x * 256.0) + _12816) * 0.00390625, 0.5)).x * 256.0) + _10605) * 0.00390625, 0.5)).x * 256.0;\n            float _16591 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _16523).x * 256.0) + _13085) * 0.00390625, 0.5)).x * 256.0) + _10605) * 0.00390625, 0.5)).x * 256.0;\n            float _16634 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _16523).x * 256.0) + _12816) * 0.00390625, 0.5)).x * 256.0) + _10920) * 0.00390625, 0.5)).x * 256.0;\n            float _16682 = texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, vec2(((texture2D(u_permutationTexForNoise, _16523).x * 256.0) + _13085) * 0.00390625, 0.5)).x * 256.0) + _10920) * 0.00390625, 0.5)).x * 256.0;\n            int _16700 = int(floor(mod(_16391, 16.0)));\n            float _16705 = (_16700 < 8) ? _16144 : _12827;\n            float _22872 = 0.0;\n            if (_16700 < 4)\n            {\n                _22872 = _12827;\n            }\n            else\n            {\n                _22872 = ((_16700 == 12) || (_16700 == 14)) ? _16144 : _10617;\n            }\n            float _16242 = _16144 - 1.0;\n            int _16756 = int(floor(mod(_16548, 16.0)));\n            float _16761 = (_16756 < 8) ? _16242 : _12827;\n            float _22874 = 0.0;\n            if (_16756 < 4)\n            {\n                _22874 = _12827;\n            }\n            else\n            {\n                _22874 = ((_16756 == 12) || (_16756 == 14)) ? _16242 : _10617;\n            }\n            int _16812 = int(floor(mod(_16429, 16.0)));\n            float _16817 = (_16812 < 8) ? _16144 : _12931;\n            float _22876 = 0.0;\n            if (_16812 < 4)\n            {\n                _22876 = _12931;\n            }\n            else\n            {\n                _22876 = ((_16812 == 12) || (_16812 == 14)) ? _16144 : _10617;\n            }\n            int _16868 = int(floor(mod(_16591, 16.0)));\n            float _16873 = (_16868 < 8) ? _16242 : _12931;\n            float _22878 = 0.0;\n            if (_16868 < 4)\n            {\n                _22878 = _12931;\n            }\n            else\n            {\n                _22878 = ((_16868 == 12) || (_16868 == 14)) ? _16242 : _10617;\n            }\n            int _16924 = int(floor(mod(_16467, 16.0)));\n            float _16929 = (_16924 < 8) ? _16144 : _12827;\n            float _22884 = 0.0;\n            if (_16924 < 4)\n            {\n                _22884 = _12827;\n            }\n            else\n            {\n                _22884 = ((_16924 == 12) || (_16924 == 14)) ? _16144 : _10739;\n            }\n            int _16980 = int(floor(mod(_16634, 16.0)));\n            float _16985 = (_16980 < 8) ? _16242 : _12827;\n            float _22886 = 0.0;\n            if (_16980 < 4)\n            {\n                _22886 = _12827;\n            }\n            else\n            {\n                _22886 = ((_16980 == 12) || (_16980 == 14)) ? _16242 : _10739;\n            }\n            int _17036 = int(floor(mod(_16510, 16.0)));\n            float _17041 = (_17036 < 8) ? _16144 : _12931;\n            float _22888 = 0.0;\n            if (_17036 < 4)\n            {\n                _22888 = _12931;\n            }\n            else\n            {\n                _22888 = ((_17036 == 12) || (_17036 == 14)) ? _16144 : _10739;\n            }\n            int _17092 = int(floor(mod(_16682, 16.0)));\n            float _17097 = (_17092 < 8) ? _16242 : _12931;\n            float _22890 = 0.0;\n            if (_17092 < 4)\n            {\n                _22890 = _12931;\n            }\n            else\n            {\n                _22890 = ((_17092 == 12) || (_17092 == 14)) ? _16242 : _10739;\n            }\n            float _16316 = (mix(mix(mix(((int(mod(_16391, 2.0)) == 0) ? _16705 : (-_16705)) + ((int(mod(_16391, 3.0)) == 0) ? _22872 : (-_22872)), ((int(mod(_16548, 2.0)) == 0) ? _16761 : (-_16761)) + ((int(mod(_16548, 3.0)) == 0) ? _22874 : (-_22874)), _16330), mix(((int(mod(_16429, 2.0)) == 0) ? _16817 : (-_16817)) + ((int(mod(_16429, 3.0)) == 0) ? _22876 : (-_22876)), ((int(mod(_16591, 2.0)) == 0) ? _16873 : (-_16873)) + ((int(mod(_16591, 3.0)) == 0) ? _22878 : (-_22878)), _16330), _13023), mix(mix(((int(mod(_16467, 2.0)) == 0) ? _16929 : (-_16929)) + ((int(mod(_16467, 3.0)) == 0) ? _22884 : (-_22884)), ((int(mod(_16634, 2.0)) == 0) ? _16985 : (-_16985)) + ((int(mod(_16634, 3.0)) == 0) ? _22886 : (-_22886)), _16330), mix(((int(mod(_16510, 2.0)) == 0) ? _17041 : (-_17041)) + ((int(mod(_16510, 3.0)) == 0) ? _22888 : (-_22888)), ((int(mod(_16682, 2.0)) == 0) ? _17097 : (-_17097)) + ((int(mod(_16682, 3.0)) == 0) ? _22890 : (-_22890)), _16330), _13023), _10823) + 1.0) * 0.5;\n            vec3 _21349 = vec3(0.0);\n            _21349.x = (((_11888 - _10781) - _14102) + _12995) * 50000.0;\n            vec3 _21351 = _21349;\n            _21351.y = (((_14102 - _12995) - _16316) + _15209) * 50000.0;\n            vec3 _21353 = _21351;\n            _21353.z = (((_16316 - _15209) - _11888) + _10781) * 50000.0;\n            vec3 _10444 = normalize(_21353);\n            vec3 _23025 = vec3(0.0);\n            if (u_noise[1].x == 0.0)\n            {\n                vec3 _21356 = _35654;\n                _21356.x = _22417 * u_noise[0].z;\n                vec3 _21359 = _21356;\n                _21359.y = _22477 * u_noise[0].z;\n                vec3 _21362 = _21359;\n                _21362.z = _22536 * u_noise[0].z;\n                _23025 = _21362;\n            }\n            else\n            {\n                _23025 = vec3(_22417, _22477, _22536);\n            }\n            float _10474 = _10444.x * _23025.x;\n            vec3 _21366 = _35654;\n            _21366.x = _10474;\n            vec3 _24583 = vec3(0.0);\n            if (u_common[0].z == 0.0)\n            {\n                vec3 _21379 = _35654;\n                _21379.x = _23075.x + ((_10474 * _23075.x) * _23176);\n                vec3 _21384 = _21379;\n                _21384.y = _23075.y + ((_10474 * _23075.y) * _23176);\n                vec3 _21389 = _21384;\n                _21389.z = _23075.z + ((_10474 * _23075.z) * _23176);\n                _24583 = _21389;\n            }\n            else\n            {\n                vec3 _21394 = _35654;\n                _21394.x = _23075.x + ((_10474 * _23075.x) * _23176);\n                vec3 _21399 = _21394;\n                _21399.y = _23075.y + (((_10444.y * _23025.y) * _23075.y) * _23176);\n                vec3 _21404 = _21399;\n                _21404.z = _23075.z + (((_10444.z * _23025.z) * _23075.z) * _23176);\n                _24583 = _21404;\n            }\n            _24582 = _24583;\n            _23499 = _21366;\n        }\n        else\n        {\n            _24582 = _23075;\n            _23499 = vec3(0.0);\n        }\n        vec3 _23523 = vec3(0.0);\n        if (u_rotationByLife[0].x > 0.0)\n        {\n            float _23294 = 0.0;\n            float _23296 = 0.0;\n            float _23305 = 0.0;\n            if (_6642)\n            {\n                float _23295 = 0.0;\n                float _23297 = 0.0;\n                float _23306 = 0.0;\n                if (u_rotationByLife[0].y > 0.0)\n                {\n                    vec4 _7699 = texture2D(u_modulesBakedDataTex, vec2(_21775, (u_modulesBakedDataTexInfo[1].x + 0.5) * _6401));\n                    vec4 _7709 = texture2D(u_modulesBakedDataTex, vec2(_21775, (u_modulesBakedDataTexInfo[1].y + 0.5) * _6401));\n                    vec4 _7719 = texture2D(u_modulesBakedDataTex, vec2(_21775, (u_modulesBakedDataTexInfo[1].z + 0.5) * _6401));\n                    _23306 = mix(radians(_7699.z), radians(_7699.w), _8974);\n                    _23297 = mix(radians(_7709.z), radians(_7709.w), _8974);\n                    _23295 = mix(radians(_7719.z), radians(_7719.w), _8974);\n                }\n                else\n                {\n                    vec4 _7763 = texture2D(u_modulesBakedDataTex, vec2(_21775, (u_modulesBakedDataTexInfo[1].z + 0.5) * _6401));\n                    _23306 = 0.0;\n                    _23297 = 0.0;\n                    _23295 = mix(radians(_7763.z), radians(_7763.w), _8974);\n                }\n                _23305 = _23306;\n                _23296 = _23297;\n                _23294 = _23295;\n            }\n            else\n            {\n                float _7791 = u_rotationByLife[1].x * a_startLifeTime;\n                float _7799 = 1.0 - _8974;\n                float _7804 = radians((_8974 * u_rotationByLife[1].y) + (_7799 * u_rotationByLife[1].z));\n                float _7815 = u_rotationByLife[5].x * a_startLifeTime;\n                float _7828 = radians((_8974 * u_rotationByLife[5].y) + (_7799 * u_rotationByLife[5].z));\n                float _7839 = u_rotationByLife[9].x * a_startLifeTime;\n                float _7852 = radians((_8974 * u_rotationByLife[9].y) + (_7799 * u_rotationByLife[9].z));\n                float _27521 = u_rotationByLife[2].x * a_startLifeTime;\n                float _27529 = radians((_8974 * u_rotationByLife[2].y) + (_7799 * u_rotationByLife[2].z));\n                float _27535 = u_rotationByLife[6].x * a_startLifeTime;\n                float _27543 = radians((_8974 * u_rotationByLife[6].y) + (_7799 * u_rotationByLife[6].z));\n                float _27549 = u_rotationByLife[10].x * a_startLifeTime;\n                float _27557 = radians((_8974 * u_rotationByLife[10].y) + (_7799 * u_rotationByLife[10].z));\n                float _27570 = u_rotationByLife[3].x * a_startLifeTime;\n                float _27578 = radians((_8974 * u_rotationByLife[3].y) + (_7799 * u_rotationByLife[3].z));\n                float _27584 = u_rotationByLife[7].x * a_startLifeTime;\n                float _27592 = radians((_8974 * u_rotationByLife[7].y) + (_7799 * u_rotationByLife[7].z));\n                float _27598 = u_rotationByLife[11].x * a_startLifeTime;\n                float _27606 = radians((_8974 * u_rotationByLife[11].y) + (_7799 * u_rotationByLife[11].z));\n                float _27619 = u_rotationByLife[4].x * a_startLifeTime;\n                float _27627 = radians((_8974 * u_rotationByLife[4].y) + (_7799 * u_rotationByLife[4].z));\n                float _27633 = u_rotationByLife[8].x * a_startLifeTime;\n                float _27641 = radians((_8974 * u_rotationByLife[8].y) + (_7799 * u_rotationByLife[8].z));\n                float _27647 = u_rotationByLife[12].x * a_startLifeTime;\n                float _27655 = radians((_8974 * u_rotationByLife[12].y) + (_7799 * u_rotationByLife[12].z));\n                bool _17177 = _27521 >= _21771;\n                float _26469 = 0.0;\n                if (_17177)\n                {\n                    float _17183 = _21771 - _7791;\n                    _26469 = ((_7804 + mix(_7804, _27529, _17183 / (_27521 - _7791))) * 0.5) * _17183;\n                }\n                else\n                {\n                    _26469 = ((_7804 + _27529) * 0.5) * (_27521 - _7791);\n                }\n                bool _35734 = _17177 ? false : true;\n                bool _27464 = false;\n                float _27465 = 0.0;\n                if (_35734)\n                {\n                    bool _27439 = _27570 >= _21771;\n                    float _27462 = 0.0;\n                    if (_27439)\n                    {\n                        float _27450 = _21771 - _27521;\n                        _27462 = _26469 + (((_27529 + mix(_27529, _27578, _27450 / (_27570 - _27521))) * 0.5) * _27450);\n                    }\n                    else\n                    {\n                        _27462 = _26469 + (((_27529 + _27578) * 0.5) * (_27570 - _27521));\n                    }\n                    _27464 = _27439 ? false : _35734;\n                    _27465 = _27462;\n                }\n                else\n                {\n                    _27464 = _35734;\n                    _27465 = _26469;\n                }\n                float _27509 = 0.0;\n                if (_27464)\n                {\n                    float _27506 = 0.0;\n                    if (_27619 >= _21771)\n                    {\n                        float _27494 = _21771 - _27570;\n                        _27506 = _27465 + (((_27578 + mix(_27578, _27627, _27494 / (_27619 - _27570))) * 0.5) * _27494);\n                    }\n                    else\n                    {\n                        _27506 = _27465 + (((_27578 + _27627) * 0.5) * (_27619 - _27570));\n                    }\n                    _27509 = _27506;\n                }\n                else\n                {\n                    _27509 = _27465;\n                }\n                bool _17262 = _27535 >= _21771;\n                float _26471 = 0.0;\n                if (_17262)\n                {\n                    float _17268 = _21771 - _7815;\n                    _26471 = ((_7828 + mix(_7828, _27543, _17268 / (_27535 - _7815))) * 0.5) * _17268;\n                }\n                else\n                {\n                    _26471 = ((_7828 + _27543) * 0.5) * (_27535 - _7815);\n                }\n                bool _35736 = _17262 ? false : true;\n                bool _27376 = false;\n                float _27377 = 0.0;\n                if (_35736)\n                {\n                    bool _27351 = _27584 >= _21771;\n                    float _27374 = 0.0;\n                    if (_27351)\n                    {\n                        float _27362 = _21771 - _27535;\n                        _27374 = _26471 + (((_27543 + mix(_27543, _27592, _27362 / (_27584 - _27535))) * 0.5) * _27362);\n                    }\n                    else\n                    {\n                        _27374 = _26471 + (((_27543 + _27592) * 0.5) * (_27584 - _27535));\n                    }\n                    _27376 = _27351 ? false : _35736;\n                    _27377 = _27374;\n                }\n                else\n                {\n                    _27376 = _35736;\n                    _27377 = _26471;\n                }\n                float _27421 = 0.0;\n                if (_27376)\n                {\n                    float _27418 = 0.0;\n                    if (_27633 >= _21771)\n                    {\n                        float _27406 = _21771 - _27584;\n                        _27418 = _27377 + (((_27592 + mix(_27592, _27641, _27406 / (_27633 - _27584))) * 0.5) * _27406);\n                    }\n                    else\n                    {\n                        _27418 = _27377 + (((_27592 + _27641) * 0.5) * (_27633 - _27584));\n                    }\n                    _27421 = _27418;\n                }\n                else\n                {\n                    _27421 = _27377;\n                }\n                bool _17347 = _27549 >= _21771;\n                float _26473 = 0.0;\n                if (_17347)\n                {\n                    float _17353 = _21771 - _7839;\n                    _26473 = ((_7852 + mix(_7852, _27557, _17353 / (_27549 - _7839))) * 0.5) * _17353;\n                }\n                else\n                {\n                    _26473 = ((_7852 + _27557) * 0.5) * (_27549 - _7839);\n                }\n                bool _35738 = _17347 ? false : true;\n                bool _27288 = false;\n                float _27289 = 0.0;\n                if (_35738)\n                {\n                    bool _27263 = _27598 >= _21771;\n                    float _27286 = 0.0;\n                    if (_27263)\n                    {\n                        float _27274 = _21771 - _27549;\n                        _27286 = _26473 + (((_27557 + mix(_27557, _27606, _27274 / (_27598 - _27549))) * 0.5) * _27274);\n                    }\n                    else\n                    {\n                        _27286 = _26473 + (((_27557 + _27606) * 0.5) * (_27598 - _27549));\n                    }\n                    _27288 = _27263 ? false : _35738;\n                    _27289 = _27286;\n                }\n                else\n                {\n                    _27288 = _35738;\n                    _27289 = _26473;\n                }\n                float _27333 = 0.0;\n                if (_27288)\n                {\n                    float _27330 = 0.0;\n                    if (_27647 >= _21771)\n                    {\n                        float _27318 = _21771 - _27598;\n                        _27330 = _27289 + (((_27606 + mix(_27606, _27655, _27318 / (_27647 - _27598))) * 0.5) * _27318);\n                    }\n                    else\n                    {\n                        _27330 = _27289 + (((_27606 + _27655) * 0.5) * (_27647 - _27598));\n                    }\n                    _27333 = _27330;\n                }\n                else\n                {\n                    _27333 = _27289;\n                }\n                _23305 = _27509;\n                _23296 = _27421;\n                _23294 = _27333;\n            }\n            vec3 _23685 = vec3(0.0);\n            if (u_rotationByLife[0].y > 0.0)\n            {\n                vec3 _23688 = vec3(0.0);\n                if (u_renderer[0].x == 0.0)\n                {\n                    _23688 = vec3(_23305, _23296, _23294);\n                }\n                else\n                {\n                    _23688 = vec3(0.0);\n                }\n                vec3 _23687 = vec3(0.0);\n                if ((u_renderer[0].x == 2.0) || (u_renderer[0].x == 3.0))\n                {\n                    _23687 = vec3(0.0, 0.0, _23294);\n                }\n                else\n                {\n                    _23687 = _23688;\n                }\n                vec3 _23686 = vec3(0.0);\n                if (u_renderer[0].x == 4.0)\n                {\n                    _23686 = vec3(_23305, _23296, _23294);\n                }\n                else\n                {\n                    _23686 = _23687;\n                }\n                _23685 = _23686;\n            }\n            else\n            {\n                vec3 _23703 = vec3(0.0);\n                if (u_renderer[0].x == 4.0)\n                {\n                    vec3 _23704 = vec3(0.0);\n                    if (u_emitterShape == 1.0)\n                    {\n                        vec3 _23705 = vec3(0.0);\n                        if (u_common[1].w > 0.0)\n                        {\n                            _23705 = vec3(0.0, 0.0, (-1.0) * _23294);\n                        }\n                        else\n                        {\n                            _23705 = vec3(0.0, (-1.0) * _23296, 0.0);\n                        }\n                        _23704 = _23705;\n                    }\n                    else\n                    {\n                        _23704 = vec3(0.0, 0.0, _23294);\n                    }\n                    _23703 = _23704;\n                }\n                else\n                {\n                    _23703 = vec3(0.0);\n                }\n                vec3 _23702 = vec3(0.0);\n                if (((u_renderer[0].x == 0.0) || (u_renderer[0].x == 2.0)) || (u_renderer[0].x == 3.0))\n                {\n                    _23702 = vec3(0.0, 0.0, _23294);\n                }\n                else\n                {\n                    _23702 = _23703;\n                }\n                _23685 = _23702;\n            }\n            _23523 = _23685;\n        }\n        else\n        {\n            _23523 = vec3(0.0);\n        }\n        vec3 _24971 = vec3(0.0);\n        if (_6416)\n        {\n            float _7988 = radians(_23323);\n            vec3 _24972 = vec3(0.0);\n            if (u_common[1].w > 0.0)\n            {\n                float _7996 = _23499.x * _7988;\n                vec3 _21443 = _35654;\n                _21443.x = _23523.x + _7996;\n                vec3 _21447 = _21443;\n                _21447.y = _23523.y + _7996;\n                vec3 _21451 = _21447;\n                _21451.z = _23523.z + _7996;\n                _24972 = _21451;\n            }\n            else\n            {\n                vec3 _21455 = _23523;\n                _21455.z = _23523.z + (_23499.x * _7988);\n                _24972 = _21455;\n            }\n            _24971 = _24972;\n        }\n        else\n        {\n            _24971 = _23523;\n        }\n        bool _8030 = u_renderer[0].x == 0.0;\n        bool _8033 = u_renderer[0].x == 4.0;\n        mat4 _24954 = mat4(vec4(0.0), vec4(0.0), vec4(0.0), vec4(0.0));\n        if (_8030 || _8033)\n        {\n            mat4 _24955 = mat4(vec4(0.0), vec4(0.0), vec4(0.0), vec4(0.0));\n            if (u_renderer[0].y == 1.0)\n            {\n                _24955 = _24211 * _8799;\n            }\n            else\n            {\n                mat4 _24956 = mat4(vec4(0.0), vec4(0.0), vec4(0.0), vec4(0.0));\n                if (u_renderer[0].y == 2.0)\n                {\n                    _24956 = _24211 * _24398;\n                }\n                else\n                {\n                    mat4 _24957 = mat4(vec4(0.0), vec4(0.0), vec4(0.0), vec4(0.0));\n                    if (u_renderer[0].y == 3.0)\n                    {\n                        vec3 _8074 = normalize(vec3(u_viewInverse[3].x, u_viewInverse[3].y, u_viewInverse[3].z) - (_23713 * vec4(_7314, _22138.yz, 1.0)).xyz);\n                        vec3 _8078 = normalize(cross(vec3(0.0, 1.0, 0.0), _8074));\n                        mat4 _21457 = mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0));\n                        _21457[0] = vec4(_8078, 0.0);\n                        mat4 _21459 = _21457;\n                        _21459[1] = vec4(normalize(cross(_8074, _8078)), 0.0);\n                        mat4 _21461 = _21459;\n                        _21461[2] = vec4(_8074, 0.0);\n                        _24957 = _21461;\n                    }\n                    else\n                    {\n                        vec3 _8118 = vec3(1.0) / (vec3(length(vec3(u_view[0].xyz)), length(vec3(u_view[1].xyz)), length(vec3(u_view[2].xyz))) + vec3(9.9999997473787516355514526367188e-06));\n                        mat4 _8124 = u_view * mat4(vec4(_8118.x, 0.0, 0.0, 0.0), vec4(0.0, _8118.y, 0.0, 0.0), vec4(0.0, 0.0, _8118.z, 0.0), vec4(0.0, 0.0, 0.0, 1.0));\n                        float _17469 = _8124[0].x;\n                        float _17471 = _8124[0].y;\n                        float _17473 = _8124[0].z;\n                        float _17475 = _8124[0].w;\n                        float _17477 = _8124[1].x;\n                        float _17479 = _8124[1].y;\n                        float _17481 = _8124[1].z;\n                        float _17483 = _8124[1].w;\n                        float _17485 = _8124[2].x;\n                        float _17487 = _8124[2].y;\n                        float _17489 = _8124[2].z;\n                        float _17491 = _8124[2].w;\n                        float _17493 = _8124[3].x;\n                        float _17495 = _8124[3].y;\n                        float _17497 = _8124[3].z;\n                        float _17499 = _8124[3].w;\n                        float _17506 = (_17469 * _17479) - (_17471 * _17477);\n                        float _17513 = (_17469 * _17481) - (_17473 * _17477);\n                        float _17520 = (_17469 * _17483) - (_17475 * _17477);\n                        float _17527 = (_17471 * _17481) - (_17473 * _17479);\n                        float _17534 = (_17471 * _17483) - (_17475 * _17479);\n                        float _17541 = (_17473 * _17483) - (_17475 * _17481);\n                        float _17548 = (_17485 * _17495) - (_17487 * _17493);\n                        float _17555 = (_17485 * _17497) - (_17489 * _17493);\n                        float _17562 = (_17485 * _17499) - (_17491 * _17493);\n                        float _17569 = (_17487 * _17497) - (_17489 * _17495);\n                        float _17576 = (_17487 * _17499) - (_17491 * _17495);\n                        float _17583 = (_17489 * _17499) - (_17491 * _17497);\n                        _24957 = mat4(vec4(((_17479 * _17583) - (_17481 * _17576)) + (_17483 * _17569), ((_17473 * _17576) - (_17471 * _17583)) - (_17475 * _17569), ((_17495 * _17541) - (_17497 * _17534)) + (_17499 * _17527), ((_17489 * _17534) - (_17487 * _17541)) - (_17491 * _17527)), vec4(((_17481 * _17562) - (_17477 * _17583)) - (_17483 * _17555), ((_17469 * _17583) - (_17473 * _17562)) + (_17475 * _17555), ((_17497 * _17520) - (_17493 * _17541)) - (_17499 * _17513), ((_17485 * _17541) - (_17489 * _17520)) + (_17491 * _17513)), vec4(((_17477 * _17576) - (_17479 * _17562)) + (_17483 * _17548), ((_17471 * _17562) - (_17469 * _17576)) - (_17475 * _17548), ((_17493 * _17534) - (_17495 * _17520)) + (_17499 * _17506), ((_17487 * _17520) - (_17485 * _17534)) - (_17491 * _17506)), vec4(((_17479 * _17555) - (_17477 * _17569)) - (_17481 * _17548), ((_17469 * _17569) - (_17471 * _17555)) + (_17473 * _17548), ((_17495 * _17513) - (_17493 * _17527)) - (_17497 * _17506), ((_17485 * _17527) - (_17487 * _17513)) + (_17489 * _17506))) * (1.0 / ((((((_17506 * _17583) - (_17513 * _17576)) + (_17520 * _17569)) + (_17527 * _17562)) - (_17534 * _17555)) + (_17541 * _17548)));\n                    }\n                    _24956 = _24957;\n                }\n                _24955 = _24956;\n            }\n            _24954 = _24955;\n        }\n        else\n        {\n            _24954 = mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0));\n        }\n        mat4 _24959 = mat4(vec4(0.0), vec4(0.0), vec4(0.0), vec4(0.0));\n        vec3 _24965 = vec3(0.0);\n        if (u_renderer[0].x == 1.0)\n        {\n            vec3 _8168 = normalize((_23713 * vec4(_7310, _22128.yz, 0.0)).xyz) * (-1.0);\n            vec3 _8172 = normalize(cross(normalize(vec3(u_viewInverse[3].x, u_viewInverse[3].y, u_viewInverse[3].z) - (_23713 * vec4(_7314, _22138.yz, 1.0)).xyz), _8168));\n            int _8194 = int(sign(u_renderer[1].y));\n            int _24952 = 0;\n            if (_8194 == 0)\n            {\n                _24952 = int(sign(u_renderer[1].z));\n            }\n            else\n            {\n                _24952 = _8194;\n            }\n            vec3 _21496 = _35654;\n            _21496.x = a_subPosition.x * ((u_renderer[1].y * length(_21150)) + (u_renderer[1].z * _24582.x));\n            vec3 _21500 = _21496;\n            _21500.y = a_subPosition.y * (_24582.y * float(_24952));\n            vec3 _21504 = _21500;\n            _21504.z = a_subPosition.z * _24582.z;\n            mat4 _21506 = _24954;\n            _21506[0] = vec4(_8168, 0.0);\n            mat4 _21508 = _21506;\n            _21508[1] = vec4(_8172, 0.0);\n            mat4 _21510 = _21508;\n            _21510[2] = vec4(normalize(cross(_8172, _8168)), 0.0);\n            _24965 = _21504;\n            _24959 = _21510;\n        }\n        else\n        {\n            _24965 = a_subPosition * _24582;\n            _24959 = _24954;\n        }\n        mat4 _24961 = mat4(vec4(0.0), vec4(0.0), vec4(0.0), vec4(0.0));\n        if (u_renderer[0].x == 2.0)\n        {\n            mat4 _21518 = _24959;\n            _21518[0] = vec4(-0.699999988079071044921875, 0.0, 0.0, 0.0);\n            mat4 _21520 = _21518;\n            _21520[1] = vec4(cross(vec3(0.0, 1.0, 0.0), vec3(-1.0, 0.0, 0.0)) * 0.699999988079071044921875, 0.0);\n            mat4 _21522 = _21520;\n            _21522[2] = vec4(0.0, 0.699999988079071044921875, 0.0, 0.0);\n            _24961 = _21522;\n        }\n        else\n        {\n            _24961 = _24959;\n        }\n        mat4 _24989 = mat4(vec4(0.0), vec4(0.0), vec4(0.0), vec4(0.0));\n        if (u_renderer[0].x == 3.0)\n        {\n            vec3 _8312 = cross(vec3(0.0, 1.0, 0.0), vec4(u_viewInverse[2].x, u_viewInverse[2].y, u_viewInverse[2].z, 1.0).xyz);\n            mat4 _21530 = _24961;\n            _21530[0] = vec4(_8312 * 0.699999988079071044921875, 0.0);\n            mat4 _21532 = _21530;\n            _21532[1] = vec4(0.0, 0.699999988079071044921875, 0.0, 0.0);\n            mat4 _21534 = _21532;\n            _21534[2] = vec4(cross(_8312, vec3(0.0, 1.0, 0.0)) * 0.699999988079071044921875, 0.0);\n            _24989 = _21534;\n        }\n        else\n        {\n            _24989 = _24961;\n        }\n        vec4 _8355 = vec4(_24965, 1.0);\n        vec4 _25010 = vec4(0.0);\n        if (!(u_renderer[0].x == 1.0))\n        {\n            vec4 _25011 = vec4(0.0);\n            if (!(u_renderer[0].x == 4.0))\n            {\n                bool _8386 = _8030 && (u_common[1].w <= 0.0);\n                bvec4 _35741 = bvec4(_8386);\n                float _17810 = cos(a_startRotation.y);\n                float _17813 = sin(a_startRotation.y);\n                float _17830 = -a_startRotation.x;\n                float _17831 = cos(_17830);\n                float _17835 = sin(_17830);\n                float _17852 = cos(a_startRotation.z);\n                float _17855 = sin(a_startRotation.z);\n                mat4 _17803 = mat4(vec4(_17810, 0.0, -_17813, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(_17813, 0.0, _17810, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * (mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, _17831, _17835, 0.0), vec4(0.0, -_17835, _17831, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * mat4(vec4(_17852, _17855, 0.0, 0.0), vec4(-_17855, _17852, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)));\n                vec4 _8392 = _17803 * vec4(_35741.x ? vec4(0.0, 0.0, 1.0, 0.0).x : vec4(0.0, 0.0, -1.0, 0.0).x, _35741.y ? vec4(0.0, 0.0, 1.0, 0.0).y : vec4(0.0, 0.0, -1.0, 0.0).y, _35741.z ? vec4(0.0, 0.0, 1.0, 0.0).z : vec4(0.0, 0.0, -1.0, 0.0).z, _35741.w ? vec4(0.0, 0.0, 1.0, 0.0).w : vec4(0.0, 0.0, -1.0, 0.0).w);\n                float _17870 = _8392.x;\n                float _17873 = _8392.y;\n                float _17877 = _8392.z;\n                float _17880 = sqrt((pow(_17870, 2.0) + pow(_17873, 2.0)) + pow(_17877, 2.0));\n                float _17884 = _17870 / _17880;\n                float _17888 = _17873 / _17880;\n                float _17892 = _17877 / _17880;\n                float _17911 = cos(_24971.z);\n                float _17913 = sin(_24971.z);\n                float _17922 = _17884 * _17884;\n                float _17926 = 1.0 - _17922;\n                float _17932 = _17884 * _17888;\n                float _17934 = 1.0 - _17911;\n                float _17935 = _17932 * _17934;\n                float _17938 = _17892 * _17913;\n                float _17942 = _17884 * _17892;\n                float _17945 = _17942 * _17934;\n                float _17948 = _17888 * _17913;\n                float _17962 = _17888 * _17888;\n                float _17966 = 1.0 - _17962;\n                float _17972 = _17888 * _17892;\n                float _17975 = _17972 * _17934;\n                float _17978 = _17884 * _17913;\n                float _18002 = _17892 * _17892;\n                float _18006 = 1.0 - _18002;\n                mat4 _24978 = mat4(vec4(0.0), vec4(0.0), vec4(0.0), vec4(0.0));\n                if (_8386)\n                {\n                    float _8408 = (-1.0) * _24971.z;\n                    float _18041 = cos(_8408);\n                    float _18043 = sin(_8408);\n                    float _18064 = 1.0 - _18041;\n                    float _18065 = _17932 * _18064;\n                    float _18068 = _17892 * _18043;\n                    float _18075 = _17942 * _18064;\n                    float _18078 = _17888 * _18043;\n                    float _18105 = _17972 * _18064;\n                    float _18108 = _17884 * _18043;\n                    _24978 = mat4(vec4(_17922 + (_17926 * _18041), _18065 + _18068, _18075 - _18078, 0.0), vec4(_18065 - _18068, _17962 + (_17966 * _18041), _18105 + _18108, 0.0), vec4(_18075 + _18078, _18105 - _18108, _18002 + (_18006 * _18041), 0.0), vec4(0.0, 0.0, 0.0, 1.0));\n                }\n                else\n                {\n                    _24978 = mat4(vec4(_17922 + (_17926 * _17911), _17935 + _17938, _17945 - _17948, 0.0), vec4(_17935 - _17938, _17962 + (_17966 * _17911), _17975 + _17978, 0.0), vec4(_17945 + _17948, _17975 - _17978, _18002 + (_18006 * _17911), 0.0), vec4(0.0, 0.0, 0.0, 1.0));\n                }\n                float _18173 = cos(_24971.y);\n                float _18176 = sin(_24971.y);\n                float _18193 = -_24971.x;\n                float _18194 = cos(_18193);\n                float _18198 = sin(_18193);\n                _25011 = (mat4(vec4(_18173, 0.0, -_18176, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(_18176, 0.0, _18173, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * (mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, _18194, _18198, 0.0), vec4(0.0, -_18198, _18194, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(-0.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)))) * (_24978 * (_17803 * _8355));\n            }\n            else\n            {\n                vec4 _25012 = vec4(0.0);\n                if (u_common[1].w == 1.0)\n                {\n                    vec4 _25013 = vec4(0.0);\n                    if (u_emitterShape == 1.0)\n                    {\n                        float _8445 = (-1.0) * a_startRotation.y;\n                        float _8448 = (-1.0) * a_startRotation.z;\n                        float _18323 = cos(_8445);\n                        float _18326 = sin(_8445);\n                        float _18344 = cos(a_startRotation.x);\n                        float _18348 = sin(a_startRotation.x);\n                        float _18365 = cos(_8448);\n                        float _18368 = sin(_8448);\n                        mat4 _18316 = mat4(vec4(_18323, 0.0, -_18326, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(_18326, 0.0, _18323, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * (mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, _18344, _18348, 0.0), vec4(0.0, -_18348, _18344, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * mat4(vec4(_18365, _18368, 0.0, 0.0), vec4(-_18368, _18365, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)));\n                        vec4 _8453 = _18316 * vec4(0.0, 0.0, -1.0, 0.0);\n                        float _18383 = _8453.x;\n                        float _18386 = _8453.y;\n                        float _18390 = _8453.z;\n                        float _18393 = sqrt((pow(_18383, 2.0) + pow(_18386, 2.0)) + pow(_18390, 2.0));\n                        float _18397 = _18383 / _18393;\n                        float _18401 = _18386 / _18393;\n                        float _18405 = _18390 / _18393;\n                        float _8457 = (-1.0) * _24971.z;\n                        float _18424 = cos(_8457);\n                        float _18426 = sin(_8457);\n                        float _18435 = _18397 * _18397;\n                        float _18447 = 1.0 - _18424;\n                        float _18448 = (_18397 * _18401) * _18447;\n                        float _18451 = _18405 * _18426;\n                        float _18458 = (_18397 * _18405) * _18447;\n                        float _18461 = _18401 * _18426;\n                        float _18475 = _18401 * _18401;\n                        float _18488 = (_18401 * _18405) * _18447;\n                        float _18491 = _18397 * _18426;\n                        float _18515 = _18405 * _18405;\n                        float _18556 = cos(_24971.y);\n                        float _18559 = sin(_24971.y);\n                        float _18576 = -_24971.x;\n                        float _18577 = cos(_18576);\n                        float _18581 = sin(_18576);\n                        _25013 = (mat4(vec4(_18556, 0.0, -_18559, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(_18559, 0.0, _18556, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * (mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, _18577, _18581, 0.0), vec4(0.0, -_18581, _18577, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(-0.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)))) * (mat4(vec4(_18435 + ((1.0 - _18435) * _18424), _18448 + _18451, _18458 - _18461, 0.0), vec4(_18448 - _18451, _18475 + ((1.0 - _18475) * _18424), _18488 + _18491, 0.0), vec4(_18458 + _18461, _18488 - _18491, _18515 + ((1.0 - _18515) * _18424), 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * (_18316 * _8355));\n                    }\n                    else\n                    {\n                        float _8475 = (-1.0) * a_startRotation.y;\n                        float _8478 = (-1.0) * a_startRotation.z;\n                        float _18706 = cos(_8475);\n                        float _18709 = sin(_8475);\n                        float _18727 = cos(a_startRotation.x);\n                        float _18731 = sin(a_startRotation.x);\n                        float _18748 = cos(_8478);\n                        float _18751 = sin(_8478);\n                        mat4 _18699 = mat4(vec4(_18706, 0.0, -_18709, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(_18709, 0.0, _18706, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * (mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, _18727, _18731, 0.0), vec4(0.0, -_18731, _18727, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * mat4(vec4(_18748, _18751, 0.0, 0.0), vec4(-_18751, _18748, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)));\n                        vec4 _8483 = _18699 * vec4(0.0, 0.0, -1.0, 0.0);\n                        float _18766 = _8483.x;\n                        float _18769 = _8483.y;\n                        float _18773 = _8483.z;\n                        float _18776 = sqrt((pow(_18766, 2.0) + pow(_18769, 2.0)) + pow(_18773, 2.0));\n                        float _18780 = _18766 / _18776;\n                        float _18784 = _18769 / _18776;\n                        float _18788 = _18773 / _18776;\n                        float _18807 = cos(_24971.z);\n                        float _18809 = sin(_24971.z);\n                        float _18818 = _18780 * _18780;\n                        float _18830 = 1.0 - _18807;\n                        float _18831 = (_18780 * _18784) * _18830;\n                        float _18834 = _18788 * _18809;\n                        float _18841 = (_18780 * _18788) * _18830;\n                        float _18844 = _18784 * _18809;\n                        float _18858 = _18784 * _18784;\n                        float _18871 = (_18784 * _18788) * _18830;\n                        float _18874 = _18780 * _18809;\n                        float _18898 = _18788 * _18788;\n                        float _18939 = cos(_24971.y);\n                        float _18942 = sin(_24971.y);\n                        float _18959 = -_24971.x;\n                        float _18960 = cos(_18959);\n                        float _18964 = sin(_18959);\n                        _25013 = (mat4(vec4(_18939, 0.0, -_18942, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(_18942, 0.0, _18939, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * (mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, _18960, _18964, 0.0), vec4(0.0, -_18964, _18960, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(-0.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)))) * (mat4(vec4(_18818 + ((1.0 - _18818) * _18807), _18831 + _18834, _18841 - _18844, 0.0), vec4(_18831 - _18834, _18858 + ((1.0 - _18858) * _18807), _18871 + _18874, 0.0), vec4(_18841 + _18844, _18871 - _18874, _18898 + ((1.0 - _18898) * _18807), 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * (_18699 * _8355));\n                    }\n                    _25012 = _25013;\n                }\n                else\n                {\n                    vec4 _25014 = vec4(0.0);\n                    if (u_emitterShape == 1.0)\n                    {\n                        float _8509 = (-1.0) * a_startRotation.y;\n                        float _8512 = (-1.0) * a_startRotation.z;\n                        float _19089 = cos(_8509);\n                        float _19092 = sin(_8509);\n                        float _19110 = cos(a_startRotation.x);\n                        float _19114 = sin(a_startRotation.x);\n                        float _19131 = cos(_8512);\n                        float _19134 = sin(_8512);\n                        mat4 _19082 = mat4(vec4(_19089, 0.0, -_19092, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(_19092, 0.0, _19089, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * (mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, _19110, _19114, 0.0), vec4(0.0, -_19114, _19110, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * mat4(vec4(_19131, _19134, 0.0, 0.0), vec4(-_19134, _19131, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)));\n                        vec4 _8517 = _19082 * vec4(0.0, 0.0, 1.0, 0.0);\n                        float _19149 = _8517.x;\n                        float _19152 = _8517.y;\n                        float _19156 = _8517.z;\n                        float _19159 = sqrt((pow(_19149, 2.0) + pow(_19152, 2.0)) + pow(_19156, 2.0));\n                        float _19163 = _19149 / _19159;\n                        float _19167 = _19152 / _19159;\n                        float _19171 = _19156 / _19159;\n                        float _8521 = (-1.0) * _24971.z;\n                        float _19190 = cos(_8521);\n                        float _19192 = sin(_8521);\n                        float _19201 = _19163 * _19163;\n                        float _19213 = 1.0 - _19190;\n                        float _19214 = (_19163 * _19167) * _19213;\n                        float _19217 = _19171 * _19192;\n                        float _19224 = (_19163 * _19171) * _19213;\n                        float _19227 = _19167 * _19192;\n                        float _19241 = _19167 * _19167;\n                        float _19254 = (_19167 * _19171) * _19213;\n                        float _19257 = _19163 * _19192;\n                        float _19281 = _19171 * _19171;\n                        float _19322 = cos(_24971.y);\n                        float _19325 = sin(_24971.y);\n                        float _19342 = -_24971.x;\n                        float _19343 = cos(_19342);\n                        float _19347 = sin(_19342);\n                        _25014 = (mat4(vec4(_19322, 0.0, -_19325, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(_19325, 0.0, _19322, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * (mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, _19343, _19347, 0.0), vec4(0.0, -_19347, _19343, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(-0.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)))) * (mat4(vec4(_19201 + ((1.0 - _19201) * _19190), _19214 + _19217, _19224 - _19227, 0.0), vec4(_19214 - _19217, _19241 + ((1.0 - _19241) * _19190), _19254 + _19257, 0.0), vec4(_19224 + _19227, _19254 - _19257, _19281 + ((1.0 - _19281) * _19190), 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * (_19082 * _8355));\n                    }\n                    else\n                    {\n                        float _8539 = (-1.0) * a_startRotation.y;\n                        float _8542 = (-1.0) * a_startRotation.z;\n                        float _19472 = cos(_8539);\n                        float _19475 = sin(_8539);\n                        float _19493 = cos(a_startRotation.x);\n                        float _19497 = sin(a_startRotation.x);\n                        float _19514 = cos(_8542);\n                        float _19517 = sin(_8542);\n                        mat4 _19465 = mat4(vec4(_19472, 0.0, -_19475, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(_19475, 0.0, _19472, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * (mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, _19493, _19497, 0.0), vec4(0.0, -_19497, _19493, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * mat4(vec4(_19514, _19517, 0.0, 0.0), vec4(-_19517, _19514, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)));\n                        vec4 _8547 = _19465 * vec4(0.0, 0.0, -1.0, 0.0);\n                        float _19532 = _8547.x;\n                        float _19535 = _8547.y;\n                        float _19539 = _8547.z;\n                        float _19542 = sqrt((pow(_19532, 2.0) + pow(_19535, 2.0)) + pow(_19539, 2.0));\n                        float _19546 = _19532 / _19542;\n                        float _19550 = _19535 / _19542;\n                        float _19554 = _19539 / _19542;\n                        float _19573 = cos(_24971.z);\n                        float _19575 = sin(_24971.z);\n                        float _19584 = _19546 * _19546;\n                        float _19596 = 1.0 - _19573;\n                        float _19597 = (_19546 * _19550) * _19596;\n                        float _19600 = _19554 * _19575;\n                        float _19607 = (_19546 * _19554) * _19596;\n                        float _19610 = _19550 * _19575;\n                        float _19624 = _19550 * _19550;\n                        float _19637 = (_19550 * _19554) * _19596;\n                        float _19640 = _19546 * _19575;\n                        float _19664 = _19554 * _19554;\n                        float _19705 = cos(_24971.y);\n                        float _19708 = sin(_24971.y);\n                        float _19725 = -_24971.x;\n                        float _19726 = cos(_19725);\n                        float _19730 = sin(_19725);\n                        _25014 = (mat4(vec4(_19705, 0.0, -_19708, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(_19708, 0.0, _19705, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * (mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, _19726, _19730, 0.0), vec4(0.0, -_19730, _19726, 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(-0.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)))) * (mat4(vec4(_19584 + ((1.0 - _19584) * _19573), _19597 + _19600, _19607 - _19610, 0.0), vec4(_19597 - _19600, _19624 + ((1.0 - _19624) * _19573), _19637 + _19640, 0.0), vec4(_19607 + _19610, _19637 - _19640, _19664 + ((1.0 - _19664) * _19573), 0.0), vec4(0.0, 0.0, 0.0, 1.0)) * (_19465 * _8355));\n                    }\n                    _25012 = _25014;\n                }\n                _25011 = _25012;\n            }\n            _25010 = _25011;\n        }\n        else\n        {\n            _25010 = _8355;\n        }\n        bool _8568 = u_common[0].y == 1.0;\n        bool _8571 = u_common[0].y == 2.0;\n        mat4 _25015 = mat4(vec4(0.0), vec4(0.0), vec4(0.0), vec4(0.0));\n        if (_8568 || _8571)\n        {\n            vec3 _8579 = vec3(1.0) / (vec3(length(vec3(_23713[0].xyz)), length(vec3(_23713[1].xyz)), length(vec3(_23713[2].xyz))) + vec3(9.9999997473787516355514526367188e-06));\n            _25015 = _23713 * mat4(vec4(_8579.x, 0.0, 0.0, 0.0), vec4(0.0, _8579.y, 0.0, 0.0), vec4(0.0, 0.0, _8579.z, 0.0), vec4(0.0, 0.0, 0.0, 1.0));\n        }\n        else\n        {\n            _25015 = mat4(vec4((0.0 / 0.0)), vec4((0.0 / 0.0)), vec4((0.0 / 0.0)), vec4((0.0 / 0.0)));\n        }\n        mat4 _21709 = mat4(vec4(0.0), vec4(0.0), vec4(0.0), vec4(0.0));\n        _21709[0] = _24989[0];\n        mat4 _21712 = _21709;\n        _21712[1] = _24989[1];\n        mat4 _21715 = _21712;\n        _21715[2] = _24989[2];\n        mat4 _21717 = _21715;\n        _21717[3].w = 1.0;\n        vec4 _25016 = vec4(0.0);\n        if (_8033)\n        {\n            vec4 _25017 = vec4(0.0);\n            if (_8571)\n            {\n                _25017 = (_23713 * vec4(_7314, _22138.yz, 1.0)) + vec4((_21717 * _25010).xyz, 0.0);\n            }\n            else\n            {\n                vec4 _25018 = vec4(0.0);\n                if (_8568)\n                {\n                    mat4 _19902 = mat4(vec4(u_common[1].x, 0.0, 0.0, 0.0), vec4(0.0, u_common[1].y, 0.0, 0.0), vec4(0.0, 0.0, u_common[1].z, 0.0), vec4(0.0, 0.0, 0.0, 1.0));\n                    _25018 = ((_25015 * _19902) * vec4(_7314, _22138.yz, 1.0)) + vec4((_21717 * (_19902 * _25010)).xyz, 0.0);\n                }\n                else\n                {\n                    _25018 = (_23713 * vec4(_7314, _22138.yz, 1.0)) + vec4((_21717 * (_8799 * _25010)).xyz, 0.0);\n                }\n                _25017 = _25018;\n            }\n            _25016 = _25017;\n        }\n        else\n        {\n            vec4 _25019 = vec4(0.0);\n            if (_8571)\n            {\n                _25019 = (_23713 * vec4(_7314, _22138.yz, 1.0)) + vec4((_21717 * _25010).xyz, 0.0);\n            }\n            else\n            {\n                vec4 _25020 = vec4(0.0);\n                if (_8568)\n                {\n                    mat4 _19917 = mat4(vec4(u_common[1].x, 0.0, 0.0, 0.0), vec4(0.0, u_common[1].y, 0.0, 0.0), vec4(0.0, 0.0, u_common[1].z, 0.0), vec4(0.0, 0.0, 0.0, 1.0));\n                    _25020 = ((_25015 * _19917) * vec4(_7314, _22138.yz, 1.0)) + vec4((_19917 * (_21717 * _25010)).xyz, 0.0);\n                }\n                else\n                {\n                    _25020 = (_23713 * vec4(_7314, _22138.yz, 1.0)) + vec4((_8799 * (_21717 * _25010)).xyz, 0.0);\n                }\n                _25019 = _25020;\n            }\n            _25016 = _25019;\n        }\n        float _20096 = fract(sin(a_randomSeed) * 43758.546875);\n        bool _19959 = u_colorAlphaByLife[0].y > 0.0;\n        bool _19962 = u_colorAlphaByLife[0].x > 0.0;\n        vec4 _25914 = vec4(0.0);\n        if (_6642 && (_19959 || _19962))\n        {\n            _25914 = _5859 * mix(texture2D(u_modulesBakedDataTex, vec2(_21773, (u_modulesBakedDataTexInfo[3].x + 0.5) * _6401)) * vec4(0.0039215688593685626983642578125), texture2D(u_modulesBakedDataTex, vec2(_21773, (u_modulesBakedDataTexInfo[3].y + 0.5) * _6401)) * vec4(0.0039215688593685626983642578125), vec4(_20096));\n        }\n        else\n        {\n            vec4 _25915 = vec4(0.0);\n            if (_19959)\n            {\n                bool _20133 = true && (u_colorAlphaByLife[2].x >= _21773);\n                vec4 _26578 = vec4(0.0);\n                if (_20133)\n                {\n                    vec4 _21729 = _25258;\n                    _21729.w = mix(u_colorAlphaByLife[1].y, u_colorAlphaByLife[2].y, (_21773 - u_colorAlphaByLife[1].x) / (u_colorAlphaByLife[2].x - u_colorAlphaByLife[1].x));\n                    _26578 = _21729;\n                }\n                else\n                {\n                    _26578 = _25258;\n                }\n                bool _35747 = _20133 ? false : true;\n                bool _26969 = _35747 && (u_colorAlphaByLife[3].x >= _21773);\n                vec4 _26984 = vec4(0.0);\n                if (_26969)\n                {\n                    vec4 _26981 = _26578;\n                    _26981.w = mix(u_colorAlphaByLife[2].y, u_colorAlphaByLife[3].y, (_21773 - u_colorAlphaByLife[2].x) / (u_colorAlphaByLife[3].x - u_colorAlphaByLife[2].x));\n                    _26984 = _26981;\n                }\n                else\n                {\n                    _26984 = _26578;\n                }\n                vec4 _27013 = vec4(0.0);\n                if ((_26969 ? false : _35747) && (u_colorAlphaByLife[4].x >= _21773))\n                {\n                    vec4 _27010 = _26984;\n                    _27010.w = mix(u_colorAlphaByLife[3].y, u_colorAlphaByLife[4].y, (_21773 - u_colorAlphaByLife[3].x) / (u_colorAlphaByLife[4].x - u_colorAlphaByLife[3].x));\n                    _27013 = _27010;\n                }\n                else\n                {\n                    _27013 = _26984;\n                }\n                bool _20174 = true && (u_colorRGBByLife[1].x >= _21773);\n                vec4 _26579 = vec4(0.0);\n                if (_20174)\n                {\n                    vec3 _20198 = mix(u_colorRGBByLife[0].yzw, u_colorRGBByLife[1].yzw, vec3((_21773 - u_colorRGBByLife[0].x) / (u_colorRGBByLife[1].x - u_colorRGBByLife[0].x)));\n                    _26579 = vec4(_20198.x, _20198.y, _20198.z, _27013.w);\n                }\n                else\n                {\n                    _26579 = _27013;\n                }\n                bool _35749 = _20174 ? false : true;\n                bool _26903 = _35749 && (u_colorRGBByLife[2].x >= _21773);\n                vec4 _26922 = vec4(0.0);\n                if (_26903)\n                {\n                    vec3 _26918 = mix(u_colorRGBByLife[1].yzw, u_colorRGBByLife[2].yzw, vec3((_21773 - u_colorRGBByLife[1].x) / (u_colorRGBByLife[2].x - u_colorRGBByLife[1].x)));\n                    _26922 = vec4(_26918.x, _26918.y, _26918.z, _26579.w);\n                }\n                else\n                {\n                    _26922 = _26579;\n                }\n                vec4 _26955 = vec4(0.0);\n                if ((_26903 ? false : _35749) && (u_colorRGBByLife[3].x >= _21773))\n                {\n                    vec3 _26951 = mix(u_colorRGBByLife[2].yzw, u_colorRGBByLife[3].yzw, vec3((_21773 - u_colorRGBByLife[2].x) / (u_colorRGBByLife[3].x - u_colorRGBByLife[2].x)));\n                    _26955 = vec4(_26951.x, _26951.y, _26951.z, _26922.w);\n                }\n                else\n                {\n                    _26955 = _26922;\n                }\n                bool _20237 = true && (u_colorAlphaByLife[6].x >= _21773);\n                vec4 _26592 = vec4(0.0);\n                if (_20237)\n                {\n                    vec4 _21737 = _25258;\n                    _21737.w = mix(u_colorAlphaByLife[5].y, u_colorAlphaByLife[6].y, (_21773 - u_colorAlphaByLife[5].x) / (u_colorAlphaByLife[6].x - u_colorAlphaByLife[5].x));\n                    _26592 = _21737;\n                }\n                else\n                {\n                    _26592 = _25258;\n                }\n                bool _35751 = _20237 ? false : true;\n                bool _26845 = _35751 && (u_colorAlphaByLife[7].x >= _21773);\n                vec4 _26860 = vec4(0.0);\n                if (_26845)\n                {\n                    vec4 _26857 = _26592;\n                    _26857.w = mix(u_colorAlphaByLife[6].y, u_colorAlphaByLife[7].y, (_21773 - u_colorAlphaByLife[6].x) / (u_colorAlphaByLife[7].x - u_colorAlphaByLife[6].x));\n                    _26860 = _26857;\n                }\n                else\n                {\n                    _26860 = _26592;\n                }\n                vec4 _26889 = vec4(0.0);\n                if ((_26845 ? false : _35751) && (u_colorAlphaByLife[8].x >= _21773))\n                {\n                    vec4 _26886 = _26860;\n                    _26886.w = mix(u_colorAlphaByLife[7].y, u_colorAlphaByLife[8].y, (_21773 - u_colorAlphaByLife[7].x) / (u_colorAlphaByLife[8].x - u_colorAlphaByLife[7].x));\n                    _26889 = _26886;\n                }\n                else\n                {\n                    _26889 = _26860;\n                }\n                bool _20278 = true && (u_colorRGBByLife[5].x >= _21773);\n                vec4 _26593 = vec4(0.0);\n                if (_20278)\n                {\n                    vec3 _20302 = mix(u_colorRGBByLife[4].yzw, u_colorRGBByLife[5].yzw, vec3((_21773 - u_colorRGBByLife[4].x) / (u_colorRGBByLife[5].x - u_colorRGBByLife[4].x)));\n                    _26593 = vec4(_20302.x, _20302.y, _20302.z, _26889.w);\n                }\n                else\n                {\n                    _26593 = _26889;\n                }\n                bool _35753 = _20278 ? false : true;\n                bool _26779 = _35753 && (u_colorRGBByLife[6].x >= _21773);\n                vec4 _26798 = vec4(0.0);\n                if (_26779)\n                {\n                    vec3 _26794 = mix(u_colorRGBByLife[5].yzw, u_colorRGBByLife[6].yzw, vec3((_21773 - u_colorRGBByLife[5].x) / (u_colorRGBByLife[6].x - u_colorRGBByLife[5].x)));\n                    _26798 = vec4(_26794.x, _26794.y, _26794.z, _26593.w);\n                }\n                else\n                {\n                    _26798 = _26593;\n                }\n                vec4 _26831 = vec4(0.0);\n                if ((_26779 ? false : _35753) && (u_colorRGBByLife[7].x >= _21773))\n                {\n                    vec3 _26827 = mix(u_colorRGBByLife[6].yzw, u_colorRGBByLife[7].yzw, vec3((_21773 - u_colorRGBByLife[6].x) / (u_colorRGBByLife[7].x - u_colorRGBByLife[6].x)));\n                    _26831 = vec4(_26827.x, _26827.y, _26827.z, _26798.w);\n                }\n                else\n                {\n                    _26831 = _26798;\n                }\n                _25915 = _5859 * mix(_26955, _26831, vec4(_20096));\n            }\n            else\n            {\n                vec4 _25916 = vec4(0.0);\n                if (_19962)\n                {\n                    bool _20341 = true && (u_colorAlphaByLife[2].x >= _21773);\n                    vec4 _26562 = vec4(0.0);\n                    if (_20341)\n                    {\n                        vec4 _21745 = _25258;\n                        _21745.w = mix(u_colorAlphaByLife[1].y, u_colorAlphaByLife[2].y, (_21773 - u_colorAlphaByLife[1].x) / (u_colorAlphaByLife[2].x - u_colorAlphaByLife[1].x));\n                        _26562 = _21745;\n                    }\n                    else\n                    {\n                        _26562 = _25258;\n                    }\n                    bool _35743 = _20341 ? false : true;\n                    bool _27159 = _35743 && (u_colorAlphaByLife[3].x >= _21773);\n                    vec4 _27174 = vec4(0.0);\n                    if (_27159)\n                    {\n                        vec4 _27171 = _26562;\n                        _27171.w = mix(u_colorAlphaByLife[2].y, u_colorAlphaByLife[3].y, (_21773 - u_colorAlphaByLife[2].x) / (u_colorAlphaByLife[3].x - u_colorAlphaByLife[2].x));\n                        _27174 = _27171;\n                    }\n                    else\n                    {\n                        _27174 = _26562;\n                    }\n                    vec4 _27203 = vec4(0.0);\n                    if ((_27159 ? false : _35743) && (u_colorAlphaByLife[4].x >= _21773))\n                    {\n                        vec4 _27200 = _27174;\n                        _27200.w = mix(u_colorAlphaByLife[3].y, u_colorAlphaByLife[4].y, (_21773 - u_colorAlphaByLife[3].x) / (u_colorAlphaByLife[4].x - u_colorAlphaByLife[3].x));\n                        _27203 = _27200;\n                    }\n                    else\n                    {\n                        _27203 = _27174;\n                    }\n                    bool _20382 = true && (u_colorRGBByLife[1].x >= _21773);\n                    vec4 _26563 = vec4(0.0);\n                    if (_20382)\n                    {\n                        vec3 _20406 = mix(u_colorRGBByLife[0].yzw, u_colorRGBByLife[1].yzw, vec3((_21773 - u_colorRGBByLife[0].x) / (u_colorRGBByLife[1].x - u_colorRGBByLife[0].x)));\n                        _26563 = vec4(_20406.x, _20406.y, _20406.z, _27203.w);\n                    }\n                    else\n                    {\n                        _26563 = _27203;\n                    }\n                    bool _35745 = _20382 ? false : true;\n                    bool _27093 = _35745 && (u_colorRGBByLife[2].x >= _21773);\n                    vec4 _27112 = vec4(0.0);\n                    if (_27093)\n                    {\n                        vec3 _27108 = mix(u_colorRGBByLife[1].yzw, u_colorRGBByLife[2].yzw, vec3((_21773 - u_colorRGBByLife[1].x) / (u_colorRGBByLife[2].x - u_colorRGBByLife[1].x)));\n                        _27112 = vec4(_27108.x, _27108.y, _27108.z, _26563.w);\n                    }\n                    else\n                    {\n                        _27112 = _26563;\n                    }\n                    vec4 _27145 = vec4(0.0);\n                    if ((_27093 ? false : _35745) && (u_colorRGBByLife[3].x >= _21773))\n                    {\n                        vec3 _27141 = mix(u_colorRGBByLife[2].yzw, u_colorRGBByLife[3].yzw, vec3((_21773 - u_colorRGBByLife[2].x) / (u_colorRGBByLife[3].x - u_colorRGBByLife[2].x)));\n                        _27145 = vec4(_27141.x, _27141.y, _27141.z, _27112.w);\n                    }\n                    else\n                    {\n                        _27145 = _27112;\n                    }\n                    _25916 = _5859 * _27145;\n                }\n                else\n                {\n                    _25916 = _5859;\n                }\n                _25915 = _25916;\n            }\n            _25914 = _25915;\n        }\n        vec2 _26160 = vec2(0.0);\n        if (u_textureSheetAnimation[0].x > 0.0)\n        {\n            float _20617 = fract(sin(a_randomSeed + 0.5) * 43758.546875);\n            float _35755 = (_21773 >= 1.0) ? 0.9900000095367431640625 : (_21773 - floor(_21773));\n            float _26152 = 0.0;\n            if (_6641 && (u_modulesBakedDataTexInfo[4].x >= 0.0))\n            {\n                vec4 _20482 = texture2D(u_modulesBakedDataTex, vec2(_35755, (u_modulesBakedDataTexInfo[4].x + 0.5) * _6401));\n                _26152 = floor(mix(u_textureSheetAnimation[1].x * _20482.x, u_textureSheetAnimation[1].x * _20482.y, _20617));\n            }\n            else\n            {\n                float _20515 = 1.0 - _20617;\n                float _26712 = u_textureSheetAnimation[1].x * ((_20617 * u_textureSheetAnimation[4].y) + (_20515 * u_textureSheetAnimation[4].z));\n                float _26738 = u_textureSheetAnimation[1].x * ((_20617 * u_textureSheetAnimation[5].y) + (_20515 * u_textureSheetAnimation[5].z));\n                bool _20642 = true && (u_textureSheetAnimation[4].x >= _35755);\n                float _26612 = 0.0;\n                if (_20642)\n                {\n                    _26612 = mix(u_textureSheetAnimation[1].x * ((_20617 * u_textureSheetAnimation[3].y) + (_20515 * u_textureSheetAnimation[3].z)), _26712, (_35755 - u_textureSheetAnimation[3].x) / (u_textureSheetAnimation[4].x - u_textureSheetAnimation[3].x));\n                }\n                else\n                {\n                    _26612 = 0.0;\n                }\n                bool _35756 = _20642 ? false : true;\n                bool _26645 = _35756 && (u_textureSheetAnimation[5].x >= _35755);\n                float _26659 = 0.0;\n                if (_26645)\n                {\n                    _26659 = mix(_26712, _26738, (_35755 - u_textureSheetAnimation[4].x) / (u_textureSheetAnimation[5].x - u_textureSheetAnimation[4].x));\n                }\n                else\n                {\n                    _26659 = _26612;\n                }\n                float _26687 = 0.0;\n                if ((_26645 ? false : _35756) && (u_textureSheetAnimation[6].x >= _35755))\n                {\n                    _26687 = mix(_26738, u_textureSheetAnimation[1].x * ((_20617 * u_textureSheetAnimation[6].y) + (_20515 * u_textureSheetAnimation[6].z)), (_35755 - u_textureSheetAnimation[5].x) / (u_textureSheetAnimation[6].x - u_textureSheetAnimation[5].x));\n                }\n                else\n                {\n                    _26687 = _26659;\n                }\n                _26152 = floor(_26687);\n            }\n            vec2 _26161 = vec2(0.0);\n            if (u_textureSheetAnimation[0].y < 2.0)\n            {\n                float _20553 = floor(mod(u_textureSheetAnimation[0].z + _26152, u_textureSheetAnimation[1].y * u_textureSheetAnimation[1].z));\n                vec2 _21756 = _35652;\n                _21756.x = (a_texCoord.x + mod(_20553, u_textureSheetAnimation[1].y)) / u_textureSheetAnimation[1].y;\n                vec2 _21759 = _21756;\n                _21759.y = (a_texCoord.y + floor((_20553 / u_textureSheetAnimation[1].y) + 0.100000001490116119384765625)) / u_textureSheetAnimation[1].z;\n                _26161 = _21759;\n            }\n            else\n            {\n                float _26159 = 0.0;\n                if (u_textureSheetAnimation[2].x > 0.0)\n                {\n                    _26159 = floor(a_randomSeed * u_textureSheetAnimation[1].z);\n                }\n                else\n                {\n                    _26159 = clamp(u_textureSheetAnimation[2].y, 0.0, u_textureSheetAnimation[1].z - 1.0);\n                }\n                vec2 _21762 = _35652;\n                _21762.x = (a_texCoord.x + mod(_26152, u_textureSheetAnimation[1].y)) / u_textureSheetAnimation[1].y;\n                vec2 _21765 = _21762;\n                _21765.y = (a_texCoord.y + _26159) / u_textureSheetAnimation[1].z;\n                _26161 = _21765;\n            }\n            _26160 = _26161;\n        }\n        else\n        {\n            _26160 = a_texCoord;\n        }\n        _26198 = _25016;\n        _26196 = _26160;\n        _26195 = _25914;\n    }\n    else\n    {\n        _26198 = vec4(1000000.0, 1000000.0, 1000000.0, 1.0);\n        _26196 = vec2(1.0);\n        _26195 = vec4(1.0);\n    }\n    gl_Position = u_projection * (u_view * _26198);\n    varying_TexCoord = (vec2(_26196.x, _26196.y - 1.0) * _MainTex_ST.xy) + vec2(_MainTex_ST.z, 1.0 - _MainTex_ST.w);\n    varying_Color = _26195;\n}\n\n","#version 100\n\nuniform mat4 u_view;\nuniform mat4 u_viewInverse;\nuniform mat4 u_vp;\nuniform mat4 u_projection;\nuniform mat4 u_lightSpaceMatrix;\nuniform vec4 u_fogInfos;\nuniform vec3 u_fogColor;\nuniform float u_gameTime;\nuniform float u_aspect;\nuniform vec3 u_ambientLight;\nuniform vec3 u_lightDir;\nuniform vec3 u_lightColor;\nuniform vec3 u_shadowColor;\nuniform float u_shadowStrength;\nuniform float u_shadowBias;\nuniform float u_lightWidthPCSS;\nuniform float u_blockSizePCSS;\nuniform vec4 u_csmFarBounds;\nuniform vec4 u_shadowTilingOffsets[4];\nuniform mat4 u_csmLightSpaceMatrices[4];\nuniform vec3 u_SH[9];\n\n\nuniform vec3 u_widthByLength[4];\nuniform vec4 u_colorRGBByLength[4];\nuniform vec2 u_colorAlphaByLength[4];\n\n\nuniform mat4 u_world;\nuniform vec4 u_lightMapScaleOffset;\nuniform float u_lightCountFA;\nuniform vec4 u_lightPosFA[4];\nuniform vec4 u_lightColorFA[4];\nuniform vec4 u_lightAttenFA[4];\nuniform vec4 u_spotDirFA[4];\n\n\nuniform vec4 _TintColor;\nuniform vec4 _MainTex_ST;\nuniform float _Bright;\n\n\nattribute vec3 a_position;\nattribute float a_sign;\nattribute vec3 a_prevDir;\nattribute vec3 a_nextDir;\nattribute float a_lengthPercent;\nattribute vec2 a_texCoord;\nattribute vec2 a_endCapInfo;\nattribute vec2 a_cornerInfo;\nvarying vec2 varying_TexCoord;\nvarying vec4 varying_Color;\n\nfloat _2364 = 0.0;\nvec4 _2373 = vec4(0.0);\n\nvoid main()\n{\n    bool _1667 = true && (u_widthByLength[1].x >= a_lengthPercent);\n    float _2383 = 0.0;\n    if (_1667)\n    {\n        _2383 = mix(u_widthByLength[0].y, u_widthByLength[1].y, (a_lengthPercent - u_widthByLength[0].x) / (u_widthByLength[1].x - u_widthByLength[0].x));\n    }\n    else\n    {\n        _2383 = _2364;\n    }\n    bool _2716 = _1667 ? false : true;\n    bool _2564 = _2716 && (u_widthByLength[2].x >= a_lengthPercent);\n    float _2578 = 0.0;\n    if (_2564)\n    {\n        _2578 = mix(u_widthByLength[1].y, u_widthByLength[2].y, (a_lengthPercent - u_widthByLength[1].x) / (u_widthByLength[2].x - u_widthByLength[1].x));\n    }\n    else\n    {\n        _2578 = _2383;\n    }\n    float _2606 = 0.0;\n    if ((_2564 ? false : _2716) && (u_widthByLength[3].x >= a_lengthPercent))\n    {\n        _2606 = mix(u_widthByLength[2].y, u_widthByLength[3].y, (a_lengthPercent - u_widthByLength[2].x) / (u_widthByLength[3].x - u_widthByLength[2].x));\n    }\n    else\n    {\n        _2606 = _2578;\n    }\n    bool _1723 = true && (u_colorAlphaByLength[1].x >= a_lengthPercent);\n    vec4 _2385 = vec4(0.0);\n    if (_1723)\n    {\n        vec4 _2321 = _2373;\n        _2321.w = mix(u_colorAlphaByLength[0].y, u_colorAlphaByLength[1].y, (a_lengthPercent - u_colorAlphaByLength[0].x) / (u_colorAlphaByLength[1].x - u_colorAlphaByLength[0].x));\n        _2385 = _2321;\n    }\n    else\n    {\n        _2385 = _2373;\n    }\n    bool _2718 = _1723 ? false : true;\n    bool _2467 = _2718 && (u_colorAlphaByLength[2].x >= a_lengthPercent);\n    vec4 _2482 = vec4(0.0);\n    if (_2467)\n    {\n        vec4 _2479 = _2385;\n        _2479.w = mix(u_colorAlphaByLength[1].y, u_colorAlphaByLength[2].y, (a_lengthPercent - u_colorAlphaByLength[1].x) / (u_colorAlphaByLength[2].x - u_colorAlphaByLength[1].x));\n        _2482 = _2479;\n    }\n    else\n    {\n        _2482 = _2385;\n    }\n    vec4 _2511 = vec4(0.0);\n    if ((_2467 ? false : _2718) && (u_colorAlphaByLength[3].x >= a_lengthPercent))\n    {\n        vec4 _2508 = _2482;\n        _2508.w = mix(u_colorAlphaByLength[2].y, u_colorAlphaByLength[3].y, (a_lengthPercent - u_colorAlphaByLength[2].x) / (u_colorAlphaByLength[3].x - u_colorAlphaByLength[2].x));\n        _2511 = _2508;\n    }\n    else\n    {\n        _2511 = _2482;\n    }\n    bool _1764 = true && (u_colorRGBByLength[1].x >= a_lengthPercent);\n    vec4 _2386 = vec4(0.0);\n    if (_1764)\n    {\n        vec3 _1788 = mix(u_colorRGBByLength[0].yzw, u_colorRGBByLength[1].yzw, vec3((a_lengthPercent - u_colorRGBByLength[0].x) / (u_colorRGBByLength[1].x - u_colorRGBByLength[0].x)));\n        _2386 = vec4(_1788.x, _1788.y, _1788.z, _2511.w);\n    }\n    else\n    {\n        _2386 = _2511;\n    }\n    bool _2720 = _1764 ? false : true;\n    bool _2401 = _2720 && (u_colorRGBByLength[2].x >= a_lengthPercent);\n    vec4 _2420 = vec4(0.0);\n    if (_2401)\n    {\n        vec3 _2416 = mix(u_colorRGBByLength[1].yzw, u_colorRGBByLength[2].yzw, vec3((a_lengthPercent - u_colorRGBByLength[1].x) / (u_colorRGBByLength[2].x - u_colorRGBByLength[1].x)));\n        _2420 = vec4(_2416.x, _2416.y, _2416.z, _2386.w);\n    }\n    else\n    {\n        _2420 = _2386;\n    }\n    vec4 _2453 = vec4(0.0);\n    if ((_2401 ? false : _2720) && (u_colorRGBByLength[3].x >= a_lengthPercent))\n    {\n        vec3 _2449 = mix(u_colorRGBByLength[2].yzw, u_colorRGBByLength[3].yzw, vec3((a_lengthPercent - u_colorRGBByLength[2].x) / (u_colorRGBByLength[3].x - u_colorRGBByLength[2].x)));\n        _2453 = vec4(_2449.x, _2449.y, _2449.z, _2420.w);\n    }\n    else\n    {\n        _2453 = _2420;\n    }\n    vec3 _1417 = normalize((a_nextDir * inversesqrt(max(9.9999997473787516355514526367188e-06, dot(a_nextDir, a_nextDir)))) + (a_prevDir * inversesqrt(max(9.9999997473787516355514526367188e-06, dot(a_prevDir, a_prevDir)))));\n    float _1888 = (u_world[0].x * u_world[1].y) - (u_world[0].y * u_world[1].x);\n    float _1895 = (u_world[0].x * u_world[1].z) - (u_world[0].z * u_world[1].x);\n    float _1902 = (u_world[0].x * u_world[1].w) - (u_world[0].w * u_world[1].x);\n    float _1909 = (u_world[0].y * u_world[1].z) - (u_world[0].z * u_world[1].y);\n    float _1916 = (u_world[0].y * u_world[1].w) - (u_world[0].w * u_world[1].y);\n    float _1923 = (u_world[0].z * u_world[1].w) - (u_world[0].w * u_world[1].z);\n    float _1930 = (u_world[2].x * u_world[3].y) - (u_world[2].y * u_world[3].x);\n    float _1937 = (u_world[2].x * u_world[3].z) - (u_world[2].z * u_world[3].x);\n    float _1944 = (u_world[2].x * u_world[3].w) - (u_world[2].w * u_world[3].x);\n    float _1951 = (u_world[2].y * u_world[3].z) - (u_world[2].z * u_world[3].y);\n    float _1958 = (u_world[2].y * u_world[3].w) - (u_world[2].w * u_world[3].y);\n    float _1965 = (u_world[2].z * u_world[3].w) - (u_world[2].w * u_world[3].z);\n    vec3 _1438 = normalize(-((mat4(vec4(((u_world[1].y * _1965) - (u_world[1].z * _1958)) + (u_world[1].w * _1951), ((u_world[0].z * _1958) - (u_world[0].y * _1965)) - (u_world[0].w * _1951), ((u_world[3].y * _1923) - (u_world[3].z * _1916)) + (u_world[3].w * _1909), ((u_world[2].z * _1916) - (u_world[2].y * _1923)) - (u_world[2].w * _1909)), vec4(((u_world[1].z * _1944) - (u_world[1].x * _1965)) - (u_world[1].w * _1937), ((u_world[0].x * _1965) - (u_world[0].z * _1944)) + (u_world[0].w * _1937), ((u_world[3].z * _1902) - (u_world[3].x * _1923)) - (u_world[3].w * _1895), ((u_world[2].x * _1923) - (u_world[2].z * _1902)) + (u_world[2].w * _1895)), vec4(((u_world[1].x * _1958) - (u_world[1].y * _1944)) + (u_world[1].w * _1930), ((u_world[0].y * _1944) - (u_world[0].x * _1958)) - (u_world[0].w * _1930), ((u_world[3].x * _1916) - (u_world[3].y * _1902)) + (u_world[3].w * _1888), ((u_world[2].y * _1902) - (u_world[2].x * _1916)) - (u_world[2].w * _1888)), vec4(((u_world[1].y * _1937) - (u_world[1].x * _1951)) - (u_world[1].z * _1930), ((u_world[0].x * _1951) - (u_world[0].y * _1937)) + (u_world[0].z * _1930), ((u_world[3].y * _1895) - (u_world[3].x * _1909)) - (u_world[3].z * _1888), ((u_world[2].x * _1909) - (u_world[2].y * _1895)) + (u_world[2].z * _1888))) * (1.0 / ((((((_1888 * _1965) - (_1895 * _1958)) + (_1902 * _1951)) + (_1909 * _1944)) - (_1916 * _1937)) + (_1923 * _1930)))) * vec4(u_viewInverse[3].x, u_viewInverse[3].y, u_viewInverse[3].z, 1.0)).xyz);\n    vec3 _1443 = normalize(cross(_1438, _1417));\n    mat4 _2341 = mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0));\n    _2341[0] = vec4(_1417, 0.0);\n    mat4 _2343 = _2341;\n    _2343[1] = vec4(_1443, 0.0);\n    mat4 _2345 = _2343;\n    _2345[2] = vec4(normalize(cross(_1417, _1443)), 0.0);\n    vec4 _2375 = vec4(0.0);\n    if (a_cornerInfo.x > 0.0)\n    {\n        vec4 _1473 = vec4(0.0, a_sign, 0.0, 1.0);\n        vec3 _1480 = vec3((_2345 * _1473).xyz);\n        vec3 _1485 = cross(a_prevDir, a_nextDir);\n        vec4 _2376 = vec4(0.0);\n        if (dot(_1480, _1485 * sign(dot(-_1438, _1485))) <= 0.0)\n        {\n            _2376 = vec4(a_position + (normalize(_1480) * _2606), 1.0);\n        }\n        else\n        {\n            float _1515 = a_cornerInfo.y / a_cornerInfo.x;\n            vec3 _1528 = normalize((normalize(a_prevDir) * (1.0 - _1515)) + (normalize(a_nextDir) * _1515));\n            vec3 _1533 = normalize(cross(_1438, _1528));\n            mat4 _2350 = mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0));\n            _2350[0] = vec4(_1528, 0.0);\n            mat4 _2352 = _2350;\n            _2352[1] = vec4(_1533, 0.0);\n            mat4 _2354 = _2352;\n            _2354[2] = vec4(normalize(cross(_1528, _1533)), 0.0);\n            _2376 = vec4(a_position + (normalize(vec3((_2354 * _1473).xyz)) * _2606), 1.0);\n        }\n        _2375 = _2376;\n    }\n    else\n    {\n        vec4 _2374 = vec4(0.0);\n        if (a_endCapInfo.x > 0.0)\n        {\n            float _1589 = (a_endCapInfo.y / (a_endCapInfo.x - 1.0)) * 3.1415927410125732421875;\n            _2374 = vec4((-a_sign) * sin(_1589), cos(_1589), 0.0, 1.0);\n        }\n        else\n        {\n            _2374 = vec4(0.0, a_sign, 0.0, 1.0);\n        }\n        _2375 = vec4(a_position + (normalize(vec3((_2345 * _2374).xyz)) * _2606), 1.0);\n    }\n    gl_Position = u_projection * (u_view * (u_world * _2375));\n    varying_TexCoord = (vec2(a_texCoord.x, a_texCoord.y - 1.0) * _MainTex_ST.xy) + vec2(_MainTex_ST.z, 1.0 - _MainTex_ST.w);\n    varying_Color = _2453;\n}\n\n","#version 100\n\nuniform mat4 u_view;\nuniform mat4 u_viewInverse;\nuniform mat4 u_vp;\nuniform mat4 u_projection;\nuniform mat4 u_lightSpaceMatrix;\nuniform vec4 u_fogInfos;\nuniform vec3 u_fogColor;\nuniform float u_gameTime;\nuniform float u_aspect;\nuniform vec3 u_ambientLight;\nuniform vec3 u_lightDir;\nuniform vec3 u_lightColor;\nuniform vec3 u_shadowColor;\nuniform float u_shadowStrength;\nuniform float u_shadowBias;\nuniform float u_lightWidthPCSS;\nuniform float u_blockSizePCSS;\nuniform vec4 u_csmFarBounds;\nuniform vec4 u_shadowTilingOffsets[4];\nuniform mat4 u_csmLightSpaceMatrices[4];\nuniform vec3 u_SH[9];\n\n\nuniform vec3 u_widthByLength[4];\nuniform vec4 u_colorRGBByLength[4];\nuniform vec2 u_colorAlphaByLength[4];\n\n\nuniform vec4 _TintColor;\nuniform vec4 _MainTex_ST;\nuniform float _Bright;\n\n\nattribute vec3 a_position;\nattribute float a_sign;\nattribute vec3 a_prevDir;\nattribute vec3 a_nextDir;\nattribute float a_lengthPercent;\nattribute vec2 a_texCoord;\nattribute vec2 a_endCapInfo;\nattribute vec2 a_cornerInfo;\nvarying vec2 varying_TexCoord;\nvarying vec4 varying_Color;\n\nfloat _1345 = 0.0;\nvec4 _1354 = vec4(0.0);\n\nvoid main()\n{\n    bool _1030 = true && (u_widthByLength[1].x >= a_lengthPercent);\n    float _1363 = 0.0;\n    if (_1030)\n    {\n        _1363 = mix(u_widthByLength[0].y, u_widthByLength[1].y, (a_lengthPercent - u_widthByLength[0].x) / (u_widthByLength[1].x - u_widthByLength[0].x));\n    }\n    else\n    {\n        _1363 = _1345;\n    }\n    bool _1696 = _1030 ? false : true;\n    bool _1544 = _1696 && (u_widthByLength[2].x >= a_lengthPercent);\n    float _1558 = 0.0;\n    if (_1544)\n    {\n        _1558 = mix(u_widthByLength[1].y, u_widthByLength[2].y, (a_lengthPercent - u_widthByLength[1].x) / (u_widthByLength[2].x - u_widthByLength[1].x));\n    }\n    else\n    {\n        _1558 = _1363;\n    }\n    float _1586 = 0.0;\n    if ((_1544 ? false : _1696) && (u_widthByLength[3].x >= a_lengthPercent))\n    {\n        _1586 = mix(u_widthByLength[2].y, u_widthByLength[3].y, (a_lengthPercent - u_widthByLength[2].x) / (u_widthByLength[3].x - u_widthByLength[2].x));\n    }\n    else\n    {\n        _1586 = _1558;\n    }\n    bool _1086 = true && (u_colorAlphaByLength[1].x >= a_lengthPercent);\n    vec4 _1365 = vec4(0.0);\n    if (_1086)\n    {\n        vec4 _1330 = _1354;\n        _1330.w = mix(u_colorAlphaByLength[0].y, u_colorAlphaByLength[1].y, (a_lengthPercent - u_colorAlphaByLength[0].x) / (u_colorAlphaByLength[1].x - u_colorAlphaByLength[0].x));\n        _1365 = _1330;\n    }\n    else\n    {\n        _1365 = _1354;\n    }\n    bool _1698 = _1086 ? false : true;\n    bool _1447 = _1698 && (u_colorAlphaByLength[2].x >= a_lengthPercent);\n    vec4 _1462 = vec4(0.0);\n    if (_1447)\n    {\n        vec4 _1459 = _1365;\n        _1459.w = mix(u_colorAlphaByLength[1].y, u_colorAlphaByLength[2].y, (a_lengthPercent - u_colorAlphaByLength[1].x) / (u_colorAlphaByLength[2].x - u_colorAlphaByLength[1].x));\n        _1462 = _1459;\n    }\n    else\n    {\n        _1462 = _1365;\n    }\n    vec4 _1491 = vec4(0.0);\n    if ((_1447 ? false : _1698) && (u_colorAlphaByLength[3].x >= a_lengthPercent))\n    {\n        vec4 _1488 = _1462;\n        _1488.w = mix(u_colorAlphaByLength[2].y, u_colorAlphaByLength[3].y, (a_lengthPercent - u_colorAlphaByLength[2].x) / (u_colorAlphaByLength[3].x - u_colorAlphaByLength[2].x));\n        _1491 = _1488;\n    }\n    else\n    {\n        _1491 = _1462;\n    }\n    bool _1127 = true && (u_colorRGBByLength[1].x >= a_lengthPercent);\n    vec4 _1366 = vec4(0.0);\n    if (_1127)\n    {\n        vec3 _1151 = mix(u_colorRGBByLength[0].yzw, u_colorRGBByLength[1].yzw, vec3((a_lengthPercent - u_colorRGBByLength[0].x) / (u_colorRGBByLength[1].x - u_colorRGBByLength[0].x)));\n        _1366 = vec4(_1151.x, _1151.y, _1151.z, _1491.w);\n    }\n    else\n    {\n        _1366 = _1491;\n    }\n    bool _1700 = _1127 ? false : true;\n    bool _1381 = _1700 && (u_colorRGBByLength[2].x >= a_lengthPercent);\n    vec4 _1400 = vec4(0.0);\n    if (_1381)\n    {\n        vec3 _1396 = mix(u_colorRGBByLength[1].yzw, u_colorRGBByLength[2].yzw, vec3((a_lengthPercent - u_colorRGBByLength[1].x) / (u_colorRGBByLength[2].x - u_colorRGBByLength[1].x)));\n        _1400 = vec4(_1396.x, _1396.y, _1396.z, _1366.w);\n    }\n    else\n    {\n        _1400 = _1366;\n    }\n    vec4 _1433 = vec4(0.0);\n    if ((_1381 ? false : _1700) && (u_colorRGBByLength[3].x >= a_lengthPercent))\n    {\n        vec3 _1429 = mix(u_colorRGBByLength[2].yzw, u_colorRGBByLength[3].yzw, vec3((a_lengthPercent - u_colorRGBByLength[2].x) / (u_colorRGBByLength[3].x - u_colorRGBByLength[2].x)));\n        _1433 = vec4(_1429.x, _1429.y, _1429.z, _1400.w);\n    }\n    else\n    {\n        _1433 = _1400;\n    }\n    vec3 _897 = normalize((a_nextDir * inversesqrt(max(9.9999997473787516355514526367188e-06, dot(a_nextDir, a_nextDir)))) + (a_prevDir * inversesqrt(max(9.9999997473787516355514526367188e-06, dot(a_prevDir, a_prevDir)))));\n    vec4 _1356 = vec4(0.0);\n    if (a_cornerInfo.x > 0.0)\n    {\n        float _906 = a_cornerInfo.y / a_cornerInfo.x;\n        _1356 = vec4(a_position + (normalize(cross(normalize((normalize(a_prevDir) * (1.0 - _906)) + (normalize(a_nextDir) * _906)), vec3(0.0, 0.0, 1.0)) * a_sign) * _1586), 1.0);\n    }\n    else\n    {\n        vec3 _1355 = vec3(0.0);\n        if (a_endCapInfo.x > 0.0)\n        {\n            float _948 = (a_endCapInfo.y / (a_endCapInfo.x - 1.0)) * 3.1415927410125732421875;\n            _1355 = (normalize(cross(_897, vec3(0.0, 0.0, 1.0))) * cos(_948)) + (_897 * ((-a_sign) * sin(_948)));\n        }\n        else\n        {\n            _1355 = cross(_897, vec3(0.0, 0.0, 1.0)) * a_sign;\n        }\n        _1356 = vec4(a_position + (normalize(_1355) * _1586), 1.0);\n    }\n    gl_Position = u_projection * (u_view * _1356);\n    varying_TexCoord = (vec2(a_texCoord.x, a_texCoord.y - 1.0) * _MainTex_ST.xy) + vec2(_MainTex_ST.z, 1.0 - _MainTex_ST.w);\n    varying_Color = _1433;\n}\n\n","#version 100\n\nuniform mat4 u_view;\nuniform mat4 u_viewInverse;\nuniform mat4 u_vp;\nuniform mat4 u_projection;\nuniform mat4 u_lightSpaceMatrix;\nuniform vec4 u_fogInfos;\nuniform vec3 u_fogColor;\nuniform float u_gameTime;\nuniform float u_aspect;\nuniform vec3 u_ambientLight;\nuniform vec3 u_lightDir;\nuniform vec3 u_lightColor;\nuniform vec3 u_shadowColor;\nuniform float u_shadowStrength;\nuniform float u_shadowBias;\nuniform float u_lightWidthPCSS;\nuniform float u_blockSizePCSS;\nuniform vec4 u_csmFarBounds;\nuniform vec4 u_shadowTilingOffsets[4];\nuniform mat4 u_csmLightSpaceMatrices[4];\nuniform vec3 u_SH[9];\n\n\nuniform vec3 u_widthByLength[4];\nuniform vec4 u_colorRGBByLength[4];\nuniform vec2 u_colorAlphaByLength[4];\n\n\nuniform vec4 _TintColor;\nuniform vec4 _MainTex_ST;\nuniform float _Bright;\n\n\nattribute vec3 a_position;\nattribute float a_sign;\nattribute float a_lengthPercent;\nattribute vec2 a_texCoord;\nattribute vec3 a_direction;\nvarying vec2 varying_TexCoord;\nvarying vec4 varying_Color;\n\nfloat _1046 = 0.0;\nvec4 _1055 = vec4(0.0);\n\nvoid main()\n{\n    bool _821 = true && (u_widthByLength[1].x >= a_lengthPercent);\n    float _1062 = 0.0;\n    if (_821)\n    {\n        _1062 = mix(u_widthByLength[0].y, u_widthByLength[1].y, (a_lengthPercent - u_widthByLength[0].x) / (u_widthByLength[1].x - u_widthByLength[0].x));\n    }\n    else\n    {\n        _1062 = _1046;\n    }\n    bool _1395 = _821 ? false : true;\n    bool _1243 = _1395 && (u_widthByLength[2].x >= a_lengthPercent);\n    float _1257 = 0.0;\n    if (_1243)\n    {\n        _1257 = mix(u_widthByLength[1].y, u_widthByLength[2].y, (a_lengthPercent - u_widthByLength[1].x) / (u_widthByLength[2].x - u_widthByLength[1].x));\n    }\n    else\n    {\n        _1257 = _1062;\n    }\n    float _1285 = 0.0;\n    if ((_1243 ? false : _1395) && (u_widthByLength[3].x >= a_lengthPercent))\n    {\n        _1285 = mix(u_widthByLength[2].y, u_widthByLength[3].y, (a_lengthPercent - u_widthByLength[2].x) / (u_widthByLength[3].x - u_widthByLength[2].x));\n    }\n    else\n    {\n        _1285 = _1257;\n    }\n    bool _877 = true && (u_colorAlphaByLength[1].x >= a_lengthPercent);\n    vec4 _1064 = vec4(0.0);\n    if (_877)\n    {\n        vec4 _1031 = _1055;\n        _1031.w = mix(u_colorAlphaByLength[0].y, u_colorAlphaByLength[1].y, (a_lengthPercent - u_colorAlphaByLength[0].x) / (u_colorAlphaByLength[1].x - u_colorAlphaByLength[0].x));\n        _1064 = _1031;\n    }\n    else\n    {\n        _1064 = _1055;\n    }\n    bool _1397 = _877 ? false : true;\n    bool _1146 = _1397 && (u_colorAlphaByLength[2].x >= a_lengthPercent);\n    vec4 _1161 = vec4(0.0);\n    if (_1146)\n    {\n        vec4 _1158 = _1064;\n        _1158.w = mix(u_colorAlphaByLength[1].y, u_colorAlphaByLength[2].y, (a_lengthPercent - u_colorAlphaByLength[1].x) / (u_colorAlphaByLength[2].x - u_colorAlphaByLength[1].x));\n        _1161 = _1158;\n    }\n    else\n    {\n        _1161 = _1064;\n    }\n    vec4 _1190 = vec4(0.0);\n    if ((_1146 ? false : _1397) && (u_colorAlphaByLength[3].x >= a_lengthPercent))\n    {\n        vec4 _1187 = _1161;\n        _1187.w = mix(u_colorAlphaByLength[2].y, u_colorAlphaByLength[3].y, (a_lengthPercent - u_colorAlphaByLength[2].x) / (u_colorAlphaByLength[3].x - u_colorAlphaByLength[2].x));\n        _1190 = _1187;\n    }\n    else\n    {\n        _1190 = _1161;\n    }\n    bool _918 = true && (u_colorRGBByLength[1].x >= a_lengthPercent);\n    vec4 _1065 = vec4(0.0);\n    if (_918)\n    {\n        vec3 _942 = mix(u_colorRGBByLength[0].yzw, u_colorRGBByLength[1].yzw, vec3((a_lengthPercent - u_colorRGBByLength[0].x) / (u_colorRGBByLength[1].x - u_colorRGBByLength[0].x)));\n        _1065 = vec4(_942.x, _942.y, _942.z, _1190.w);\n    }\n    else\n    {\n        _1065 = _1190;\n    }\n    bool _1399 = _918 ? false : true;\n    bool _1080 = _1399 && (u_colorRGBByLength[2].x >= a_lengthPercent);\n    vec4 _1099 = vec4(0.0);\n    if (_1080)\n    {\n        vec3 _1095 = mix(u_colorRGBByLength[1].yzw, u_colorRGBByLength[2].yzw, vec3((a_lengthPercent - u_colorRGBByLength[1].x) / (u_colorRGBByLength[2].x - u_colorRGBByLength[1].x)));\n        _1099 = vec4(_1095.x, _1095.y, _1095.z, _1065.w);\n    }\n    else\n    {\n        _1099 = _1065;\n    }\n    vec4 _1132 = vec4(0.0);\n    if ((_1080 ? false : _1399) && (u_colorRGBByLength[3].x >= a_lengthPercent))\n    {\n        vec3 _1128 = mix(u_colorRGBByLength[2].yzw, u_colorRGBByLength[3].yzw, vec3((a_lengthPercent - u_colorRGBByLength[2].x) / (u_colorRGBByLength[3].x - u_colorRGBByLength[2].x)));\n        _1132 = vec4(_1128.x, _1128.y, _1128.z, _1099.w);\n    }\n    else\n    {\n        _1132 = _1099;\n    }\n    vec3 _731 = normalize(a_direction);\n    vec3 _735 = normalize(cross(normalize(vec3(u_viewInverse[3].x, u_viewInverse[3].y, u_viewInverse[3].z) - a_position), _731));\n    mat4 _1035 = mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0));\n    _1035[0] = vec4(_731, 0.0);\n    mat4 _1037 = _1035;\n    _1037[1] = vec4(_735, 0.0);\n    mat4 _1039 = _1037;\n    _1039[2] = vec4(normalize(cross(_731, _735)), 0.0);\n    gl_Position = u_projection * (u_view * vec4(a_position + (normalize(vec3((_1039 * vec4(0.0, a_sign, 0.0, 1.0)).xyz)) * _1285), 1.0));\n    varying_TexCoord = (vec2(a_texCoord.x, a_texCoord.y - 1.0) * _MainTex_ST.xy) + vec2(_MainTex_ST.z, 1.0 - _MainTex_ST.w);\n    varying_Color = _1132;\n}\n\n","#version 100\n\nuniform mat4 u_view;\nuniform mat4 u_viewInverse;\nuniform mat4 u_vp;\nuniform mat4 u_projection;\nuniform mat4 u_lightSpaceMatrix;\nuniform vec4 u_fogInfos;\nuniform vec3 u_fogColor;\nuniform float u_gameTime;\nuniform float u_aspect;\nuniform vec3 u_ambientLight;\nuniform vec3 u_lightDir;\nuniform vec3 u_lightColor;\nuniform vec3 u_shadowColor;\nuniform float u_shadowStrength;\nuniform float u_shadowBias;\nuniform float u_lightWidthPCSS;\nuniform float u_blockSizePCSS;\nuniform vec4 u_csmFarBounds;\nuniform vec4 u_shadowTilingOffsets[4];\nuniform mat4 u_csmLightSpaceMatrices[4];\nuniform vec3 u_SH[9];\n\n\nuniform vec3 u_widthByLength[4];\nuniform vec4 u_colorRGBByLength[4];\nuniform vec2 u_colorAlphaByLength[4];\n\n\nuniform mat4 u_world;\nuniform vec4 u_lightMapScaleOffset;\nuniform float u_lightCountFA;\nuniform vec4 u_lightPosFA[4];\nuniform vec4 u_lightColorFA[4];\nuniform vec4 u_lightAttenFA[4];\nuniform vec4 u_spotDirFA[4];\n\n\nuniform vec4 _TintColor;\nuniform vec4 _MainTex_ST;\nuniform float _Bright;\n\n\nattribute vec3 a_position;\nattribute float a_sign;\nattribute float a_lengthPercent;\nattribute vec2 a_texCoord;\nattribute vec3 a_direction;\nvarying vec2 varying_TexCoord;\nvarying vec4 varying_Color;\n\nfloat _1003 = 0.0;\nvec4 _1012 = vec4(0.0);\n\nvoid main()\n{\n    bool _768 = true && (u_widthByLength[1].x >= a_lengthPercent);\n    float _1019 = 0.0;\n    if (_768)\n    {\n        _1019 = mix(u_widthByLength[0].y, u_widthByLength[1].y, (a_lengthPercent - u_widthByLength[0].x) / (u_widthByLength[1].x - u_widthByLength[0].x));\n    }\n    else\n    {\n        _1019 = _1003;\n    }\n    bool _1352 = _768 ? false : true;\n    bool _1200 = _1352 && (u_widthByLength[2].x >= a_lengthPercent);\n    float _1214 = 0.0;\n    if (_1200)\n    {\n        _1214 = mix(u_widthByLength[1].y, u_widthByLength[2].y, (a_lengthPercent - u_widthByLength[1].x) / (u_widthByLength[2].x - u_widthByLength[1].x));\n    }\n    else\n    {\n        _1214 = _1019;\n    }\n    float _1242 = 0.0;\n    if ((_1200 ? false : _1352) && (u_widthByLength[3].x >= a_lengthPercent))\n    {\n        _1242 = mix(u_widthByLength[2].y, u_widthByLength[3].y, (a_lengthPercent - u_widthByLength[2].x) / (u_widthByLength[3].x - u_widthByLength[2].x));\n    }\n    else\n    {\n        _1242 = _1214;\n    }\n    bool _824 = true && (u_colorAlphaByLength[1].x >= a_lengthPercent);\n    vec4 _1021 = vec4(0.0);\n    if (_824)\n    {\n        vec4 _990 = _1012;\n        _990.w = mix(u_colorAlphaByLength[0].y, u_colorAlphaByLength[1].y, (a_lengthPercent - u_colorAlphaByLength[0].x) / (u_colorAlphaByLength[1].x - u_colorAlphaByLength[0].x));\n        _1021 = _990;\n    }\n    else\n    {\n        _1021 = _1012;\n    }\n    bool _1354 = _824 ? false : true;\n    bool _1103 = _1354 && (u_colorAlphaByLength[2].x >= a_lengthPercent);\n    vec4 _1118 = vec4(0.0);\n    if (_1103)\n    {\n        vec4 _1115 = _1021;\n        _1115.w = mix(u_colorAlphaByLength[1].y, u_colorAlphaByLength[2].y, (a_lengthPercent - u_colorAlphaByLength[1].x) / (u_colorAlphaByLength[2].x - u_colorAlphaByLength[1].x));\n        _1118 = _1115;\n    }\n    else\n    {\n        _1118 = _1021;\n    }\n    vec4 _1147 = vec4(0.0);\n    if ((_1103 ? false : _1354) && (u_colorAlphaByLength[3].x >= a_lengthPercent))\n    {\n        vec4 _1144 = _1118;\n        _1144.w = mix(u_colorAlphaByLength[2].y, u_colorAlphaByLength[3].y, (a_lengthPercent - u_colorAlphaByLength[2].x) / (u_colorAlphaByLength[3].x - u_colorAlphaByLength[2].x));\n        _1147 = _1144;\n    }\n    else\n    {\n        _1147 = _1118;\n    }\n    bool _865 = true && (u_colorRGBByLength[1].x >= a_lengthPercent);\n    vec4 _1022 = vec4(0.0);\n    if (_865)\n    {\n        vec3 _889 = mix(u_colorRGBByLength[0].yzw, u_colorRGBByLength[1].yzw, vec3((a_lengthPercent - u_colorRGBByLength[0].x) / (u_colorRGBByLength[1].x - u_colorRGBByLength[0].x)));\n        _1022 = vec4(_889.x, _889.y, _889.z, _1147.w);\n    }\n    else\n    {\n        _1022 = _1147;\n    }\n    bool _1356 = _865 ? false : true;\n    bool _1037 = _1356 && (u_colorRGBByLength[2].x >= a_lengthPercent);\n    vec4 _1056 = vec4(0.0);\n    if (_1037)\n    {\n        vec3 _1052 = mix(u_colorRGBByLength[1].yzw, u_colorRGBByLength[2].yzw, vec3((a_lengthPercent - u_colorRGBByLength[1].x) / (u_colorRGBByLength[2].x - u_colorRGBByLength[1].x)));\n        _1056 = vec4(_1052.x, _1052.y, _1052.z, _1022.w);\n    }\n    else\n    {\n        _1056 = _1022;\n    }\n    vec4 _1089 = vec4(0.0);\n    if ((_1037 ? false : _1356) && (u_colorRGBByLength[3].x >= a_lengthPercent))\n    {\n        vec3 _1085 = mix(u_colorRGBByLength[2].yzw, u_colorRGBByLength[3].yzw, vec3((a_lengthPercent - u_colorRGBByLength[2].x) / (u_colorRGBByLength[3].x - u_colorRGBByLength[2].x)));\n        _1089 = vec4(_1085.x, _1085.y, _1085.z, _1056.w);\n    }\n    else\n    {\n        _1089 = _1056;\n    }\n    mat4 _994 = mat4(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0));\n    _994[3] = vec4(a_position, 1.0);\n    mat4 _996 = u_world;\n    _996[3] = vec4(0.0, 0.0, 0.0, 1.0);\n    gl_Position = u_projection * (u_view * (_994 * (_996 * vec4(normalize(cross(a_direction, vec3(0.0, 0.0, 1.0)) * a_sign) * _1242, 1.0))));\n    varying_TexCoord = (vec2(a_texCoord.x, a_texCoord.y - 1.0) * _MainTex_ST.xy) + vec2(_MainTex_ST.z, 1.0 - _MainTex_ST.w);\n    varying_Color = _1089;\n}\n\n","#version 100\n\nuniform mat4 u_world;\nuniform vec4 u_lightMapScaleOffset;\nuniform vec4 u_skinnedAnimationMapInfo;\nuniform float u_skinnedAnimationInfo;\nuniform float u_lightCountFA;\nuniform vec4 u_lightPosFA[4];\nuniform vec4 u_lightColorFA[4];\nuniform vec4 u_lightAttenFA[4];\nuniform vec4 u_spotDirFA[4];\n\n\nuniform mat4 u_view;\nuniform mat4 u_viewInverse;\nuniform mat4 u_vp;\nuniform mat4 u_projection;\nuniform mat4 u_lightSpaceMatrix;\nuniform vec4 u_fogInfos;\nuniform vec3 u_fogColor;\nuniform float u_gameTime;\nuniform float u_aspect;\nuniform vec3 u_ambientLight;\nuniform vec3 u_lightDir;\nuniform vec3 u_lightColor;\nuniform vec3 u_shadowColor;\nuniform float u_shadowStrength;\nuniform float u_shadowBias;\nuniform float u_lightWidthPCSS;\nuniform float u_blockSizePCSS;\nuniform vec4 u_csmFarBounds;\nuniform vec4 u_shadowTilingOffsets[4];\nuniform mat4 u_csmLightSpaceMatrices[4];\nuniform vec3 u_SH[9];\n\n\nuniform vec4 _TintColor;\nuniform vec4 _MainTex_ST;\nuniform float _Bright;\n\n\nuniform highp sampler2D u_skinnedAnimationMap;\n\nattribute vec4 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_boneWeight;\nattribute vec4 a_boneIndex;\nvarying vec2 varying_TexCoord;\nvarying vec4 varying_Color;\n\nvoid main()\n{\n    float _739 = u_skinnedAnimationInfo * u_skinnedAnimationMapInfo.z;\n    float _745 = (3.0 * (_739 + a_boneIndex.x)) + u_skinnedAnimationMapInfo.w;\n    float _748 = 1.0 / u_skinnedAnimationMapInfo.x;\n    float _752 = floor(_745 * _748);\n    float _758 = _745 - (_752 * u_skinnedAnimationMapInfo.x);\n    float _763 = (_752 + 0.5) / u_skinnedAnimationMapInfo.y;\n    vec4 _773 = texture2D(u_skinnedAnimationMap, vec2((_758 + 0.5) * _748, _763));\n    vec4 _783 = texture2D(u_skinnedAnimationMap, vec2((_758 + 1.5) * _748, _763));\n    vec4 _793 = texture2D(u_skinnedAnimationMap, vec2((_758 + 2.5) * _748, _763));\n    float _844 = (3.0 * (_739 + a_boneIndex.y)) + u_skinnedAnimationMapInfo.w;\n    float _851 = floor(_844 * _748);\n    float _857 = _844 - (_851 * u_skinnedAnimationMapInfo.x);\n    float _862 = (_851 + 0.5) / u_skinnedAnimationMapInfo.y;\n    vec4 _872 = texture2D(u_skinnedAnimationMap, vec2((_857 + 0.5) * _748, _862));\n    vec4 _882 = texture2D(u_skinnedAnimationMap, vec2((_857 + 1.5) * _748, _862));\n    vec4 _892 = texture2D(u_skinnedAnimationMap, vec2((_857 + 2.5) * _748, _862));\n    float _943 = (3.0 * (_739 + a_boneIndex.z)) + u_skinnedAnimationMapInfo.w;\n    float _950 = floor(_943 * _748);\n    float _956 = _943 - (_950 * u_skinnedAnimationMapInfo.x);\n    float _961 = (_950 + 0.5) / u_skinnedAnimationMapInfo.y;\n    vec4 _971 = texture2D(u_skinnedAnimationMap, vec2((_956 + 0.5) * _748, _961));\n    vec4 _981 = texture2D(u_skinnedAnimationMap, vec2((_956 + 1.5) * _748, _961));\n    vec4 _991 = texture2D(u_skinnedAnimationMap, vec2((_956 + 2.5) * _748, _961));\n    float _1042 = (3.0 * (_739 + a_boneIndex.w)) + u_skinnedAnimationMapInfo.w;\n    float _1049 = floor(_1042 * _748);\n    float _1055 = _1042 - (_1049 * u_skinnedAnimationMapInfo.x);\n    float _1060 = (_1049 + 0.5) / u_skinnedAnimationMapInfo.y;\n    vec4 _1070 = texture2D(u_skinnedAnimationMap, vec2((_1055 + 0.5) * _748, _1060));\n    vec4 _1080 = texture2D(u_skinnedAnimationMap, vec2((_1055 + 1.5) * _748, _1060));\n    vec4 _1090 = texture2D(u_skinnedAnimationMap, vec2((_1055 + 2.5) * _748, _1060));\n    mat4 _635 = mat4(vec4(_773.xyz, 0.0), vec4(_783.xyz, 0.0), vec4(_793.xyz, 0.0), vec4(_773.w, _783.w, _793.w, 1.0)) * a_boneWeight.x;\n    mat4 _639 = mat4(vec4(_872.xyz, 0.0), vec4(_882.xyz, 0.0), vec4(_892.xyz, 0.0), vec4(_872.w, _882.w, _892.w, 1.0)) * a_boneWeight.y;\n    mat4 _657 = mat4(vec4(_971.xyz, 0.0), vec4(_981.xyz, 0.0), vec4(_991.xyz, 0.0), vec4(_971.w, _981.w, _991.w, 1.0)) * a_boneWeight.z;\n    mat4 _675 = mat4(vec4(_1070.xyz, 0.0), vec4(_1080.xyz, 0.0), vec4(_1090.xyz, 0.0), vec4(_1070.w, _1080.w, _1090.w, 1.0)) * a_boneWeight.w;\n    gl_Position = u_projection * (u_view * (u_world * (mat4(((_635[0] + _639[0]) + _657[0]) + _675[0], ((_635[1] + _639[1]) + _657[1]) + _675[1], ((_635[2] + _639[2]) + _657[2]) + _675[2], ((_635[3] + _639[3]) + _657[3]) + _675[3]) * a_position)));\n    varying_TexCoord = (vec2(a_texCoord.x, a_texCoord.y - 1.0) * _MainTex_ST.xy) + vec2(_MainTex_ST.z, 1.0 - _MainTex_ST.w);\n    varying_Color = vec4(1.0);\n}\n\n","#version 100\nprecision mediump float;\nprecision highp int;\n\nuniform highp vec4 _TintColor;\nuniform highp vec4 _MainTex_ST;\nuniform highp float _Bright;\n\n\nuniform highp sampler2D _MainTex;\nuniform highp sampler2D _MaskTex;\n\nvarying highp vec2 varying_TexCoord;\nvarying highp vec4 varying_Color;\n\nvoid main()\n{\n    highp vec4 _211 = ((varying_Color * _Bright) * texture2D(_MainTex, varying_TexCoord)) * _TintColor;\n    highp vec4 _241 = _211;\n    _241.w = _211.w * texture2D(_MaskTex, varying_TexCoord).x;\n    gl_FragData[0] = clamp(_241, vec4(0.0), vec4(1.0));\n}\n\n","#version 100\n\nuniform mat4 u_world;\nuniform vec4 u_lightMapScaleOffset;\nuniform vec4 u_boneOffsetMatrix[288];\nuniform float u_lightCountFA;\nuniform vec4 u_lightPosFA[4];\nuniform vec4 u_lightColorFA[4];\nuniform vec4 u_lightAttenFA[4];\nuniform vec4 u_spotDirFA[4];\n\n\nuniform mat4 u_view;\nuniform mat4 u_viewInverse;\nuniform mat4 u_vp;\nuniform mat4 u_projection;\nuniform mat4 u_lightSpaceMatrix;\nuniform vec4 u_fogInfos;\nuniform vec3 u_fogColor;\nuniform float u_gameTime;\nuniform float u_aspect;\nuniform vec3 u_ambientLight;\nuniform vec3 u_lightDir;\nuniform vec3 u_lightColor;\nuniform vec3 u_shadowColor;\nuniform float u_shadowStrength;\nuniform float u_shadowBias;\nuniform float u_lightWidthPCSS;\nuniform float u_blockSizePCSS;\nuniform vec4 u_csmFarBounds;\nuniform vec4 u_shadowTilingOffsets[4];\nuniform mat4 u_csmLightSpaceMatrices[4];\nuniform vec3 u_SH[9];\n\n\nuniform vec4 _TintColor;\nuniform vec4 _MainTex_ST;\nuniform float _Bright;\n\n\nattribute vec4 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nattribute vec4 a_boneWeight;\nattribute vec4 a_boneIndex;\nvarying vec2 varying_TexCoord;\nvarying vec4 varying_Color;\n\nvoid main()\n{\n    int _686 = int(a_boneIndex.x) * 3;\n    int _691 = _686 + 1;\n    int _695 = _686 + 2;\n    int _737 = int(a_boneIndex.y) * 3;\n    int _742 = _737 + 1;\n    int _746 = _737 + 2;\n    int _788 = int(a_boneIndex.z) * 3;\n    int _793 = _788 + 1;\n    int _797 = _788 + 2;\n    int _839 = int(a_boneIndex.w) * 3;\n    int _844 = _839 + 1;\n    int _848 = _839 + 2;\n    mat4 _587 = mat4(vec4(u_boneOffsetMatrix[_686].xyz, 0.0), vec4(u_boneOffsetMatrix[_691].xyz, 0.0), vec4(u_boneOffsetMatrix[_695].xyz, 0.0), vec4(u_boneOffsetMatrix[_686].w, u_boneOffsetMatrix[_691].w, u_boneOffsetMatrix[_695].w, 1.0)) * a_boneWeight.x;\n    mat4 _591 = mat4(vec4(u_boneOffsetMatrix[_737].xyz, 0.0), vec4(u_boneOffsetMatrix[_742].xyz, 0.0), vec4(u_boneOffsetMatrix[_746].xyz, 0.0), vec4(u_boneOffsetMatrix[_737].w, u_boneOffsetMatrix[_742].w, u_boneOffsetMatrix[_746].w, 1.0)) * a_boneWeight.y;\n    mat4 _609 = mat4(vec4(u_boneOffsetMatrix[_788].xyz, 0.0), vec4(u_boneOffsetMatrix[_793].xyz, 0.0), vec4(u_boneOffsetMatrix[_797].xyz, 0.0), vec4(u_boneOffsetMatrix[_788].w, u_boneOffsetMatrix[_793].w, u_boneOffsetMatrix[_797].w, 1.0)) * a_boneWeight.z;\n    mat4 _627 = mat4(vec4(u_boneOffsetMatrix[_839].xyz, 0.0), vec4(u_boneOffsetMatrix[_844].xyz, 0.0), vec4(u_boneOffsetMatrix[_848].xyz, 0.0), vec4(u_boneOffsetMatrix[_839].w, u_boneOffsetMatrix[_844].w, u_boneOffsetMatrix[_848].w, 1.0)) * a_boneWeight.w;\n    gl_Position = u_projection * (u_view * (u_world * (mat4(((_587[0] + _591[0]) + _609[0]) + _627[0], ((_587[1] + _591[1]) + _609[1]) + _627[1], ((_587[2] + _591[2]) + _609[2]) + _627[2], ((_587[3] + _591[3]) + _609[3]) + _627[3]) * a_position)));\n    varying_TexCoord = (vec2(a_texCoord.x, a_texCoord.y - 1.0) * _MainTex_ST.xy) + vec2(_MainTex_ST.z, 1.0 - _MainTex_ST.w);\n    varying_Color = a_color;\n}\n\n","#version 100\n\nuniform mat4 u_world;\nuniform vec4 u_lightMapScaleOffset;\nuniform mat4 u_bindTargetWorldInverse;\nuniform vec4 u_boneOffsetMatrix[288];\nuniform float u_lightCountFA;\nuniform vec4 u_lightPosFA[4];\nuniform vec4 u_lightColorFA[4];\nuniform vec4 u_lightAttenFA[4];\nuniform vec4 u_spotDirFA[4];\n\n\nuniform mat4 u_view;\nuniform mat4 u_viewInverse;\nuniform mat4 u_vp;\nuniform mat4 u_projection;\nuniform mat4 u_lightSpaceMatrix;\nuniform vec4 u_fogInfos;\nuniform vec3 u_fogColor;\nuniform float u_gameTime;\nuniform float u_aspect;\nuniform vec3 u_ambientLight;\nuniform vec3 u_lightDir;\nuniform vec3 u_lightColor;\nuniform vec3 u_shadowColor;\nuniform float u_shadowStrength;\nuniform float u_shadowBias;\nuniform float u_lightWidthPCSS;\nuniform float u_blockSizePCSS;\nuniform vec4 u_csmFarBounds;\nuniform vec4 u_shadowTilingOffsets[4];\nuniform mat4 u_csmLightSpaceMatrices[4];\nuniform vec3 u_SH[9];\n\n\nuniform vec4 _TintColor;\nuniform vec4 _MainTex_ST;\nuniform float _Bright;\n\n\nattribute vec4 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_boneWeight;\nattribute vec4 a_boneIndex;\nvarying vec2 varying_TexCoord;\nvarying vec4 varying_Color;\n\nvoid main()\n{\n    int _690 = int(a_boneIndex.x) * 3;\n    int _695 = _690 + 1;\n    int _699 = _690 + 2;\n    int _741 = int(a_boneIndex.y) * 3;\n    int _746 = _741 + 1;\n    int _750 = _741 + 2;\n    int _792 = int(a_boneIndex.z) * 3;\n    int _797 = _792 + 1;\n    int _801 = _792 + 2;\n    int _843 = int(a_boneIndex.w) * 3;\n    int _848 = _843 + 1;\n    int _852 = _843 + 2;\n    mat4 _587 = mat4(vec4(u_boneOffsetMatrix[_690].xyz, 0.0), vec4(u_boneOffsetMatrix[_695].xyz, 0.0), vec4(u_boneOffsetMatrix[_699].xyz, 0.0), vec4(u_boneOffsetMatrix[_690].w, u_boneOffsetMatrix[_695].w, u_boneOffsetMatrix[_699].w, 1.0)) * a_boneWeight.x;\n    mat4 _591 = mat4(vec4(u_boneOffsetMatrix[_741].xyz, 0.0), vec4(u_boneOffsetMatrix[_746].xyz, 0.0), vec4(u_boneOffsetMatrix[_750].xyz, 0.0), vec4(u_boneOffsetMatrix[_741].w, u_boneOffsetMatrix[_746].w, u_boneOffsetMatrix[_750].w, 1.0)) * a_boneWeight.y;\n    mat4 _609 = mat4(vec4(u_boneOffsetMatrix[_792].xyz, 0.0), vec4(u_boneOffsetMatrix[_797].xyz, 0.0), vec4(u_boneOffsetMatrix[_801].xyz, 0.0), vec4(u_boneOffsetMatrix[_792].w, u_boneOffsetMatrix[_797].w, u_boneOffsetMatrix[_801].w, 1.0)) * a_boneWeight.z;\n    mat4 _627 = mat4(vec4(u_boneOffsetMatrix[_843].xyz, 0.0), vec4(u_boneOffsetMatrix[_848].xyz, 0.0), vec4(u_boneOffsetMatrix[_852].xyz, 0.0), vec4(u_boneOffsetMatrix[_843].w, u_boneOffsetMatrix[_848].w, u_boneOffsetMatrix[_852].w, 1.0)) * a_boneWeight.w;\n    gl_Position = u_projection * (u_view * (u_world * ((u_bindTargetWorldInverse * mat4(((_587[0] + _591[0]) + _609[0]) + _627[0], ((_587[1] + _591[1]) + _609[1]) + _627[1], ((_587[2] + _591[2]) + _609[2]) + _627[2], ((_587[3] + _591[3]) + _609[3]) + _627[3])) * a_position)));\n    varying_TexCoord = (vec2(a_texCoord.x, a_texCoord.y - 1.0) * _MainTex_ST.xy) + vec2(_MainTex_ST.z, 1.0 - _MainTex_ST.w);\n    varying_Color = vec4(1.0);\n}\n\n","#version 100\n\nuniform mat4 u_world;\nuniform vec4 u_lightMapScaleOffset;\nuniform vec4 u_skinnedAnimationMapInfo;\nuniform float u_skinnedAnimationInfo;\nuniform float u_lightCountFA;\nuniform vec4 u_lightPosFA[4];\nuniform vec4 u_lightColorFA[4];\nuniform vec4 u_lightAttenFA[4];\nuniform vec4 u_spotDirFA[4];\n\n\nuniform mat4 u_view;\nuniform mat4 u_viewInverse;\nuniform mat4 u_vp;\nuniform mat4 u_projection;\nuniform mat4 u_lightSpaceMatrix;\nuniform vec4 u_fogInfos;\nuniform vec3 u_fogColor;\nuniform float u_gameTime;\nuniform float u_aspect;\nuniform vec3 u_ambientLight;\nuniform vec3 u_lightDir;\nuniform vec3 u_lightColor;\nuniform vec3 u_shadowColor;\nuniform float u_shadowStrength;\nuniform float u_shadowBias;\nuniform float u_lightWidthPCSS;\nuniform float u_blockSizePCSS;\nuniform vec4 u_csmFarBounds;\nuniform vec4 u_shadowTilingOffsets[4];\nuniform mat4 u_csmLightSpaceMatrices[4];\nuniform vec3 u_SH[9];\n\n\nuniform vec4 _TintColor;\nuniform vec4 _MainTex_ST;\nuniform float _Bright;\n\n\nuniform highp sampler2D u_skinnedAnimationMap;\n\nattribute vec4 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nattribute vec4 a_boneWeight;\nattribute vec4 a_boneIndex;\nvarying vec2 varying_TexCoord;\nvarying vec4 varying_Color;\n\nvoid main()\n{\n    float _743 = u_skinnedAnimationInfo * u_skinnedAnimationMapInfo.z;\n    float _749 = (3.0 * (_743 + a_boneIndex.x)) + u_skinnedAnimationMapInfo.w;\n    float _752 = 1.0 / u_skinnedAnimationMapInfo.x;\n    float _756 = floor(_749 * _752);\n    float _762 = _749 - (_756 * u_skinnedAnimationMapInfo.x);\n    float _767 = (_756 + 0.5) / u_skinnedAnimationMapInfo.y;\n    vec4 _777 = texture2D(u_skinnedAnimationMap, vec2((_762 + 0.5) * _752, _767));\n    vec4 _787 = texture2D(u_skinnedAnimationMap, vec2((_762 + 1.5) * _752, _767));\n    vec4 _797 = texture2D(u_skinnedAnimationMap, vec2((_762 + 2.5) * _752, _767));\n    float _848 = (3.0 * (_743 + a_boneIndex.y)) + u_skinnedAnimationMapInfo.w;\n    float _855 = floor(_848 * _752);\n    float _861 = _848 - (_855 * u_skinnedAnimationMapInfo.x);\n    float _866 = (_855 + 0.5) / u_skinnedAnimationMapInfo.y;\n    vec4 _876 = texture2D(u_skinnedAnimationMap, vec2((_861 + 0.5) * _752, _866));\n    vec4 _886 = texture2D(u_skinnedAnimationMap, vec2((_861 + 1.5) * _752, _866));\n    vec4 _896 = texture2D(u_skinnedAnimationMap, vec2((_861 + 2.5) * _752, _866));\n    float _947 = (3.0 * (_743 + a_boneIndex.z)) + u_skinnedAnimationMapInfo.w;\n    float _954 = floor(_947 * _752);\n    float _960 = _947 - (_954 * u_skinnedAnimationMapInfo.x);\n    float _965 = (_954 + 0.5) / u_skinnedAnimationMapInfo.y;\n    vec4 _975 = texture2D(u_skinnedAnimationMap, vec2((_960 + 0.5) * _752, _965));\n    vec4 _985 = texture2D(u_skinnedAnimationMap, vec2((_960 + 1.5) * _752, _965));\n    vec4 _995 = texture2D(u_skinnedAnimationMap, vec2((_960 + 2.5) * _752, _965));\n    float _1046 = (3.0 * (_743 + a_boneIndex.w)) + u_skinnedAnimationMapInfo.w;\n    float _1053 = floor(_1046 * _752);\n    float _1059 = _1046 - (_1053 * u_skinnedAnimationMapInfo.x);\n    float _1064 = (_1053 + 0.5) / u_skinnedAnimationMapInfo.y;\n    vec4 _1074 = texture2D(u_skinnedAnimationMap, vec2((_1059 + 0.5) * _752, _1064));\n    vec4 _1084 = texture2D(u_skinnedAnimationMap, vec2((_1059 + 1.5) * _752, _1064));\n    vec4 _1094 = texture2D(u_skinnedAnimationMap, vec2((_1059 + 2.5) * _752, _1064));\n    mat4 _639 = mat4(vec4(_777.xyz, 0.0), vec4(_787.xyz, 0.0), vec4(_797.xyz, 0.0), vec4(_777.w, _787.w, _797.w, 1.0)) * a_boneWeight.x;\n    mat4 _643 = mat4(vec4(_876.xyz, 0.0), vec4(_886.xyz, 0.0), vec4(_896.xyz, 0.0), vec4(_876.w, _886.w, _896.w, 1.0)) * a_boneWeight.y;\n    mat4 _661 = mat4(vec4(_975.xyz, 0.0), vec4(_985.xyz, 0.0), vec4(_995.xyz, 0.0), vec4(_975.w, _985.w, _995.w, 1.0)) * a_boneWeight.z;\n    mat4 _679 = mat4(vec4(_1074.xyz, 0.0), vec4(_1084.xyz, 0.0), vec4(_1094.xyz, 0.0), vec4(_1074.w, _1084.w, _1094.w, 1.0)) * a_boneWeight.w;\n    gl_Position = u_projection * (u_view * (u_world * (mat4(((_639[0] + _643[0]) + _661[0]) + _679[0], ((_639[1] + _643[1]) + _661[1]) + _679[1], ((_639[2] + _643[2]) + _661[2]) + _679[2], ((_639[3] + _643[3]) + _661[3]) + _679[3]) * a_position)));\n    varying_TexCoord = (vec2(a_texCoord.x, a_texCoord.y - 1.0) * _MainTex_ST.xy) + vec2(_MainTex_ST.z, 1.0 - _MainTex_ST.w);\n    varying_Color = a_color;\n}\n\n","#version 100\n\nuniform mat4 u_world;\nuniform vec4 u_lightMapScaleOffset;\nuniform vec4 u_boneOffsetMatrix[288];\nuniform float u_lightCountFA;\nuniform vec4 u_lightPosFA[4];\nuniform vec4 u_lightColorFA[4];\nuniform vec4 u_lightAttenFA[4];\nuniform vec4 u_spotDirFA[4];\n\n\nuniform mat4 u_view;\nuniform mat4 u_viewInverse;\nuniform mat4 u_vp;\nuniform mat4 u_projection;\nuniform mat4 u_lightSpaceMatrix;\nuniform vec4 u_fogInfos;\nuniform vec3 u_fogColor;\nuniform float u_gameTime;\nuniform float u_aspect;\nuniform vec3 u_ambientLight;\nuniform vec3 u_lightDir;\nuniform vec3 u_lightColor;\nuniform vec3 u_shadowColor;\nuniform float u_shadowStrength;\nuniform float u_shadowBias;\nuniform float u_lightWidthPCSS;\nuniform float u_blockSizePCSS;\nuniform vec4 u_csmFarBounds;\nuniform vec4 u_shadowTilingOffsets[4];\nuniform mat4 u_csmLightSpaceMatrices[4];\nuniform vec3 u_SH[9];\n\n\nuniform vec4 _TintColor;\nuniform vec4 _MainTex_ST;\nuniform float _Bright;\n\n\nattribute vec4 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_boneWeight;\nattribute vec4 a_boneIndex;\nvarying vec2 varying_TexCoord;\nvarying vec4 varying_Color;\n\nvoid main()\n{\n    int _682 = int(a_boneIndex.x) * 3;\n    int _687 = _682 + 1;\n    int _691 = _682 + 2;\n    int _733 = int(a_boneIndex.y) * 3;\n    int _738 = _733 + 1;\n    int _742 = _733 + 2;\n    int _784 = int(a_boneIndex.z) * 3;\n    int _789 = _784 + 1;\n    int _793 = _784 + 2;\n    int _835 = int(a_boneIndex.w) * 3;\n    int _840 = _835 + 1;\n    int _844 = _835 + 2;\n    mat4 _583 = mat4(vec4(u_boneOffsetMatrix[_682].xyz, 0.0), vec4(u_boneOffsetMatrix[_687].xyz, 0.0), vec4(u_boneOffsetMatrix[_691].xyz, 0.0), vec4(u_boneOffsetMatrix[_682].w, u_boneOffsetMatrix[_687].w, u_boneOffsetMatrix[_691].w, 1.0)) * a_boneWeight.x;\n    mat4 _587 = mat4(vec4(u_boneOffsetMatrix[_733].xyz, 0.0), vec4(u_boneOffsetMatrix[_738].xyz, 0.0), vec4(u_boneOffsetMatrix[_742].xyz, 0.0), vec4(u_boneOffsetMatrix[_733].w, u_boneOffsetMatrix[_738].w, u_boneOffsetMatrix[_742].w, 1.0)) * a_boneWeight.y;\n    mat4 _605 = mat4(vec4(u_boneOffsetMatrix[_784].xyz, 0.0), vec4(u_boneOffsetMatrix[_789].xyz, 0.0), vec4(u_boneOffsetMatrix[_793].xyz, 0.0), vec4(u_boneOffsetMatrix[_784].w, u_boneOffsetMatrix[_789].w, u_boneOffsetMatrix[_793].w, 1.0)) * a_boneWeight.z;\n    mat4 _623 = mat4(vec4(u_boneOffsetMatrix[_835].xyz, 0.0), vec4(u_boneOffsetMatrix[_840].xyz, 0.0), vec4(u_boneOffsetMatrix[_844].xyz, 0.0), vec4(u_boneOffsetMatrix[_835].w, u_boneOffsetMatrix[_840].w, u_boneOffsetMatrix[_844].w, 1.0)) * a_boneWeight.w;\n    gl_Position = u_projection * (u_view * (u_world * (mat4(((_583[0] + _587[0]) + _605[0]) + _623[0], ((_583[1] + _587[1]) + _605[1]) + _623[1], ((_583[2] + _587[2]) + _605[2]) + _623[2], ((_583[3] + _587[3]) + _605[3]) + _623[3]) * a_position)));\n    varying_TexCoord = (vec2(a_texCoord.x, a_texCoord.y - 1.0) * _MainTex_ST.xy) + vec2(_MainTex_ST.z, 1.0 - _MainTex_ST.w);\n    varying_Color = vec4(1.0);\n}\n\n","#version 100\n\nuniform mat4 u_view;\nuniform mat4 u_viewInverse;\nuniform mat4 u_vp;\nuniform mat4 u_projection;\nuniform mat4 u_lightSpaceMatrix;\nuniform vec4 u_fogInfos;\nuniform vec3 u_fogColor;\nuniform float u_gameTime;\nuniform float u_aspect;\nuniform vec3 u_ambientLight;\nuniform vec3 u_lightDir;\nuniform vec3 u_lightColor;\nuniform vec3 u_shadowColor;\nuniform float u_shadowStrength;\nuniform float u_shadowBias;\nuniform float u_lightWidthPCSS;\nuniform float u_blockSizePCSS;\nuniform vec4 u_csmFarBounds;\nuniform vec4 u_shadowTilingOffsets[4];\nuniform mat4 u_csmLightSpaceMatrices[4];\nuniform vec3 u_SH[9];\n\n\nuniform mat4 u_world;\nuniform vec4 u_lightMapScaleOffset;\nuniform float u_lightCountFA;\nuniform vec4 u_lightPosFA[4];\nuniform vec4 u_lightColorFA[4];\nuniform vec4 u_lightAttenFA[4];\nuniform vec4 u_spotDirFA[4];\n\n\nuniform vec4 _TintColor;\nuniform vec4 _MainTex_ST;\nuniform float _Bright;\n\n\nattribute vec4 a_position;\nattribute vec2 a_texCoord;\nvarying vec2 varying_TexCoord;\nvarying vec4 varying_Color;\n\nvoid main()\n{\n    gl_Position = u_projection * (u_view * (u_world * a_position));\n    varying_TexCoord = (vec2(a_texCoord.x, a_texCoord.y - 1.0) * _MainTex_ST.xy) + vec2(_MainTex_ST.z, 1.0 - _MainTex_ST.w);\n    varying_Color = vec4(1.0);\n}\n\n","#version 100\nprecision mediump float;\nprecision highp int;\n\nuniform highp vec4 _TintColor;\nuniform highp vec4 _MainTex_ST;\nuniform highp float _Bright;\n\n\nuniform highp sampler2D _MainTex;\nuniform highp sampler2D _MaskTex;\n\nvarying highp vec2 varying_TexCoord;\nvarying highp vec4 varying_Color;\n\nvoid main()\n{\n    highp vec4 _209 = ((varying_Color * _Bright) * texture2D(_MainTex, varying_TexCoord)) * _TintColor;\n    highp vec4 _239 = _209;\n    _239.w = _209.w * texture2D(_MaskTex, varying_TexCoord).x;\n    gl_FragData[0] = clamp(_239, vec4(0.0), vec4(1.0));\n}\n\n","#version 100\n\nuniform mat4 u_view;\nuniform mat4 u_viewInverse;\nuniform mat4 u_vp;\nuniform mat4 u_projection;\nuniform mat4 u_lightSpaceMatrix;\nuniform vec4 u_fogInfos;\nuniform vec3 u_fogColor;\nuniform float u_gameTime;\nuniform float u_aspect;\nuniform vec3 u_ambientLight;\nuniform vec3 u_lightDir;\nuniform vec3 u_lightColor;\nuniform vec3 u_shadowColor;\nuniform float u_shadowStrength;\nuniform float u_shadowBias;\nuniform float u_lightWidthPCSS;\nuniform float u_blockSizePCSS;\nuniform vec4 u_csmFarBounds;\nuniform vec4 u_shadowTilingOffsets[4];\nuniform mat4 u_csmLightSpaceMatrices[4];\nuniform vec3 u_SH[9];\n\n\nuniform mat4 u_world;\nuniform vec4 u_lightMapScaleOffset;\nuniform float u_lightCountFA;\nuniform vec4 u_lightPosFA[4];\nuniform vec4 u_lightColorFA[4];\nuniform vec4 u_lightAttenFA[4];\nuniform vec4 u_spotDirFA[4];\n\n\nuniform vec4 _TintColor;\nuniform vec4 _MainTex_ST;\nuniform float _Bright;\n\n\nattribute vec4 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nvarying vec2 varying_TexCoord;\nvarying vec4 varying_Color;\n\nvoid main()\n{\n    gl_Position = u_projection * (u_view * (u_world * a_position));\n    varying_TexCoord = (vec2(a_texCoord.x, a_texCoord.y - 1.0) * _MainTex_ST.xy) + vec2(_MainTex_ST.z, 1.0 - _MainTex_ST.w);\n    varying_Color = a_color;\n}\n\n","#version 100\n\nuniform mat4 u_world;\nuniform vec4 u_lightMapScaleOffset;\nuniform mat4 u_bindTargetWorldInverse;\nuniform vec4 u_boneOffsetMatrix[288];\nuniform float u_lightCountFA;\nuniform vec4 u_lightPosFA[4];\nuniform vec4 u_lightColorFA[4];\nuniform vec4 u_lightAttenFA[4];\nuniform vec4 u_spotDirFA[4];\n\n\nuniform mat4 u_view;\nuniform mat4 u_viewInverse;\nuniform mat4 u_vp;\nuniform mat4 u_projection;\nuniform mat4 u_lightSpaceMatrix;\nuniform vec4 u_fogInfos;\nuniform vec3 u_fogColor;\nuniform float u_gameTime;\nuniform float u_aspect;\nuniform vec3 u_ambientLight;\nuniform vec3 u_lightDir;\nuniform vec3 u_lightColor;\nuniform vec3 u_shadowColor;\nuniform float u_shadowStrength;\nuniform float u_shadowBias;\nuniform float u_lightWidthPCSS;\nuniform float u_blockSizePCSS;\nuniform vec4 u_csmFarBounds;\nuniform vec4 u_shadowTilingOffsets[4];\nuniform mat4 u_csmLightSpaceMatrices[4];\nuniform vec3 u_SH[9];\n\n\nuniform vec4 _TintColor;\nuniform vec4 _MainTex_ST;\nuniform float _Bright;\n\n\nattribute vec4 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nattribute vec4 a_boneWeight;\nattribute vec4 a_boneIndex;\nvarying vec2 varying_TexCoord;\nvarying vec4 varying_Color;\n\nvoid main()\n{\n    int _694 = int(a_boneIndex.x) * 3;\n    int _699 = _694 + 1;\n    int _703 = _694 + 2;\n    int _745 = int(a_boneIndex.y) * 3;\n    int _750 = _745 + 1;\n    int _754 = _745 + 2;\n    int _796 = int(a_boneIndex.z) * 3;\n    int _801 = _796 + 1;\n    int _805 = _796 + 2;\n    int _847 = int(a_boneIndex.w) * 3;\n    int _852 = _847 + 1;\n    int _856 = _847 + 2;\n    mat4 _591 = mat4(vec4(u_boneOffsetMatrix[_694].xyz, 0.0), vec4(u_boneOffsetMatrix[_699].xyz, 0.0), vec4(u_boneOffsetMatrix[_703].xyz, 0.0), vec4(u_boneOffsetMatrix[_694].w, u_boneOffsetMatrix[_699].w, u_boneOffsetMatrix[_703].w, 1.0)) * a_boneWeight.x;\n    mat4 _595 = mat4(vec4(u_boneOffsetMatrix[_745].xyz, 0.0), vec4(u_boneOffsetMatrix[_750].xyz, 0.0), vec4(u_boneOffsetMatrix[_754].xyz, 0.0), vec4(u_boneOffsetMatrix[_745].w, u_boneOffsetMatrix[_750].w, u_boneOffsetMatrix[_754].w, 1.0)) * a_boneWeight.y;\n    mat4 _613 = mat4(vec4(u_boneOffsetMatrix[_796].xyz, 0.0), vec4(u_boneOffsetMatrix[_801].xyz, 0.0), vec4(u_boneOffsetMatrix[_805].xyz, 0.0), vec4(u_boneOffsetMatrix[_796].w, u_boneOffsetMatrix[_801].w, u_boneOffsetMatrix[_805].w, 1.0)) * a_boneWeight.z;\n    mat4 _631 = mat4(vec4(u_boneOffsetMatrix[_847].xyz, 0.0), vec4(u_boneOffsetMatrix[_852].xyz, 0.0), vec4(u_boneOffsetMatrix[_856].xyz, 0.0), vec4(u_boneOffsetMatrix[_847].w, u_boneOffsetMatrix[_852].w, u_boneOffsetMatrix[_856].w, 1.0)) * a_boneWeight.w;\n    gl_Position = u_projection * (u_view * (u_world * ((u_bindTargetWorldInverse * mat4(((_591[0] + _595[0]) + _613[0]) + _631[0], ((_591[1] + _595[1]) + _613[1]) + _631[1], ((_591[2] + _595[2]) + _613[2]) + _631[2], ((_591[3] + _595[3]) + _613[3]) + _631[3])) * a_position)));\n    varying_TexCoord = (vec2(a_texCoord.x, a_texCoord.y - 1.0) * _MainTex_ST.xy) + vec2(_MainTex_ST.z, 1.0 - _MainTex_ST.w);\n    varying_Color = a_color;\n}\n\n"],"uniformBlocks":[{"name":5,"blockName":6,"size":36,"member":[{"memberName":1,"type":4,"byteOffset":0},{"memberName":0,"type":4,"byteOffset":16},{"memberName":2,"type":1,"byteOffset":32}],"hash":"3426E7247708F3D0948058DD711502E8"}],"strings":["_MainTex_ST","_TintColor","_Bright","_MainTex","_MaskTex","type_Material","Material"],"sourceAsset":{"name":"System::Effect::Effect3D","shaderProperties":[{"key":"_MainTex_ST","type":"Vector4","default":[1,1,0,0]},{"key":"_TintColor","type":"Vector4","default":[1,1,1,1]},{"key":"_Bright","type":"Float","default":[1]}],"textures":[{"key":"_MainTex","type":"Texture2D","default":"white"},{"key":"_MaskTex","type":"Texture2D","default":"white"}],"defaultRenderQueue":3000,"passes":[{"lightMode":"ForwardBase","vs":"./Effect3D.vertex.hlsl","ps":"./Effect3D.pixel.hlsl","compileFlags":["Particle","Line","Trail","Skin","SkinnedAnimation"],"useMaterialRenderStates":true,"renderStates":{"blendOn":true,"blendSrc":"SRC_ALPHA","blendDst":"ONE","cullOn":false,"cullFace":"BACK","depthWrite":false}}],"editorInfo":{"assetVersion":2}}}